{"files":{"fileList":[{"filename":"Alert\/Services\/SV081-MatchSafeguardsProfile\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service schema is not in use. Refer to Integration schema:\n\nsoa\\soa_servicemodel_int\\IntegrationServices\\Safeguards\\Messages\n\n## Service Behaviour\nThis service schema is not in use. Refer to Integration schema:\n\nsoa\\soa_servicemodel_int\\IntegrationServices\\Safeguards\\Messages\n\n## Service Variants\nThis service schema is not in use. Refer to Integration schema:\n\nsoa\\soa_servicemodel_int\\IntegrationServices\\Safeguards\\Messages\n\n## Service Dependencies\nThis service schema is not in use. Refer to Integration schema:\n\nsoa\\soa_servicemodel_int\\IntegrationServices\\Safeguards\\Messages\n\n## Service Composition\nThis service schema is not in use. Refer to Integration schema:\n\nsoa\\soa_servicemodel_int\\IntegrationServices\\Safeguards\\Messages\n\n## Service Flow\nThis service schema is not in use. Refer to Integration schema:\n\nsoa\\soa_servicemodel_int\\IntegrationServices\\Safeguards\\Messages\n\n## Transformation\nThis service schema is not in use. Refer to Integration schema:\n\nsoa\\soa_servicemodel_int\\IntegrationServices\\Safeguards\\Messages\n\n## Service State Management Decisions\nThis service schema is not in use. Refer to Integration schema:\n\nsoa\\soa_servicemodel_int\\IntegrationServices\\Safeguards\\Messages\n\n"},{"filename":"Alert\/Services\/SV298-RegisterProposedModifiedPersonAlert\/V2.0\/XSD\/README.md","contents":"## Service Usage\nIn CR4 the service usage scenario will allow Central Health to be the user issuing service a request via Websphere Process Server to CMAL for performing one of the above mentioned functions. As per the request CMAL will provide an asynchronous acknowledgement response and any further related notifications if requested.\n\n## Service Behaviour\nThis service follows an asynchronous request and response pattern. Its asynchronous response may contain multiple responses. The service response is not tied to any time outs. This service responds with error conditions as specified in section 4 Return Codes and Messages. \n\n## Service Flow\nA user system invokes Register Proposed Modified Person Alert service on the provider system;\nProvider system receives the request and asynchronously responds with Register Proposed Modified Person Alert Response with a PAL Proposal Id.\nIf the request has Require Notification Of Progress set to TRUE the provider system will send notifications to notify any lifecycle change until the proposal is APPROVED, REJECTED or WITHDRAWN.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\n1. In case provider encounters an exception scenario an asynchronous warning message will be sent as per section 4 Return Codes and Messages\n\n## Service State Management Decisions\nNo state management required\n\n"},{"filename":"Alert\/Services\/SV367-RetrieveMovementAlertCheck\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be engaged by GVP within the visa application process to retrieve the MAL status enquiry.\n\n## Service Behaviour\nThis service interacts directly with the CMAL System to retrieve the MAL status enquiry from the CMAL system for a given party Identifier and Identifier type. The service response includes the CMAL status details including MAL status flag. The service is a pseudo synchronous service. In the event the supplied Identifier cannot be resolved to CMAL recognised Identifier type an exception is returned. An exception is also returned of CMAL could not find the Mal status retain for the supplied Identifier.\n\n## Service Composition\nThe Services receives the PartyIdentifiers or PartyRoleIdentifiers which ever choice group information is supplied and retrieves the MAL status details from CMAL. The MALstatus can be retrieved within a given EnquiryContext if the consumer prefers to retrieve in which case the context details are also supplied to CMAL for retrieving.\n\n## Service Flow\nA service request is initiated when a request for RetrieveMovementAlertStatus is received for a requested PartyIdentifier and Type or alternatives for a a CMAL recognised PartyRoleIdentifier and PartyRoleIdentifier Type.\nThe Service Validates the Consumer message and once the message is valid transforms the message to CMAL specific message format.\nCMAL responds back with the MALStatus details including the MALStatusCode and relevant Alerts if applicable. In the event of a CMAL error the CMAL error is mapped onto the enterprise exception and returned back to the consumer. (Ref Alternate Flow AF1). Also in the event CMAL was unable to provide the response within the specified time frame a timeout message is generated and the consumer receives a time out exception response. (Ref Alternate Flow AF2).\nThe Service Validates the CMAL response and transforms the CMAL response into the service response\nThe Service Response message is returned back to the consumer as directed by the consumer.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when CMAL is unable to successfully respond to the MALStatus Enquiry and returns back an error message. The errors reported can be of the nature of system errors, validation errors, processing errors or data unavailability errors (Ref Section 4 Return Code ALRT00003 to ALRT00006). The Error response is mapped to an enterprise exception message and returned back to the consumer. Thus SV367 service completes with an exception response to the consumer.\nSv367 makes a successful call to CMAL for a given party\/Partyrole Identifier.\nCMAL response RetrieveMALStatusResponse was an exception response.\nCMAL exception is transformed to the SV367 exception response and returned back to the consumer.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV367.MSG-E02 to the consumer.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Alert\/Services\/SV399-RegisterCriminalHistoryCheck\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service is used to request an external organsiation to conduct a criminal history police check on a person\n## Service Behaviour\nThe consumer makes a NPHC SV399 request and receives a synchronous acknowledgement ; the consumer will then need to make a different call (SV400) to retrieve the NPHC result X number of minutes after the acknowledgement. The provider does not call back and provide results or errors.\n## Service Flow\nA consumer will send a SV399 reques to the ESB which will transform into a NPCS CheckSubmitRequest message. The CheckSubmitRequest message is sent to NPCS visa the WSGW. NPCS will return an acknowledgement response which is also transformed into a standard DIBP acknowledgement.\n## Transformation\nThe SV399 request message is transformed using SV399_RegisterCriminalHistoryCheckRequest.xsl into a NPCS CheckSubmitRequest message\n"},{"filename":"Alert\/Services\/SV400-RetrieveCriminalHistoryCheckStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will send off a request to an external organisation called National Police Checking Service (NPCS) to get a person's criminal history.\n## Service Behaviour\nThe consumer of this service will pass in a number of search criterias based upon this services mandatory required fields, the request is then transformed into a NPCS xml format called GetCheckResultRequest before being sent.\n## Service Flow\nConsumer sends the request to ESB which will transform into a NPCS GetCheckResultRequest message. The GetCheckResultRequest message is sent to NSS via the WSGW. NSS may respond with a matched check for the person or error from the CheckSubmitRequest request or Check not yet complete\n## Transformation\nXSLT RetrieveCriminalHistoryCheckStatusRequest is used to tranformed into GetCheckResultRequest\n"},{"filename":"Alert\/Services\/SV415-MatchRiskProfile\/V7.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to match an applicant against risk profiles and models contained within various risk systems. The response will provide treatment advice to the VPO or CPO on what further action is required for this visa or citizenship application.\n## Service Behaviour\nThe consumer provides CVOR with information about the visa or citizenship application, and other historical information known to the department. CVOR makes subsequent service calls to Safeguards, RSS and GOIS systems and then consolidates the responses from these systems into the SV415 response message.\n\nNote: As at the time of writing (28\/09\/2017) schema validation is turned off for the incoming request messages.\n## Service Composition\n\n\n## Transformation\nThe SV415 message is transformed within the CVOR java code into a SV081 provider message which is consumed by Safeguards.\n"},{"filename":"Alert\/Services\/SV556-DetermineTravelAuthorityRisk\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to perform risk assessment on electronic travel authority (ETA) visa applications.\n## Service Behaviour\nThe provider invokes a SV415 service call with the data from the SV556 request. The SV415 response forms part of the SV556 response.\n## Transformation\nTransformation exists on the ESB between external ETAS SV556 and internal enterprise messages.\n"},{"filename":"Alert\/Services\/SV601-ReplicateRiskProfile\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service is to allow CMAL to replicate PAL and DAL identityand document data to Future Traveller via the ESB. Only the data required for matching will be replicated. Data describing alert types, treatment, history, etc will nto be replicated.\n## Service Behaviour\nSV601.1 CMAL will replicate in real time, one message per PAL\/DAL and send to ESB\nSV601.2 ESB will process and deliver data to Future Traveller\nSV601.3 A response will be sent back to CMAL of outcome of replication\n\n"},{"filename":"Alert\/Services\/SV603-MatchEntityOfConcern\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to perform Entity Matching of a particular person of interest. \nVisa information must be provided to match against the search criteria.\nThe search criteria includes matching against various contact information, bio details or business name.It will determine whether the visa application matches existing entities of concern.\n\n## Service Behaviour\nMatch Strength is used to capture whether each entity match is low, medium or high. \nMatch strength is determined by the following set of rules:\n Why the entity is in the system, e.g. to what type of business event is the entity linked.\n Degree of Separation of the applicant, which owns the entity that has been matched from the applicant associated with the event to which the entity is linked.\n The amount of time the entity has been identified as being of integrity concern.\n Relationship between owner of entity and principal applicant on linked event.\n\n"},{"filename":"Alert\/Services\/SV604-DetermineCharacteristicsRisk\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is to determine the level of evidence required for a visa applicant. At this stage the service is only being used by students. \nFor example, if the applicant is a low risk than additional documentation such as bank statements will not be required. If the applicant is a high risk than bank statements will be required. \n\n"},{"filename":"Alert\/Services\/SV607-DetermineApplicationRisk\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service is designed to support entity matching for IRIS applications through CVoR.\nIt determines the risk level for an application in a request\/response asynchronis transaction.\n\n## Service Behaviour\nEnhancements will be made to the IRIS to support risk checking against CVOR \/ GOIS. This will be achieved by routing ICCI format messages via the ESB, with the ESB transforming the new SV607 (Determine Application Risk) messages to SV415 (Match Risk Profile) service requests against CVOR. IRIS changes to hold additional OIS data on SDP files within IRIS. IRIS changes to display results of risk check to users. IRIS to provide support for manually triggering a risk check via the IRIS UI.\n"},{"filename":"Alert\/Services\/SV609-NotifyIntegrityEventUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will notify GOIS of (summarized) integrity entries for a number of categories such as Visa Cancellations , Protection Visa applications, IRIS Refuge and Humanitarian Visa applications \n\n\n\n\n## Service Behaviour\nCANX sends SV449 and is transformed into SV609 and forwarded to GOIS\nICSE sends SV448 amd is transformed into SV609 and forwarded to GOIS\nTRIPS sends 454 and is transformed into SV609 and forwarded to GOIS\n\nThe service consolidates and sends a single integrity indcident to GOIS after applying filters and passing summarised information for recording events in GOIS. \n\nThis is an asychronis service.\n## Service Variants\n'None'\n## Service Dependencies\n'None'\n"},{"filename":"Alert\/Services\/SV609-NotifyIntegrityEventVisaApplication\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service is published by visa processing systems to notify subscribers when an application has been lodged. The payload is intended to contain information which may be useful for integrity matching (eg. client roles, history, related contacts etc).\n## Service Behaviour\nThis service follows the standard notification pattern. The publisher creates a request messages and receives an acknowledgement from the ESB. There is no message returned from the consumer to the provider.\n## Transformation\nTransformation exists on the ESB between enterprise and ICSE provider messages. Conditional filtering exists based on the permission type, service code or application information.\n"},{"filename":"Alert\/Services\/SV614-RetrieveAgentIntegrityStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used by CSP to retrieve the Integrity Status of an Agent from GOIS and then displays. CSP provides hyperlink to GOIS using GOIS Client ID.\n## Service Behaviour\nCSP retrieves data from GOIS. CSP displays data with hyperlink to GOIS using the GOIS_CLIENT_ID.\n"},{"filename":"Alert\/Services\/SV625-NotifyAlertMatch\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis services notifies when an alert against a person of interest or a document has been matched at the border.\n## Service Flow\n1. AMS sends an AMSNotificationRequest.xsd message to the ESB\n2. The ESB transforms the AMSNotificationRequest.xsd message into a SV625 message\n3. The transformed message is then sent onto subscribers\n## Transformation\nAMS Provider messages are transformed on the ESB into SV625 enterprise messages. When routing the SV625 message to AGD a further filter transformation is run which drops information AGD is not interested in.\n\n"},{"filename":"Alert\/Services\/SV638-NotifyVisaApplicationRiskCheck\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service is designed to notify consumers of risk check status for a visa application. The application can have a risk as well as every associated client. The service is also designed to notify if this risk is trending up or down.\n## Service Behaviour\nThis service is published from Risk using topics and subscriped by potentially many consumers.\n"},{"filename":"BusinessService\/Services\/SV346-RetrieveBusinessContextContainer\/V2.0\/XSD\/README.md","contents":"## Service Usage\neBusiness Attachments is a web application involved in the eLodgement process. Visa Applicants who have lodged eVisa online applications can attach files that are required to progress the assessment of their application.\n\nA batch process (EVITRM) sends attached files to be stored into TRIM. An attribute on the request to TRIM, informs TRIM where to store the document. This attribute is the Business Context Container ID. Prior to sending to TRIM, EVITRM requests the Business Context Container ID from the Visa processing system to which the related Visa application was lodged.\n\n## Service Behaviour\nBusiness Context Container ID must exist for successful completion of this sequence. Agreed design is that GVP will create a Business Context Container ID at lodgement. Attachments can only be created post-lodgement, so the Business Context Container ID should always exist. Current interaction with ICSE allows for the case where Business Context Container ID does not exist. This requires attachment processing to retrieve a new Business Context Container ID from TRIM when does not exist in ICSE and then update ICSE. If GVP is not guaranteeing the existence of a Business Context Container ID post-lodgement, then additional services will be required for these purposes.\nIf GVP has not received a Business Context Container ID at the time of this request, it should respond accordingly. Expected processing is that GVP will manage the creation of a Business Context Container ID, eBusiness batch processes will continue to periodically request the file number until it succeeds. Attachments will not be lodged to TRIM and therefore not be available in the GVP UI until GVP has successfully created the Business Context Container ID in TRIM. \nGVP will create one business context container per application, at lodgement time. If a business context container was not created at lodgement time, due to system error then GVP will create a business context container when this service is called. \n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Flow\n\nESB DP (HTTPS) implementation of Retrieve Business Context Container.\nProvided by ICSE, consumed by sfp-attachments from BR02.\nRetrieves an Application's Business Context Container ID from the application processing system if one exists at time of service invoke.\nService Pattern- Synchronous\nInput - Service Consumer, Business Service Identifier\nOutput - Information Messages, Warning Messages, Business Context Container Id, Business Context Type, Business Context Sub type, Business Context Id, Applicants List\nEach Person Applicant will have: Role Code, Party Identifiers, Bio Details (Given Name, Family Name, Name Type, DOB, COB), Citizenships.\nEach Organisation Applicant will have: Role Code, Party Identifiers, Bio Details (Org Name, Name Type).\nService behavior:\n(1) In rare occasions, the service will not return the BCC Id (this can happen when the TRIM service invoked by ICSE to create the BCC Id fails or times out)\n(2) The service will return all applicants in the application, including organisations, regardless of whether the BCC is present or not\n(3) The ICSE permission request number will always be returned under BusinessContextContainerId, regardless of whether the BCC is present or not; similarly, the BusinessContextType and subtype will also always be returned\n(4) The possible options for BusinessContextType are: VISA, NOMINATION, SPONSORSHIP, CITIZENSHIP \n(5) The possible options for BusinessContextSubtype are: CITIZENSHIP (for CITIZENSHIP ContextType) and ASSESSMENT (for all other ContextTypes)\n\n"},{"filename":"BusinessService\/Services\/SV497-NotifyBusinessServiceUpdate\/V3.0\/XSD\/README.md","contents":"## Service Usage\nThis service will send notification messages from DHUB to Online Account when an update occurs to a Business Service's Transaction Status or Correspondence Details.\nDHUB, upon receiving an update to a Business Service's Transaction Status via the existing business service update APIs or upon receiving an update to a Business Service's Correspondence information via EV30 will trigger DHUB to send a Notify Business Service Update Request message to Online Account containing information about the Business Service such as the Business Service's Transaction Status (Finalised) and Correspondence Information such as, Correspondence Sent time, Description, Delivery Channel, BCC, Document ID and Correspondence Address\/Contact details\n## Service Behaviour\n- if CDH client matching has not been executed and no client identifier is provided, execute client matching\n- add applicant to business service\n- execute auto processing for the added applicant: Health check, Biometrics check, CMAL check, Risk check, Security Referral, evaluate auto grant, application allocation. Note that not all these setps are required for all types of business services\n"},{"filename":"BusinessService\/Services\/SV503-ValidateBusinessServiceDetails\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service provides the ability to perform validate check whether a given transaction can proceed with payment from Online Account.\n\nThis service is triggered from Online Account to eVisa\/ELP.\n\nProvider Sequence List:\n1. Online Account requests ELP\/eVisas to validate the application\n2. eVisa\/ELP requests Visa Processing System (ICSE\/GVP) to prevalidate the requested message.\n3. eVisa\/ELP returns success\/fail to Online Account based on whehter the transactio passed validation or not\n\n## Service Behaviour\nOnline Account sends a service request to eVisa\/ELP to validate a given transaction to determine whether it can proceed with payment. \nOnce eVisa\/ELP performs the transaction validation check in Visa Processing System, it returns validation success\/fail to Online Account based on whether the transaction passed validation or not\n\nIt is an synchronous service with request and response.\n## Service Variants\nNone\n## Service Dependencies\nNone\n"},{"filename":"BusinessService\/Services\/SV505-RetrieveBusinessServiceSummary\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service provides the ability to import electronic\/paper Application Summary from CDH where lodgement was either from Online Lodgement, Visa Processing System (ICSE\/GVP\/IRIS)\nThis service is triggered from Online Account to CDH to allow the client to retrieve application at Post Lodgement still progress i.e not finalise yet to check for the application status, complete Online Health form, attach document etc.\nCDH will find the application in DHUB and advise Online Account finding result ie Application and related correspondence summary information.\nThe matching will be based on TRN, Client DOB\/Business Registration Id and Passport Number.\n\n## Service Behaviour\nOnline Account will send a request to CDH to import the application summary.\nCDH will find the associated Post Lodgement application and is YET to finalise for the requested client information and return the transaction details if match otherwise return an error message. \nThe matching will be based on TRN, DOB\/Business Registration Id and Passport Number.\n\nIt is a synchronous service with request and response.\n\nThe provider of this service is CDH.\nThe service is synchronous.\n\nThere are two types of inputs in the request:\n The business service id to uniquely identify a transaction (TRN or PRID). \n Primary applicant data to verify that the located application can be returned in the response (DOB, & passport details)\n\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Flow\nThis service is part of the scope of implementing import application functionality as part of the online account project for CR12.\n Users will be provided with the ability to import applications (including paper).\n\n Users will be asked to complete a simple form, the data they enter will be sent to CDH in the request of this new service. \n\n CDH will attempt to find the application and validate the applicant details entered. If a match is found then Business Service information is provided back in the response of this new service.\n\nRequest Data\nThe user will be asked for the following which will be populated in the request:\n A business service identifier (TRN or PRID)\n Primary applicant details including (applicant with role type of 1):\no Birth Date\no Travel document Id & country of issue\n\nResponse Data\nIf a match is found the snapshot of information in the response would be exactly what the CR10 SV497 notification request contains with the addition of the applicant data and transaction lodgement date.\n\n"},{"filename":"BusinessService\/Services\/SV589-AddBusinessServiceApplicantList\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows for additional applicants to be added to an application (visa or citizenship applications) after lodgement. After a visa or citizenship application has been lodged, clients can add additional applicants to the lodged application before a decision has been made on their original application and if the visa or citizenship allows additional applicants to be added after lodgement.\nFor a given business service, this service will add the applicants provided in the service request.\n\n## Service Behaviour\n- if CDH client matching has not been executed and no client identifier is provided, execute client matching\n- add applicant to business service\n- execute auto processing for the added applicant: Health check, Biometrics check, CMAL check, Risk check, Security Referral, evaluate auto grant, application allocation. Note that not all these setps are required for all types of business services\n"},{"filename":"BusinessService\/Services\/SV597-RetrieveBusinessServicesGroupDetails\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve miscellaneous details (correspondence, group leader, tour details etc) which are associated with a parent group application (eg. ADS600 cohort).\n## Service Behaviour\nThe consumer supplies a business service identifier to the provider. If no group can be found using that identifier, the ESB will return an enterprise informational error message ENTR00016.\n## Transformation\nTransformation exists on the ESB between enterprise and ICSE provider messages.\n"},{"filename":"BusinessService\/Services\/SV602-CreateExternalLogonDetails\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to create an ESS (External Security Services) account within ESS. This new account will then allow the user to access their specific applications or services within the Department.\n## Service Behaviour\nThis service interacts only withe ESS\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nNA\n## Service Flow\nNA\n## Transformation\nNone\n## Service State Management Decisions\nNone\n"},{"filename":"BusinessService\/Services\/SV605-NotifyDepartmentalUserIDDeactivation\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is designed to push the Deactivation of a User in the department immediately to those system's that require real time notification's for system revokes. This allows most systems to continue to use the LDAP cache for extended period of times and simply subscribe to this service in order to ensure deactivations are done in real time without refresh the cache.\n"},{"filename":"BusinessService\/Services\/SV626-RetrieveCancellationBusinessServiceList\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to create a list of Business Service Identifiers in Work Management. CANX group the IDs together to be viewed in a single screen in WMAN.\n## Service Behaviour\nA list of Business Identifiers is sent to CANX from WMAN along with a GroupIdentifier. CANX create the list of BSI and associate to the GroupIdentifier provided. The group identifier is sent back to WMAN with the option of a URL.\n"},{"filename":"BusinessService\/Services\/SV627-VerifyEmailContactMethodStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used as a security verification to determine whether the email address provided as a contact method has been verified by the user.\n"},{"filename":"BusinessService\/Services\/SV636-NotifyApplicationActionRequired\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to notify subscribers when action is required on a visa or citizenship application. The action required can be at the application (eg. payment required) or role (eg. biometrics required) level. In the case of a role action, it will always be in the context of a single application.\n## Service Behaviour\nThe service contains additional client information which is used to create a ghost record in online account in the instance where they do not know the client associated with the role identifier. This is common in cases where applicants have been added to an application post lodgement.\n## Service Flow\n1. The publisher sends a SV636 request message to the ESB.\n2. The ESB responds to the publisher with an generic acknowledgement message.\n3. The ESB sends the SV636 request message to the consumers.\n## Transformation\nICSE notifications use the ICSE provider message ICSENotification.xsd. This is transformed on the ESB into SV626 enterprise XML.\n"},{"filename":"BusinessService\/Services\/SV639-RetrieveVisaQuotaStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used to check the status of a particular country's visa quota. This check will occur at the point of visa application, to prevent ineligible applications from being processed.\n## Service Behaviour\nThis request is transformed into an SV081 for Safeguards. Safeguards returns a treatment id, which is then interpretted and transformed into either \"APPLICATION_EXHAUSTED\" or \"APPLICATION_AVAILABLE\"  in the resulting response.\n## Transformation\nA transformation exists on the ESB between enterprise and SV081 integration requests. \nA second transformation translates SV081 responses into enterprise responses.\n"},{"filename":"BusinessService\/Services\/SV652-NotifyApplicationState\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service is used to notify subscribers of significant state events (eg. applicant finalisation or applicant role updated) on visa and citizenship applications. The notification will always be a snapshot of an application and contain information about all applicants on an application.\n## Service Flow\n1. The publisher sends a SV652 request message to the ESB.\n2. The ESB responds to the publisher with an generic acknowledgement message.\n3. The ESB sends the SV652 request message to the subscribers.\n## Transformation\nICSE notifications use the ICSE provider message ICSENotification.xsd. This is transformed on the ESB into SV652 enterprise XML. \n"},{"filename":"Casemanagement\/Services\/SV091-CreateExceptionReferral\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows consumers to create an exception referral and specify the reason for the referral.\nThe referral is an action item that needs to be performed in the provider operational system.\n## Service Behaviour\nA consumer of this service provides the following data:\n Party Id\n Referral Type\n Referral Sub Type\n Channel\n Status\n Departmental Officer\no Given Name\no Family Name\no ID\n Created Date\n Reason for Referral\n Planned Completion Date\n Source Business Service\no Service Type\no Service Sub Type\no Service Sate Code\n Recipient Business Service\no Service Type\no Service Sub Type\no Service Sate Code\n\nA consumer of this service relies on ESB for an assured delivery and does not accept a response back.\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThis service is not a composite service, i.e. it is not composed of other services in the Service Portfolio. \n\n## Service Flow\n1. An event is generated by the Service Consumer which invokes the CreateExceptionReferralRequest service on the ESB;\n2. ESB passes the XML message unchanged through to CCMD&S\n3. No response message is supplied\n1.1.1 Alternate Flow 1 (AF1)\nThere are no alternative flows as no response is given and therefore no error is returned. \n\n## Transformation\nNo Transformations are performed.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Casemanagement\/Services\/SV157-NotifyDetentionStatusSummary\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is published by CDH for any interested part wanting to know about the Detention details for a client. The payload inlcudes the Service Number and CaseNumber for further investigations if required but the payload should be enough to enable full updates or subsequent calls required. The use of CDH rather than Siebel to publish this notiication summary is to allow the population of IDs (beyond the current souce of Siebels SCID) in the payload under the PartySystemIdentifierList. Related roles are not sent but any PSI linked to the party will be included.\n"},{"filename":"Casemanagement\/Services\/SV370-RequestImmigrationIntelligenceSearch\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows consumers to create an exception referral and specify the reason for the referral.\nThe referral is an action item that needs to be performed in the provider operational system.\n\n\n\n\n\n\n\n\n\n\n\n## Service Behaviour\nA consumer of this service provides the following data:\nParty Id\nReferral Type\nReferral Sub Type\nChannel\nStatus\nDepartmental Officer\nGiven Name\nFamily Name\nID\nCreated Date\nReason for Referral\nPlanned Completion Date\nSource Business Service\nService Type\nService Sub Type\nService Sate Code\nRecipient Business Service\nService Type\nService Sub Type\nService Sate Code\nA consumer of this service relies on ESB for an assured delivery and does not accept a response back.\n \n\n\n\n\n\n\n\n\n\n## Service Variants\nNone\n\n\n## Service Dependencies\n\n\n## Service Composition\nThis service is not a composite service, i.e. it is not composed of other services in the Service Portfolio. \n\n\n\n\n\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the CreateExceptionReferralRequest service on the ESB;\nESB passes the XML message unchanged through to CCMD&S\nNo response message is supplied\nAlternate Flow 1 (AF1)\nThere are no alternative flows as no response is given and therefore no error is returned. \n \n\n\n\n\n\n\n\n\n\n\n\n## Transformation\n\n\n## Service State Management Decisions\nNo state management.\n\n\n\n"},{"filename":"Casemanagement\/Services\/SV465-IssueImmigrationIdentityCard\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows consumers to issue Immigration Identity Cards to assylum seekers before they receive any other form of identification.\n"},{"filename":"Citizenship\/Services\/SV236-CreateCitizenshipTestParticipant\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows consumers to create an exception referral and specify the reason for the referral.\nThe referral is an action item that needs to be performed in the provider operational system.\n\n\n\n\n\n\n\n\n\n\n\n## Service Composition\nThis service is a not composite service, i.e. it is not composed of other services in the Service Portfolio. This service needs only one Perception provider call to complete.\n\n## Service Flow\nThe detail of the flow is as follows:\nService Consumer invokes service with CreateCitizenshipTestParticipantRequest input message on ESB\nESB sends the CreateCitizenshipTestParticipantRequest message to perception\nPerception executes the message transaction and returns the CreateCitizenshipTestParticipantResponse output message back to ESB\nESB returns CreateCitizenshipTestParticipantResponse output message to Service Consumer\n\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"Citizenship\/Services\/SV237-RecordCitizenshipTestResult\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows the results of a Citizenship Test Result to be broadcast to consumers once the test has been completed. \nThe execution of this system will occur once the client has completed the Citizenship test (in the case of an online test) or the officer has entered the test scores (in the case of a paper based test). \n\n## Service Behaviour\nThis service supports only the broadcasting of the citizenship test result once the score has been calculated. For online tests this will be immediately following completion of the test and for paper based tests will be once the officer has entered the test scores. \nA consumer of this service provides the following data:\n The Citizenship Appointment ID\n The Perception System User ID \n The date and time the test was completed or submitted. \n The Test Type.\n The Result of Pass, Fail or Fail - did not pass mandatory.\nA consumer of this service receives one of the following types of data:\n An acknowledgement that the Test result has been received successfully. \nor\n A single error message as specified in section : \nA consumer of this service is assumed to have the privileges to perform the recording of a test result. \n\n## Service Variants\nThis service has no service variants.\n\n## Service Dependencies\nCCMDS\n## Service Composition\nThis service is a not composite service, i.e. it is not composed of other services in the Service Portfolio. This service needs only one Perception provider call to complete.\n\n## Service Flow\nThe detail of the flow is as follows:\nService Provider (Perception) sends the RecordCitizenshipTestResultRequest input message on ESB\nESB returns a success message once it has successfully received the message from Perception (simulating an asynchronous message)\nESB sends the RecordCitizenshipTestResultRequest message to the CTMS portal. \nCTMS executes the message transaction and returns the RecordCitizenshipTestResultResponse output message back to ESB. \n\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"Citizenship\/Services\/SV575-RegisterCitizenshipApplication\/V3.0\/XSD\/README.md","contents":"## Service Usage\nThe service is used to lodge citizenship applications into the citizenship processing system which have been captured through online channels.\n## Service Behaviour\nThe service follows the standard lodgement pattern which includes creating the application, matching or creating the client, registering identity documents and performing risk checks.\n## Transformation\nTransformation exists on the ESB between enterprise and ICSE provider messages.\n"},{"filename":"Citizenship\/Services\/SV576-ValidateCitizenshipApplication\/V1.0\/XSD\/README.md","contents":"## Service Usage\nValidate Citizenship Application. This includes: \n- attempt at identifying the applicant(s) \n- applying validation rules as per business requirements (e.g. whether the applicant is eligible to apply for this application) \n- retrieving information required by online forms to determine workflows (e.g. specific warning to the applicant, specific page to be displayed to the applicant) \n- determine whether Form 80 is required for the applicant(s)\n"},{"filename":"Citizenship\/Services\/SV615-UpdateScheduledAppointment\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to request or update a client appointment with the department. The service can be used to request various appointment types (eg. Citizenship or ABF Cargo).\n## Service Behaviour\nThis service allows the consumer to request for an appointment schedule. The consumer may request for certain preferences within the request, for example, appointment before certain date or preferred weekend day.\n## Service Flow\n1. The consumer sends a request to the ESB. 2. The ESB transforms the message into an outbound JSON message. 3. The ESB sends the JSON message to the MSG gatway. 4. The MSG gateway makes the REST call. \n\nThe service supports both synchronous and asynchronous patterns.\n## Transformation\nTransformation exists on the ESB between ICSE provider and enterprise messages. Enterprise messages are transformed into JSON messages on the ESB.\n"},{"filename":"Citizenship\/Services\/SV615-UpdateScheduledAppointmentClient\/V3.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to call Qflow to create an appointment booking client within Qflow. Upon a successful processing a url text will be returned to the calling system, which allows the next step flow within the Qflow appointment booking process.\n## Service Behaviour\nQflow is an external system which uses JSON mesaging format. An xslt transform is required between xml and JSON message.\n## Service Variants\nwhen called from ICSE, a 2 step xslt transform will be required. \n\nThe first step is from ICSE xml into Enterprise SV615 xml\n\nThe second step is from Enterprise xml into JSON.\n"},{"filename":"Citizenship\/Services\/SV616-NotifyScheduledAppointment\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used by QFLOW to update an appointment booking. For BRJUN17 this service is used to schedule a Citizenship Apppointment, it may be expanded to include other appointments in future.\n## Service Behaviour\nThis service allows the consumer to update the status of a schedueled appointment requested, it may include the actual appointment date, time and status.\n## Service Flow\nThe consumer sends the request to the MSG gateway using JSON message which then transform into NotifyScheduledAppointment XML. ESB then transfrom the xml into BusinessTransactionRequest.\n## Transformation\nESB uses NotifyScheduledAppointmentRequest xslt to transform into BusinessTransactionRequest for ICSE.\n"},{"filename":"Citizenship\/Services\/SV619-NotifyScheduledAppointmentUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to notify subscribers of a status change (booked, cancelled, attended etc.) to an appointment which has been scheduled for a client.\n## Service Behaviour\nThe request payload will contain a party identifier and party identifier type which will be used by the ESB to filter which subscribers are sent the notification (eg. ICSE may only be interested in CID identifiers and SEIBEL in SCID identifiers).\n## Transformation\nTransformation exists on the ESB between the enterprise message and the ICSE ClientMaintenanceRequest provider message.\n"},{"filename":"Clearance\/Services\/SV630-SendBorderClearanceUnload\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to unload a clearance case from traveller whe it has been finalised (ie. the client has made or not made their expected movement across the border). Traveller will remove all of the related clearance data from the system and transfer it to terradata for long term storage.\n"},{"filename":"Clearance\/Services\/SV630-UnloadAlertMatchCase\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to unload alert match case data when a case has been finalised. Traveller will remove all of the related case data from the system and transfer it to the data warehouse for long term storage.\n"},{"filename":"Clearance\/Services\/SV637-NotifyGateExceptionEvent\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to notify consumers of exceptions that occur when using gates. The exceptions primarily indicate that they are not linked to any traveller at this stage.\n"},{"filename":"Clearance\/Services\/SV645-RetrieveConsolidatedEntityMovementSummary\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve information which is associated with the most recent expected movement record of a person.\n## Service Behaviour\nThe consumer inputs a party identifier which gets resolved by the provider to the most recent expected inbound movement record. This can be considered the primary key which is used to link to other entity records.\n## Transformation\nTransformation exists on the IIB between the enterprise message and a flat file structure.\n"},{"filename":"Clearance\/Services\/SV645-RetrieveInterventionMovementHistory\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve a person of interests previous dealings with the Department, specifically around movement related information. Primarily it will be used by intervention officers to to help them better understand the context and history of an intervention subject.\n"},{"filename":"Clearance\/Services\/SV647-NotifyInterventionCaseUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to notify subscribers of a status change to an intervention case.\n## Transformation\nTransformation exists on the ESB to strip the SOAP envelope and hardcode default namespace prefixes (eg. pidcore)\n"},{"filename":"Clearance\/Services\/SV648-RetrieveInterventionCase\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve the details of an intervention case and it's associated sub cases. Primarily it will be used by intervention officers to help them better understand the context around the Department's previous dealings with an intervention subject.\n"},{"filename":"Clearance\/Services\/SV651-NotifySelfAddressedClearanceStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to notifty consumers of the Self Assessment Import Clearance Status after they have lodged the Clearance.\n"},{"filename":"Container\/Services\/SV248-RetrieveElectronicContainer\/V1.0\/XSD\/README.md","contents":"## Service Usage\nProvides the ability to Retrieve and Electronic Container from TRIM via the RKS application.\n"},{"filename":"Container\/Services\/SV249-CreateElectronicContainer\/V4.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to create electronic storage containers which are required to store electronic document records in. The service current supports the creation of Administration File (ADF), Business Context (BCC), Client File (CLF), No Further Action and Inbox containers.\n## Service Behaviour\nThis service utilises a container bank solution which is a sub component of the RKS system. The container bank stores pre-defined containers which can be allocated in isolation from the provider system. When the container bank receives a request and the ServiceAction\/SyncContainerCreationFlag flag is set to \"true\", the RKS will search and match on the criteria specified by the consumer (container type, security classification and access control). Once matched, the container is set to \"allocated\" in the container bank. There is then periodic syncronisation between the container bank and the provider system.\n## Service Flow\nNormal Flow: \n\n1. Consumer invokes CreateElectronicContainer on ESB\n2. ESB transforms CreateElectronicContainerRequest to CreateContainerRequest\n3. ESB invokes RecordKeepingService.createContainer() on RecordKeeping component using CreateContainerRequest. \n4. Record Keeping Service relates the created container to other related information records using the list of provided information record ids.\n5. If No error occurs RKS.createContainer creates a new Container and returns an ContainerId in CreateContainerResponse.\n6. The ESB transforms CreateContainerResponse to CreateElectronicContainerResponse\n7. The ESB returns CreateElectronicContainerResponse to the consumer. \n\nAlternate Flow 1 (Security Error): \n\n1. Consumer invokes CreateElectronicContainer on ESB\n2. ESB transforms CreateElectronicContainerRequest to CreateContainerRequest\n3. ESB invokes RecordKeepingService.createContainer() on RecordKeeping component using CreateContainerRequest.\n4. RKS returns a security error if the user invoking the service does not have rights to create Container.\n5. The ESB returns SV249.MSG-E02 to the consumer.\n\nAlternate Flow 2 (Container Already Exists):\n\n1. Consumer invokes CreateElectronicContainer on ESB\n2. ESB transforms CreateElectronicContainerRequest to CreateContainerRequest\n3. ESB invokes RecordKeepingService.createContainer() on RecordKeeping component using CreateContainerRequest.\n4. The RKS returns a ContainerId and the response also contains a warning message\n5. The ESB maps the RKS response to CreteElectronicContainerResponse and returns the ContainerId and warning message to the consumer.\n\nAlternate Flow 3 (Database Unavailable):\n\n1. Consumer invokes CreateElectronicContainer on ESB\n2. ESB transforms CreateElectronicContainerRequest to CreateContainerRequest\n3. ESB invokes RecordKeepingService.createContainer() on RecordKeeping component using CreateContainerRequest.\n4. RKS returns a system error if problems with database connection occur. \n5. The ESB returns SV249.MSG-E01 to the consumer.\n\nAlternate Flow 5 (Related Records Error):\n\n1. Consumer invokes CreateElectronicContainer on ESB\n2. ESB transforms CreateElectronicContainerRequest to CreateContainerRequest\n3. ESB invokes RecordKeepingService.createContainer() on RecordKeeping component using CreateContainerRequest. \n4. Record Keeping Service creates the container successfully.\n5. Record Keeping Service encounters exception while relating the created container to other related information records using the list of provided information record ids.\n6. RKS returns successfully created containers Container Id with a warning message, with RWNG00210 code, giving reason of exception while relating container to other related information records.\n7. The ESB transforms CreateContainerResponse to CreateElectronicContainerResponse\n8. The ESB returns CreateElectronicContainerResponse to the consumer.\n## Transformation\nTransformation exists on the ESB between enterprise and RKS provider messages\n"},{"filename":"Container\/Services\/SV250-ModifyElectronicContainer\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThe service modifies electronic container metadata pertaining to the location of a paper file.The execution of this service is a step that is likely to occur when the custodian and\/or the physical location of a paper file changes. The consumers needs to provide title, current location and phsycial flag. An acknowledgement that the modification was successful or an enterprise error detailing why the update was unsuccessful is returned in the response. \n\nNote: The Service will allow input of any value for changing the current Location. However, it is likely that this will only work for exact matches where there are no duplicates. It is currently out of scope for GVP to build a table of likely locations, and performance is likely to prevent delivery of a list of possible locations from TRIM to the portal\n"},{"filename":"Correspondence\/Services\/SV007-DispatchStockVisaCorrespondence\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service triggers a correspondence dispatch message to ECS. This has been largely replaced by SV322.\n"},{"filename":"Correspondence\/Services\/SV322-GenerateAppointmentCorrespondence\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to generate correspondence pertaining to a client appointment which has been scheduled with the department.\n"},{"filename":"Correspondence\/Services\/SV322-GenerateCancellationCorrespondence\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to generate correspondence regarding cancellations.\n"},{"filename":"Correspondence\/Services\/SV322-GenerateSMSCorrespondence\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to send a standardised SMS message to consumers. This would be used in both context of a template id to have a standard message and a free form text message. There is also an option to have the correspodence saved in the current record keeping system.\n"},{"filename":"Correspondence\/Services\/SV322-GenerateStockCorrespondence\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service uses the Enterprise Correspondence Service (ECS) to generate standard correspondence using information from the message. In particular, this service will:\nGather data (if necessary);\nGenerate correspondence; and\nEmail the correspondence.\nAlthough the service is synchronous in responding with a correspondence id, the actual sending of the correspondence is asynchronous.\n\n\n\n\n\n\n\n\n\n\n## Service Behaviour\nThis service generates standard correspondence in the following steps:\nThe consumer calls the service with information that will allow ECS to generate and dispatch the correspondence;\nThe ESB will validate the message;\nIf ESB determines the message is erroneous it will send an error message back to the consumer; for example, if the XML is not compliant to the schema;\nIf ESB determines the message is correctly formed it will call an ECS API;\nECS will validate the template data and, if erroneous, will send an error message back to the consumer;\nIf ECS determines the message is correct it will send a success status back to ESB\nIf ECS determines the message is incorrect it will send an error status back to ESB\nESB will return the status to the consumer.\nIt is important to understand that the job of this service is to deliver the necessary data to ECS for it to generate and dispatch stock correspondence, but not to wait on the generation and dispatch of the correspondence. A success message back to the consumer only indicates that ECS has received the message and will process it at some stage; it does not indicate the success or otherwise of ECSs attempts to generate and dispatch the correspondence.\nThe service uses SOAP\/XML. A consumer of this service receives an Enterprise status message.\n\n\n\n\n\n\n\n\n\n## Service Variants\nNone\n\n\n## Service Dependencies\n\n\n## Service Composition\n\n\n\n\n\n\n\n## Service Flow\nThe Service Consumer which invokes the Dispatch Stock Correspondence service on the ESB;\nIf the consumers message is not well-formed then ESB will send an error to the consumer;\nIf the consumers message is well-formed according to the ESB then the DispatchStockCorrespondenceRequest message is transformed into the AutogenerateAndDispatchRequest message for ECS;\nIf ECS have a problem processing the message an error is sent back to the ESB;\nIf ECS can further process the message a success status is sent back to ESB. The success status indicates that ECS can process the message further and does not indicate that the message has either been generated into correspondence or that the correspondence has been dispatched.\nThe status is then returned to the consumer. If the consumer receives a success status then they should check later that the correspondence was generated and dispatched.\nOutside of this service an event will be returned to the consumer informing them of the actual outcome of the correspondence, e.g. Email dispatched.\nNote: The ECS web service XSD will not be one-to-one aligned with the SV322 XSD. Transformation will be required at the ESB level for:\nRequest message (transform from ESB version to ECS version). Should be limited to changing attribute names. Values to be unchanged.\nResponse message (transform from ECS version to ESB version). May require transformation on the error codes, but otherwise values to be unchanged.\nPlease refer to the ESB micro document for transformation details.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms errors into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return ENTR00007 to the consumer.\n\n\n\n\n\n\n\n\n\n\n\n## Transformation\n\n\n## Service State Management Decisions\nNo state management.\n\n\n\n"},{"filename":"Correspondence\/Services\/SV322-GenerateStockCorrespondence\/V5.0\/XSD\/README.md","contents":"## Service Usage\nThis service uses the Enterprise Correspondence Service (ECS) to generate standard correspondence using information from the message. In particular, this service will:\n1. Gather data (if necessary);\n2. Generate correspondence; and\n3. Email the correspondence.\nAlthough the service is synchronous in responding with a correspondence id, the actual sending of the correspondence is asynchronous.\n\n## Service Behaviour\nThis service generates standard correspondence in the following steps:\n1. The consumer calls the service with information that will allow ECS to generate and dispatch the correspondence;\n2. The ESB will validate the message;\n3. If ESB determines the message is erroneous it will send an error message back to the consumer; for example, if the XML is not compliant to the schema;\n4. If ESB determines the message is correctly formed it will call an ECS API;\n5. ECS will validate the template data and, if erroneous, will send an error message back to the consumer;\n6. If ECS determines the message is correct it will send a success status back to ESB\n7. If ECS determines the message is incorrect it will send an error status back to ESB\n8. ESB will return the status to the consumer.\nIt is important to understand that the job of this service is to deliver the necessary data to ECS for it to generate and dispatch stock correspondence, but not to wait on the generation and dispatch of the correspondence. A success message back to the consumer only indicates that ECS has received the message and will process it at some stage; it does not indicate the success or otherwise of ECSs attempts to generate and dispatch the correspondence.\nThe service uses SOAP\/XML. A consumer of this service receives an Enterprise status message.\n\n## Service Flow\n1. The Service Consumer which invokes the Dispatch Stock Correspondence service on the ESB;\n2. If the consumers message is not well-formed then ESB will send an error to the consumer;\n3. If the consumers message is well-formed according to the ESB then the DispatchStockCorrespondenceRequest message is transformed into the AutogenerateAndDispatchRequest message for ECS;\n4. If ECS have a problem processing the message an error is sent back to the ESB;\n5. If ECS can further process the message a success status is sent back to ESB. The success status indicates that ECS can process the message further and does not indicate that the message has either been generated into correspondence or that the correspondence has been dispatched.\n6. The status is then returned to the consumer. If the consumer receives a success status then they should check later that the correspondence was generated and dispatched.\nOutside of this service an event will be returned to the consumer informing them of the actual outcome of the correspondence, e.g. Email dispatched.\nNote: The ECS web service XSD will not be one-to-one aligned with the SV322 XSD. Transformation will be required at the ESB level for:\n Request message (transform from ESB version to ECS version). Should be limited to changing attribute names. Values to be unchanged.\n Response message (transform from ECS version to ESB version). May require transformation on the error codes, but otherwise values to be unchanged.\nPlease refer to the ESB micro document for transformation details.\n1.1.1 Alternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\n1. ESB transforms errors into Enterprise Error Message.\n2. ESB returns response with Enterprise Error payload.\n\n1.1.2 Alternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return ENTR00007 to the consumer.\n\n## Transformation\nTransformation exists on the ESB between ICSE provider notifications and enterprise xml\n"},{"filename":"Correspondence\/Services\/SV544-RetrieveBusinessServiceCorrespondenceElements\/V3.0\/XSD\/README.md","contents":"## Service Usage\nECS pull of correspondence elements based on letter Category.\n## Service Variants\nNone\n## Service Composition\n\n\n\n\n\n\n\n## Service Flow\n\n\n\n\n\n\n\n\n\n\n\n\n## Transformation\nTransformation exists on the ESB between ICSE provider and enterprise xml\n## Service State Management Decisions\nNo state management.\n\n\n\n"},{"filename":"Correspondence\/Services\/SV588-RetrieveBusinessServiceOutboundCorrespondenceItems\/V1.0\/XSD\/README.md","contents":"## Service Usage\nGiven a business service identifier (e.g. TRN, Permission Request), return all outbound correspondence for the business service (e.g. visa application, sponsorship application, nomination application, citizenship application).\n"},{"filename":"Document\/Services\/SV030-SearchEnterpriseDocuments\/V1.0\/XSD\/README.md","contents":"## Service Usage\nRetrieves the identify of documents that contain a text string matching the input string (ie a Google or unstructured search).\n"},{"filename":"EventNotification\/Events\/EV005-NotifyApplicantActivityOrDecision\/V3.0\/XSD\/README.md","contents":"## Service Usage\nThis event will be triggered by ICSE for notifying Visa Applicant Activity or decision. In SFP11 GVP and CDH are the only subscribers. This event will facilitate to update Consolidated Person and Organisation View in CDH by notifying creation\/deletion of associations between Agents and Business Dealings\/Contacts.\n\nIt also notifies following Alerts:\n\n AAT General Review\n AAT Migration Review\n AAT Refugee Review\n AAT IAA\n Legal Process Check \n Judicial Review \n Sanction Imposed \n\nThis event will be published using SV258 notification service. It will use VisaApplicantActivityOrDecision as the topic name for its publication.\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n"},{"filename":"EventNotification\/Events\/EV012-NotifySubscribedPartyBiographicDocumentUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis event notifies users of any change to the biographic's or the documents with the associated biographic's leaving the changes to other party updates such as religion, ethnicity and marital status and alert flags as un notified. This should only be used over other events when it's the change to biographic's and the documents which is of interest. This includes merges and splits if new names etc are added or removed. \nIt's also worth noting that it's usually proof of identity Documents and in the case of immigration a large proportion of passports and other travel documents that is held in CDH but is not exclusive to these. Other documents can be notified including driver's licences and other non-POI documents. The document type in the payload should be used as a reference for all expected documents.\n"},{"filename":"EventNotification\/Events\/EV012-NotifySubscribedPartyUpdate\/V10.0\/XSD\/README.md","contents":"## Service Usage\nThe service is used to notify changes to a specific subset of client information that is maintained by CDH (Client Data Hub). The published message will only contain the items of client information that have changed.\nThe service will be used:\n1. To asynchronously notify a subscribed party when Client information changes in the CDH.\n\n## Service Variants\n\n\n## Service Composition\nCDH will notify this event when any changes are made to Client information in the CDH from upstream systems, including ICSE, IRIS (C-IRIS) and TRIPS. The event is implemented as an asynchronous transaction.\nCDH will publish general information about the Event Header such as:\n- Event Code - This field will contain the hard-coded value EV012\n- Notification Date Time\n- Added By User Id\n- Event Date\n- Event Recorded Date (if applicable)\n- Event Additional Information\nCDH will publish only the subset of client information that has changed.\nData includes:\n Citizenship Details\n Contact Address\n Contact Email\n Contact Fax\n Contact Telephone\n Contact Person\n Contact Person Address\n Current Visa Details\n Ethnicity\n MaritalStatus\n Party Identifier\n Party Information\n PartyOfInterestNote\n Person Biodata\n Person Language\n Related Party Person Details\n Religion\n Address\n\n"},{"filename":"EventNotification\/Events\/EV014-NotifyExceptionCaseUpdate\/V2.0\/XSD\/README.md","contents":"## Service Usage\nNotification for when an Exception Case in CCMDS is updated.\n"},{"filename":"EventNotification\/Events\/EV017-NotifyPartyBusinessDealingUpdate\/V11.0\/XSD\/README.md","contents":"## Service Usage\nThe service uses the event notification pattern described in the Service Modelling Patterns document and is realised using the existing service SV258.\n## Service Behaviour\nThe service is used to publish status information that relates to a business dealing update. Once CDH is updated it will trigger EV017 to the broker which will then, in turn, signal the various subscribers. If the subscriber is CCMDS only provide notification when the Party has an active SCID (Siebel Client ID) and where the create\/modify did not originate from Siebel.\n\nWhen the subscriber is CMAL only provide notification where there has been a GVP application that has been created or updated.\n## Service Variants\nThe event has no variant. It is based on the publish-subscribe notification framework that can be used to publish events to different notification consumers.\n\nThe EV017-v04.0 Notify Party Business Dealing Update event requires the following publishers:\n\n- CDH (Client Data Hub)\n\nThis event has the following notification consumers:\n\n- CCMD&S (Compliance Case Management Detention and Settlement);\n- CMAL\n## Service Dependencies\nNone\n## Service Composition\n\n\nThe service is triggered when a partys record changes or is updated with regard to:\n\n- Case and Service Summary\n- Business dealings that including:\n-- Visa Applications\n-- Visa Cancellations\n-- Citizenship\n-- Sponsorship applications and agreement\n-- Nominations\n-- AOS\n-- Health\n-- Monitoring\n-- Other\n-- Visa entitlement verification\n-- Enforcement\n- Visa History (Grants) (XBusinessDealingCategory = 99)\n- Border Referrals\n- Security Referrals\n\nCDH will publish a business centric view of the event, which will primarily be the business dealing category and the id relating to the business. For some business dealings, such as those involve additional information. Only active identifiers will be sent by EV017. Both active and Inactive roles and relationships will be sent by EV017.\n## Service Flow\nThe service will be used in the following circumstances:-\n\n1. To notify consumers of updates to business dealings in CDH.\n\nNOTE: Messages to SIEBEL will be filtered as follows:\n\nSIEBEL will only receive ICSE Updates for PV (Business dealing Type - Protection) OR any updates from IRIS.\n"},{"filename":"EventNotification\/Events\/EV018-NotifyPartyCharacterUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nNotification for when changes in a Character Assessment is in progress.\n"},{"filename":"EventNotification\/Events\/EV019-NotifyPartyCharacterDecision\/V1.0\/XSD\/README.md","contents":"## Service Usage\nNotification for when a Character Assessment decision is recorded.\n"},{"filename":"EventNotification\/Events\/EV028-NotifyCitizenshipApplicationUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nNotification for when a Citizenship Application is Lodged or Outcome is Updated.\n"},{"filename":"EventNotification\/Events\/EV029-NotifyProductPaymentStatus\/V2.0\/XSD\/README.md","contents":"## Service Usage\nNotification for when a SAP Product Payment has changed. This includes the type of Product, the Amounts and currency as well as the financial details.\n"},{"filename":"EventNotification\/Events\/EV030-NotifyOutboundCorrespondenceStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to notify subscribers of details (status, recipients, identifiers etc) which have been sent or attempted to be sent by the publisher.\n## Service Composition\nDepending on the payload, this service may also compose into seperate SV317 (Notify Client Update) and SV510 (Notify Contextual Update) messages. The logic for this conditional flow is contained within the ESB.\n## Transformation\nTransformation exists on the ESB between enterprise and ICSE provider messages. Transformation also exists to faciliate conditional flow into SV317 and SV510 messages.\n"},{"filename":"Financial\/Services\/SV323-RetrieveProductPrice\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service retrieves the price of a specified product. The master list of these product prices is maintained in the DIAC implementation of SAP, and contains applicable prices in multiple currencies, for receipting purposes throughout the organisation.\nThe service is expected to be used by visa processing officers to assist them during the Visa application processing, by allowing the price of an item to be displayed. The price will be the one applicable at a specified point in time, and will be returned in all currencies applicable for the location provided in the service request.\nThe request will contain the identifier of the product for which a price is required, the Location for which returned currencies should be applicable, and the date at which the returned price should be relevant (referred to as the Key date).\nEach office has a limited set of currencies that may be proffered, at its location, as payment for a DIAC product. In the initial implementation, US dollars (USD) will always be returned as one of the returned set of currencies.\nThis service is part of a suite of revenue and receipting services being delivered by the Revenue Receipting project. It will support DIAC revenue streams that can be used in DIAC offices, both onshore and offshore. The functionality it delivers will initially be utilised by the Generic Visa Portal.\n\n## Service Behaviour\nThis service retrieves a price from the SAP based product catalogue. The price returned will be the one relevant at the provided date (Key date), and will be delivered in terms of all currencies applicable for the identified Location.\nThe retrieved data consists of:\nProduct description Material description - SAP description\nPrice A list of the product price in all currencies\napplicable for the Location.\nThe list is pairs of Currency code and the amount in that currency.\n\n## Service Variants\nNone\n## Service Dependencies\nThis service relies on the consumer identifying a unique node (branch point) in product catalogue tree, and an office location for currency selection.\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the RetrieveProductPrice service on the ESB.\nESB invokes the SAP.retrieveProductPrice service on SAP, passing RetrieveProductPriceRequest.xml without change.\nPrimary provider SAP executes the SAP.retrieveProductPrice service and returns RetrieveProductPriceResponse.xml to the ESB.\nESB returns the RetrieveProductPriceResponse.xml to the Service Consumer.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nPrimary provider SAP returns a specific error code to the ESB; see section 4 of this document for a full listing of Return Codes and Messages.\nESB transforms error code into the relevant Enterprise Error Message.\nESB returns response with Enterprise Error payload to the consumer.\nAlternate Flow 2 (AF2)\nIf the ESB raises an error before or while attempting to contact the primary provider, it will respond to the consumer with the relevant Enterprise Error payload. See section 4 of this document for a full listing of Return Codes and Messages.\n\n## Service State Management Decisions\nProvider system errors\nIf the provider system returns an error code at any stage of the service execution, the message flow will be stopped and the error returned to the consumer. This service will not return partial response messages.\nInvalid Product or Location identifier provided\nIf the SAP component of this service is called using an invalid Product identifier, a Departmental Location identifier, or an invalid Key Date, the message flow will be stopped and the error returned to the consumer.\n\n"},{"filename":"Financial\/Services\/SV468-CalculateBalancePayment\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows Visa Application processing systems to get the payment for Visas from SAP in a dynamic environment where pricing and structures of visas can change rapidly.\n## Service Behaviour\nThis service is a standard request response pattern that SAP provides to anyone processing visa application. Its critical in the lodgement of visas and in particular to the external facing applications.\n## Service Variants\nNA\n## Service Dependencies\nNA\n## Service Composition\nNA\n## Service Flow\nThis service utilises SAP as the backend only.\n## Transformation\nNone.\n## Service State Management Decisions\nNone.\n"},{"filename":"Financial\/Services\/SV469-CalculateProductPriceEstimate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service calculates the price based on the application data provided.\n"},{"filename":"Financial\/Services\/SV620-RetrieveInvoice\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve a VAC2 invoice attachment and details to be sent to the applicant with a cover letter in order for the applicant to make the VAC2 payment online.\n## Service Behaviour\nVAC2 Payment requested event is created in ICSE, ICSE calls ECS (SV322) with the details required for ECS to call SAP with this service.\nThis service will retrieve the VAC2 invoice attachment and details from SAP to send to the applicant with a cover letter in order for the applicant to make the VAC2 payment online.\n"},{"filename":"Financial\/Services\/SV633-GenerateInvoice\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used by consumers to request payment and generate an invoice for a product or service which has been provided by the department. Although product codes are required in the payload, the consumer maintains responsibility for defining the total amount payable.\n## Service Behaviour\nUpon creation of the invoice and for subsequent updates to the transaction, the provider will invoke a EV029-NotifyProductPaymentStatus.\n"},{"filename":"Health\/Services\/SV036-AssociateHealthCase\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service enables a user to associate a health case to a visa application. A Health Case can only be associated to one Visa Application at any single point in time. If a consumer needs to associate a Health Case with a different Visa Application, SV037-v01.0 should be used to disassociate the Health Case from the current Visa Application before invoking the Associate Health Case to Visa Application service.\nThis service must be invoked with a valid Visa Application identifier and Health Case identifier. \nThe execution of this service is a step that is likely to occur when a Visa Processing Officer (VPO) is reviewing a health case when making an assessment on the eligibility for a partys entitlement for a specific visa application. They will be required to link a health case to a visa if:\nThe visa application currently has no health case associated to it.\nThe visa application had an incorrect health case associated to it, which they have previously unlinked.\nA consumer of this service must possess the required privileges to perform the association.\n\n## Service Behaviour\nThis service associates a single health case for a party to a specific visa application. The service will ensure that a single health case is not associated with more than one visa application, and that the Visa Application that the health case is being associated actually exists. The service will also ensure that the party associated with the health case is the same party associated with the visa application.\nIf the visa application that the health case is to be associated to has been decided, the service will still proceed with the association process.\nThe service will allow a health case to be associated to a visa application even if the health case itself has been finalised. \n\n## Service Dependencies\nThis service requires that the Consumer has already called SV125-v01.0 Retrieve Health Case List in order to find a valid Health Case identifier and SV010-v01.0 Retrieve Visa Application to find a valid Visa Application Identifier.\n\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services in the Service Portfolio.\n\n## Service Flow\nService Consumer invokes service on ESB.\nESB transforms AssociateHealthCaseRequest into COBOL copybook IC_SV_LINK_HAPR_SRVC_I and sends it to ICSE.\nICSE executes CICS transaction and returns COBOL copybook IC_SV_LINK_HAPR_SRVC_O to ESB. \nESB transforms COBOL copybook IC_SV_LINK_HAPR_SRVC_O into AssociateHealthCaseResponse.\nESB returns AssociateHealthCaseResponse to Consumer.\nPotential Response Message Labels\nSV036.MSG-E01\nSV036.MSG-E02\nSV036.MSG-E03\nSV036.MSG-E04\n\n"},{"filename":"Health\/Services\/SV039-RemoveHealthCaseAssociation\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows the user to remove the association between a health case and a visa application. \n\nThis service must be invoked with a valid Health Case Identifier and Visa Application Identifier.\n\nThe execution of this service is a step that is likely to occur when a Visa Processing Officer (VPO) is reviewing a health case when making an assessment on the eligibility for a partys entitlement for a specific visa application. \n\n## Service Behaviour\nThis service removes the association between a single health case and a visa application. \n\nThe service will ensure that the Visa Application that is to be disassociated from the Health Case is actually currently associated with the same Health Case. In addition, the service will ensure that the Health Case identifier used to invoke the service relates to a valid Health Case.\n\nA consumer of this service is must have the required privileges to remove the association.\n\n## Service Flow\nFire and forget service, the consumer does not receive a response\n## Transformation\nICSE will output a provider message which will get transformed into the enterprise schema on the ESB\n"},{"filename":"Health\/Services\/SV105-CreateHealthCase\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows the user to create a health case for a specific person. The number of Health Cases that can be created for a person is not restricted by this service. \nA Health Case can be created without a corresponding Visa Application. The association of a Health Case to a Visa Application can be completed in the future by using SV036-v01.0 Associate Health Case to Visa Application.\nThe Health Case can be created with a corresponding Health Note and with zero or more Health Requirements. A user of this service must have the required privileges to create a Health Case\nThe execution of this service is a step that is likely to occur when a Visa Processing Officer (VPO) is making an assessment on the eligibility for a partys entitlement for a specific visa application. \nA health case is created for one of the following reasons:\nWhen there is a Visa Application for a party that does not have health requirements, and the client submits a Visa Variation that results in Health Requirements (X-Ray and\/or medical) it will necessitate a VPO to initiate a health case creation if there is no health case that is currently linked to this visa.\nMAL alerts can affect health and necessitate manual creation of a health case.\nAn examination date for a Health Requirement should only be specified and will be deemed valid if the Health Requirement contains at least one Health Requirement Status of Received (Code value 45).\nThis service can also indicate that the Health Assessment Portal is the master of the record it is sending to ICSE. ICSE then simply becomes a reference only for these records and may restrict or warn access when editing. The Service provides the ability for the Health Portal to indicate it is the master of the record. \n\n## Service Behaviour\nThis service will create a health case with optionally one Health Note and with a collection of health requirements.\nAn error message will be returned if a user of the service does not have the required privileges to create a Health Case. The appropriate error message will also be returned if the Health Case is not created with a valid person id.\nIf the Health Case is created with a Visa Application Identifier, the Health Case will be associated to the Visa Application by the service provider. An error message may be returned if the person associated with the Visa Application is not the same person associated with the Health Case\nA success return code will be returned if service has successfully created the Health Case.\n\n## Service Composition\nThis service is a composite service i.e. it is composed of other services within the Service Portfolio.\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Create Health Case service on the ESB;\nIf the CID is not supplied ESB invokes SV288 to retrieve the CID from CDH\nESB transforms CreateHealthCaseRequest into the ICSE HealthMaintenanceRequest\nESB calls the ICSE Health Maintenance API\nICSE returns the HealthMaintenanceResponse\nESB transforms the HealthMaintenanceResponse to a CreateHealthCaseReponse message, which is returned to the consumer\nAlternate Flow 1 (AF1)\nThe following execution flow describes the process that is to be taken if the CID does not exist in CDH. \nService Consumer invokes service on ESB\nIf the CID is not supplied, ESB invokes SV288 to retrieve the CID from CDH.\nSV288 contains no active CID, ESB returns an Error stating that no active CID exists on the record.\n\n## Service State Management Decisions\nProvider system errors\nIf either provider system returns an error code at any stage of the service execution, the message flow will be stopped and the error returned to the consumer. This service will not return partial response messages.\nInactive ICSE identifier used\nWhen the ICSE service is called using an inactive\/end dated identifier (i.e. an error is thrown by ICSE) the message flow will be stopped and the error returned to the consumer.\n\n"},{"filename":"Health\/Services\/SV106-RetrieveHealthCaseDetails\/V3.0\/XSD\/README.md","contents":"## Service Usage\nThis service retrieves all the detailed information pertaining to a health case for a given health case identifier (HealthCaseId). \nThe execution of this service is a step that is likely to occur when a Visa Processing Officer (VPO) is making an assessment on the eligibility for a partys entitlement for a specific visa application. The user may require the outputs of this service to perform health assessment activities as part of the process of reviewing an application. \nA user of this service must have valid authorization to view all data elements that is returned by the service.\n\n## Service Behaviour\nThe service retrieves health case information for a given health case Id. The service can return details of a health case that has been finalised. Hence the retrieval of a Health Case and its associated entities are not restricted by any date boundaries. \nThe service returns attributes associated with a:\nHealth Case\nHealth Case Requirement(s)*\nHealth Case Status\nHealth Outcome(s)*\nHealth Note(s)*\nVisa Summary*\n* Indicates an optional entity. I.e. The Health Case does not require these entities for its existence. \nNote: A visa summary is returned only if the Health Case is associated to a visa application. A Health Case can only be associated to one visa application at any point in time (See SV036-v01.0) therefore only a single visa summary will be returned. The visa summary includes the unique visa application identifier and its associated latest milestone information. Also the service code and the milestone information will only be returned by the ICSE API if the mode is Health.\nThe statuses of various health requirements are currently stored in two separate repositories. In order to retrieve the complete set of statuses for a health case, the service interacts with two distinct service providers. See 1.3 Service Providers.\nThe service will return an error if a user of this service does not have access to view the complete data set. \nA warning will be returned if the service could not create the response in its entirety because the secondary service provider could not fulfil its duties or the provider repositories are out of sync.\nThis service is being changed to include MOC Costs and a prejudicial indictor. The service is also being changed to use XML rather than copybook. \n\n## Service Composition\nICSE is responsible for returning one health case summary for a specific Health Case. \nIt is responsible for returning the following data set\nHealth Case Summary attributes (See 1.1.4.1.4 Variant Message Object Model)\nA summary of the Latest Significant Health Outcome\nIf a user has insufficient privileges to view the data contained within the response. ICSE should return the appropriate error message.\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Retrieve Health Case Details service on the ESB;\nESB transforms RetrieveHealthCaseSummaryRequest into RetrieveApplicationRequest and sends it to ICSE\nICSE gathers the health cases and returns RetrieveApplicationResponse\nESB transforms RetrieveApplicationResponse into RetrieveHealthCaseSummaryResponse. At this point the response is partially complete.\nESB performs complex logic \nESB creates eHealth request message RetrieveEHealthHealthCaseDetailsRequest and sends request to eHealth if the provider code is in 2, 5, 6 or 7.\neHealth executes retrieval function and returns RetrieveEHealthHealthCaseDetailsResponse XML to ESB.\nESB merges results\nESB invokes SV001.v01-1.\nESB creates searchPartyRequest message\nESB sets searchPartyRequest.PartyIdentifier.Identifier = RetrieveHealthCaseDetailsResponse.PersonId\nESB sets searchPartyRequest.PartyIdentifier.IdentifierType = CID\nESB sends SV001.v01-1 request \nCDH executes transaction CDH-002 and ESB receives response SearchPartyResponse\nESB extracts enterprise party identifier from response ESB returns RetrieveHealthCaseDetailsResponse to Consumer\nThe eHealth response is merged into the RetrieveHealthCaseSummaryResponse\nESB returns RetrieveHealthCaseSummaryResponse to the consumer.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms ICSE Error into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV106.MSG-E00 to the consumer.\nAlternate Flow 3 (AF3)\nDescribes the execution path that occurs when the primary provider (ICSE) returns with one or more warning or informational messages\nESB includes all warning or informational messages within response payload.\nESB returns RetrieveHealthCaseDetailsResponse to Consumer\nInformational and Warning messages that are returned by ICSE that are to be returned to the consumer and do not stop the execution of the service\nAlternate Flow 4 (AF4)\nThis alternate flow traces the same execution path as described in the successful Service Flow. However, all unsuccessful return codes \/ messages that are returned by eHealth are to be categorised as warnings. As such, the ESB should map the code and include the warning within the payload.\nAlternate Flow 3 (AF3)\nThe alternate flow depicts the execution path that occurs when a HealthRequirement inconsistency is discovered between the result set returned by the primary provider (ICSE) or the secondary provider (eHealth). That is, where the ESB detects that there is a missing HealthRequirement in one of the returned result sets.\nESB calls ICSE and transforms the response into the health details message\nESB performs complex logic\nESB creates eHealth request message RetrieveEHealthHealthCaseDetailsRequest and sends request to eHealth.\neHealth executes retrieval function and returns XML to ESB.\nESB executes complex transformation to merge results\nESB detects that either ICSE or eHealth has a missing HealthRequirement\nESB includes new Warning message and code that informs the consumer which provider result set the inconsistency was detected within.\nESB returns RetrieveHealthCaseDetailsResponse to Consumer\nThe following warning messages are to be used when an inconsistency between result sets is detected within the ESB\nNOTE: Within a single provider scenario. If the response is received after the service consumer has timed out. The ESB is to still follow one of the defined service flows. That is, the response that would have been returned if a timeout didnt occur has to still be returned to the consumer. Therefore, it will be left up to the consumer to handle the delayed \/ timed out responses. However, within a multiple service provider scenario the ESB will decide whether to return the partially completed response or disregard the entire transaction. This decision has to be made on a service by service basis. In the above situation the ESB returns the partially completed response when the second service provider times out.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Health\/Services\/SV107-ModifyHealthCase\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows a user to modify a specific Health Case and its associated entities (Health Requirement(s), Health Requirement Status and Health Note(s)).\nA Health Case can be updated if it is associated to a Visa Application that has been decided. It can also be reversed if the health event had been previously finalised. \nThe request should only be populated with the information that a user wants to change \/ update within a Health Case. There are no restrictions on the number of Health Requirements or Health Requirement Statuses that can be associated (appended) to a Health Case. Health Requirements and statues can still be changed or added to a Health Case when the Health Case has been finalised.\nThe service does not support a delete of any entity that can be modified by this service.\nThe Visa Application Identifier specified within the modify request message should be the same identifier that is currently associated with the specific Health Case. It should be noted that specifying a different Visa Application Identifier will not result in a new Visa Application to Health Case association. A consumer should use SV037-v01.0 to disassociate a Health Case from a Visa Application, and subsequently use SV036-v01.0 to associate a different Visa Application to the Health Case if the consumer wants the Health Case to be linked to a different Visa Application.\nA user of this service must have the required privileges to update a Health Case.\nA Health Case is considered to be modified under the following circumstances:\n Health Case Notes are added\/amended\n Health Case is finalised\n Health Case details changed\no NOTE: The Health Case Id, Case Identifier and Visa Application Id cannot be modified.\no The standard audit attribute, UpdatedTimestamp should not be modified.\n Health Requirement is created or updated\n Health Requirement Status is created or updated\n Health Outcome is created or updated\n Health Requirement Notes are added\/amended\n Reverse Finalised Health Event Flag\n\nAn examination date for a Health Requirement should only be specified and will be deemed valid if the Health Requirement contains at least one Health Requirement Status of Received (Code value 45).\n\nThe execution of this service is a step that is likely to occur when a Visa Processing Officer (VPO) is making an assessment\n\n## Service Behaviour\nThe service updates the details associated with a Health Case. It will attempt to update the Health Case with all information that has been passed to it within the request message. Entity identifier attributes, such as the Health Case Id, Visa Application Id and Case Identifier will not be updated.\nAll Health Requirements, Health Requirement Statuses, Health Outcomes and Health Notes that have been included within the modification request will either be updated if they currently exist or created if they dont.\nThe service will check to ensure that the Visa Application Id passed in via the request is the same Visa Application Id currently associated with the Health Case. If the Visa Application Id is found to be different, the service will return an error.\nA user of this service must have the required privileges to modify a health case. An error message may be returned if the service determines that the user is not authorised to modify a Health Case.\n\nA success return code will be returned if the service has successfully modified the Health Case.\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\n\n## Service Flow\n1. An event is generated by the Service Consumer which invokes the Modify Health Case service on the ESB;\n2. ESB transforms ModifyHealthCaseRequest into a HealthMaintenanceRequest and sends it to ICSE\n3. ICSE executes a CICS transactions and returns a response\n4. ESB transforms HealthMaintenanceResponse into a ModifyHealthCaseResponse to the consumer\n\n## Service State Management Decisions\nProvider system errors\nIf either provider system returns an error code at any stage of the service execution, the message flow will be stopped and the error returned to the consumer. This service will not return partial response messages.\nInactive ICSE identifier used\nWhen the ICSE service is called using an inactive\/end dated identifier (i.e. an error is thrown by ICSE) the message flow will be stopped and the error returned to the consumer.\n\n"},{"filename":"Health\/Services\/SV125-RetrieveHealthCaseList\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is now decommissioned. \n\nThis service retrieves a collection of health case summaries pertaining to a party or, retrieves a single health case summary for a particular health case. The summary information provided enables a user to determine if they wish to retrieve a health case it its entirety. (See SV106-v01.0)\n\nA consumer of this service must ensure that the service is invoked with either a Health Case Identifier or a Party Identifier. The service will ensure that the consumer is authorized to retrieve and thus view the information that is returned by the service.\n\nThe execution of this service is a step that is likely to occur when a Visa Processing Officer (VPO) is making an assessment on the eligibility for a partys entitlement for a specific visa application.\n\n## Service Behaviour\nThe service retrieves a list of one or more health case summaries for a unique party identifier or a single health case summary for a specific health case identifier. \n\nThe service will return summaries for all health cases associated to a party even if the health case has been finalised. Likewise, a consumer can choose to view the summary for a specific finalised health case. Hence, the consumers request is not restricted by any date boundaries. Summaries are also not constrained if the health case is not associated to a visa application.\n\nThis service does not return any health notes associated with the health case, the health cases health requirements or outcomes.\n\nThe summary information returned by the service includes:\n Skeleton Health Case Details (See Service Message Object Model for complete attribute listing)\n Summary of the Latest Significant Outcome excluding outcome related Health Notes\n\nIf the service cannot return all health case summaries associated with a given person, due to restrictions with response payload size. A warning message will be returned to the consumer signalling that the result set is incomplete. \n\nPayload Restrictions\n Health Case Summary = Maximum 20 instances\n\nFurthermore, if a user does not have access to the information contained within the health case summary. The service will return an error message.\n\nA warning will be returned if at least one health case summary cannot be found.\n\n## Service Variants\nSV125.1 Retrieve Multiple Health Case Lists\nVariant Usage\nThis variant is based on the architectural pattern for simple aggregation of services. Consumers who need to retrieve health case lists for multiple party ids as part of a single process step can use this service to perform all requests to Retrieve Health Case List as a single service call. \nThe request message consists of a message containing multiple sub-requests, based on the request used in the primary Retrieve Health Case List service. The response message contains a list of responses from the primary SV125. \nThe consumer must supply a ServiceCorrelationId for request to the underlying SV125 service. These will be paired with the response data, to allow consumers to match requests to responses. Consumers are at liberty to generate ServiceCorrelationId data in any manner they choose.\nNo more than 15 Retrieve Health Case List requests may be made in a single call to this service.\nVariant Behaviour\nThis service allows consumers to send multiple requests for SV125 in a single request. The Retrieve Multiple Health Case Lists request message will be split into 1 to 15 separate calls to Retrieve Health Case List. Multiple calls will then be made to Retrieve Health Case List. These service calls will be made concurrently, to ensure that the service call is completed with maximum efficiency.\nThis service is atomic. If one request to the underlying Retrieve Health Case List service fails, a SOAP fault will be returned. No data from any prior successful responses will be returned with the SOAP fault. The SOAP fault will include a message in the additional detail text indicating which request to Retrieve Health Case List resulted in the SOAP fault.\nIf the consumer attempts to send more than the maximum limit of 15 requests in a single message, the request message will fail validation, and a validation error will be returned.\nVariant Service Interface\nThe variant service interface is defined in the following xsds:\n RetrieveMultipleHealthCaseListsRequest.xsd\n RetrieveMultipleHealthCaseListsResponse.xsd\n\n## Service Dependencies\nThis service requires that the consumer has already got access to party information, specifically the party Id, or a single unique Health Case Id in order to request a summary for a specific health case.\n\n## Service Flow\n1. Service Consumer invokes service on ESB.\n2. ESB invokes service provider CDH-003 to get the ICSE Client Id corresponding to the input party id.\n3. CDH-003 executes and returns CDH-003 Response Object to the ESB. If the Party does not exist in CDH (i.e. CDH Error Type =READERR and Reason Code = 2092 then stop flow and return error message to consumer. (SV002.MSG-E01).\n4. ESB extracts CID from the CDH-003.ResponseObject by searching for an instance of TCRMPartyIdentificationBObj where Identificationtype = lookup value equivalent to ICSE and expiry.date is blank and sets ICSE-005.ClientId. If there is no TCRMPartyIdentificationBObj of that type or there is no instance with a blank expiry date then stop flow and return a message to consumer. (SV105.MSG-E04)\n5. ESB transforms RetrieveHealthCaseListRequest into COBOL copyBook IC_SV_RTRV_HAPR_LST_SRVC_I and sends it to ICSE.\na) Note: The client id retrieved from ICSE should be used within the transformation rather than the original input person id.\n6. ICSE executes CICS transaction and returns COBOL copybook IC_SV_RTRV_HAPR_LST_SRVC_O to ESB. \n7. ESB transforms COBOL copybook IC_SV_RTRV_HAPR_LST_SRVC_O into RetrieveHealthCaseListResponse.\na) In addition to Mapping reference document (See Additional Transformation Logic Fig 1)\n8. ESB returns RetrieveHealthCaseListResponse to Consumer.\nPotential Response Message Labels\n- SV125.MSG-E01\n- SV125.MSG-E02\n- SV125.MSG-W01\n- SV125.MSG-W02\n\n"},{"filename":"Health\/Services\/SV174-UpdateVisaApplicationAssociations\/V1.0\/XSD\/README.md","contents":"## Service Usage\nNote: This service is designed to allow multiple entities to be linked \/ unlinked from one or more Visa Applications. However, for SFP3, this service only supports the linking \/ unlinking of Health Cases with Visa Applications. Therefore, this document refers only to Health Cases throughout.\nThis service allows consumers to update the associations between multiple Visa Applications and one or more Health Cases. This service supports both linking and unlinking between Visa Applications and Health Cases within a single service call.\nThe execution of this service is a step that is likely to occur when a Visa Processing Officer (VPO) is reviewing Health Cases associated with Visa Applications, as part of making an assessment of a Partys eligibility. As part of this process, the VPO may need to edit the associations between the Visa Applications and Health Cases.\n\n## Service Behaviour\nThis service supports both linking and unlinking between multiple Visa Applications and multiple Health Cases.\nA consumer of this service provides the following data:\nOne or more Visa Application Ids to which the Health Cases are to be linked or unlinked\nOne or more Health Case Ids which are to be linked or unlinked from the Visa Applications\nFor each Health Case, an indicator as to whether the Health Case is to be linked or unlinked from the associated Visa Application\nA consumer of this service receives one of the following types of data:\nAn acknowledgement that the associations in the request between the Visa Applications and the Health Cases was successful\nor\nA single error message as specified in section 4 Service Enterprise Return Code Messages \nA consumer of this service is assumed to have the privileges to perform associations between the specified Visa Applications and Health Cases.\n\n## Service Variants\nThis service has no service variants.\n\n## Service Dependencies\nThe consumer must have the following before calling this service:\nOne or more valid Visa Application Ids\nOne or more valid Health Case Ids. For Health Cases to be linked, the Health Case Ids must not already be linked to any Visa Application. For Health Cases to be unlinked, the Health Case Ids must already be linked to the specified Visa Applications. \n\n## Service Composition\nThis service is a not composite service, i.e. it is not composed of other services in the Service Portfolio. This service needs only one ICSE provider call to complete.\n\n## Service Flow\nThe detail of the flow is as follows:\nService Consumer invokes service with UpadateVisaApplicationAssociationsRequest input message on ESB\nESB transforms UpdateVisaApplicationAssociationsRequest into ICSE ApplicationMaintenanceRequest input message and sends it to ICSE\nICSE executes CICS transaction and returns ICSE ApplicationMaintenanceResponse output message back to ESB\nESB transforms ICSE ApplicationMaintenanceResponse output message into UpdateVisaApplicationAssociationsResponse output message\nESB returns UpdateVisaApplicationAssociationsResponse output message to Service Consumer\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Health\/Services\/SV423-ModifyHealthCaseAssessment\/V3.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used as a logical Enterprise Service meaning there is no need for any physical transformation of messages between consumers and providers. The Service has been setup to allow ICSE to create and modify Health Case Assessments in HAP. \nThis Services purpose is to allow HAP to be maintained as the data is changed in ICSE and that both systems will reflect current state of the Health Assessment. \n\n## Service Behaviour\nThis updates HAP with the details of the Health Assessment from ICSE. HAP uses the Health Case ID supplied from ICSE to match against the existing Health Cases and either creates a new Assessment or updates an existing assessment based on the current state of HAP. \nThe Service sends a subset of the Health Assessment details to HAP including;\n BIO Graphical Details\n Health Assessment Details\n\n## Service Variants\nThere are no service variants.\n\n## Service Dependencies\nThere are no service dependencies as all IDs are supplied by the consumer. \n\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\n\n## Service Flow\n1. An event is generated by the Service Consumer or a System which invokes the ModifyHealthCaseAssessmentRequest service directly on HAP Queues.\n2. HAP retrieves the message from the HAP Queue and processes the messages. \n3. HAP returns a valid ModifyHealthCaseAssessmentReponse to the consumer.\n1.1.1 Alternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\n1. An event is generated by the Service Consumer or a System which invokes the ModifyHealthCaseAssessmentRequest service directly on HAP Queues.\n2. HAP retrieves the message from the HAP Queue and processes the messages. \n3. HAP returns a SOAP Error to the consumer.\n\n## Transformation\nNo transformations take place on this service. See Associated SV423 Modify Health Case Assessment Micro document.\n\n## Service State Management Decisions\nProvider system errors\nIf provider system returns an error code at any stage of the service execution, the message flow will be stopped and the error returned to the consumer. This service will not return partial response messages.\n\n"},{"filename":"Health\/Services\/SV438-CacheHealthCaseDetails\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThe Service publishes \/ Modifies the relevant Health Case Context and Health Requirements stored in the back-end systems (GCMS and HAP) to eMedical.\nThe service is initiated upon the following business triggers: \nUpon a decision being made in the back end system that the client will need to complete a medical examination.\n## Service Behaviour\nThe back-end system (HAP \/ GCMS \/ IHS) will retrieve and publish the relevant Health Case details for the specified Health Case.\nThe back-end system (HAP \/ GCMS \/ IHS) will send the full Health Case elements to eMedical. The changes in eMedical (for example in the case of a furtherance \/ deferral) may result in the Health Case appearing in a clinic inbox for further processing.\nAsynchronous service.\n"},{"filename":"Health\/Services\/SV439-DeleteCachedHealthCase\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe Service removes the relevant Health Case Context and Health Requirements stored within back-end systems of GCMS and HAP to eMedical.\nInitiated upon the following business triggers:\n- Upon selection by the back-end process for culling from eMedical (Canada only)\n- HAP will trigger the logical deletion of a Health Case in eMedical if a Health Case transitions from 'Pre-Exam' to 'Sent to MOC' or 'Recommend Clear'. \nThe Health Case will be physically removed from the eMedical database. All non-structured attachments related to the Health case will be removed at the same time. Canadian privacy requirement are what is driving the physical removal.\nAsynchronous service.\n\n## Service Behaviour\nThe back-end system of HAP and GCMS will retrieve and publish the relevant Health Case details for the specified Health Case.\nThe back-end system of HAP and GCMS will send the full Health Case elements to eMedical. The changes in eMedical, for example in the case of a furtherance or deferral, may result in the Health Case appearing in a clinic inbox for further processing.\n\n## Service Variants\nCachedUnstructuredDate complex type mapped to PIDCore UnstructuredYear\/Month\/Day token data types per Canadian eMedical schema requirements. Term 'cached' used for the caching of healthcases and content from the backend system to eMedical. \nCachedUnstructuredDateTime complex type mapped to PIDCore UnstructuredYear\/Month\/Day\/Hour\/Minute\/Second token data types per Canadian eMedical schema requirements. Term 'cached' used for the caching of healthcases and content from the backend system to eMedical\nBoolean for eMedical Flags nillable=\"true\" ONLY. ALL elements linked to this boolean are nillable to cater for Canadian service variants. Refer .XSD for nillable=\"true\" element condition.\n\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\n\n## Transformation\nHAP and eMedical consume the Enterprise schema.\n\n"},{"filename":"Health\/Services\/SV440-RegisterMedicalExaminationsResults\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service modifies details of a Health Case previously published from the back-end system to eMedical. For a Front End Loaded (FEL) Health Case, a response from SV445 must have been successfully processed before SV440 can register Requirements, Examinations, Examination Question+Answer and Medical History Question+Answer.\n\nInitiated upon the following business triggers:\n- After performing the grading, the health case (including all examination detail and grading results) is submitted from eMedical to the back-end system. \n- For deferred \/ furthered cases after performing any necessary examinations and grading, the health case (including any changed client bio, client contact, examination detail and grading results) is submitted from eMedical to the back-end system.\n\nThe back-end system will apply the advised changes to the relevant Health Case.\n\nNote: This service is the only mechanism by which data that is collected in eMedical during the course of the medical examination is propagated to the back-end system. There is no intention for the examination data to remain in eMedical for historical purposes. Any element that is needed for historical purposes needs to be collected and sent to the back end system as part of this service.\nAsynchronous service.\n## Service Behaviour\nThe back-end system (HAP \/ GCMS \/ INZ \/ USG) will retrieve and publish the relevant Health Case details for the specified Health Case.\nAustralia only: Historical health case information will be retrieved and propagated as part of this service which is why requirements results and decisions are included in the listed service elements.\nThe back-end system (HAP \/ GCMS \/ INZ \/ USG) will send the full Health Case elements to eMedical. The changes in eMedical (for example in the case of a furtherance \/ deferral) may result in the Health Case appearing in a clinic inbox for further processing.\nAsynchronous service.\n\n## Service Dependencies\nXS014 is the externally dependent service that acts as a proxy for SV440. No transform exists so the payload of SV440 is directly exposed via XS014 but in a flattened form.\n\n"},{"filename":"Health\/Services\/SV441-NotifyMedicalExaminationStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service communicates examination status to the relevant backend Health provider system at business significant points in the examination life-cycle.\nFor a Front End Loaded (FEL) Health Case, a response from SV445 must have been successfully processed before SV441 can be used.\nThe service is initiated upon the following business triggers:\n At the commencement of a health examination.\n Upon placing the health examination on hold due to pregnancy\n Upon placing the an up front medical \/ front end loaded health examination on hold due to pregnancy\n Upon the DMP\/DR\/PR saying the client is not returning to complete the examinations.\n Suspected active TB (Australian only)\n Upon the case first being picked up by a clinic\n Upon the case being unlinked by the last clinic \nThe Health Case will be updated to reflect the change in examination status in eMedical.\nHealth Status Update is also used by eMed to inform USG of a class 'A' tuberculosis case via a new calue 'CLASS A TB' - added for BRNOV17\nAsynchronous service.\n\n## Service Behaviour\nThe Health Case will be updated to reflect the change in examination status in eMedical.\nAsynchronous service.\n\n## Service Dependencies\nXS015 is the externally dependent service that acts as a proxy for SV441. \nNo transform exists so the payload of SV441 is directly exposed via XS015 but in a flattened form.\n"},{"filename":"Health\/Services\/SV442-MaintainClinicDetails\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service is initiated when clinic data that has been identified as being shared between eMedical and the back end system is added \/ updated \/ removed. \n(New or changed clinic, clinic contact details, change in details of services provided by clinic, or clinic 5CC status)\nThe back end system will either create a new clinic or apply the advised changes to the relevant back-end clinic structure.\nAsynchronous service.\n"},{"filename":"Health\/Services\/SV443-MaintainMedicalPractitionerDetails\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service maintains details of Medical Practitioners (including associations to clinics). This may be for either Medical Practitioners previously advised to a back-end system or it may be the initial notification.\nInitiated in any case where Clinic Personnel data that has been identified as being shared between eMedical and the back end system (only PD\/PR\/DMP data) is added \/ updated \/ removed. \n\nThe service is initiated upon the following business triggers:\n Manage Account Details (bio data, on leave details, contact channels)\n Manage Clinic Personnel (associate \/ disassociate personnel to \/ from clinic, add \/ remove personnel roles, manage personnel bio data and contact channels)\n\nPlease note that eMedical will have to ensure that a response for SV442 (Maintain Clinic Details) has been received from the back-end system before proceeding with SV443 for that newly created clinic.\n\n"},{"filename":"Health\/Services\/SV444-RetrieveMedicalExaminationResultsAttachment\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service is used to retrieve medical examination results for a client. This is consequential action of SV440 Register Medical Examination Results.\n"},{"filename":"Health\/Services\/SV445-RegisterHealthCase\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThe service will be used to register a Front End Loaded (FEL) Health Case from eMedical to the back-end system.\nThis service will be used by CIC initially and will create details relating to the Health Case, Client details and Examinations. \nIt will also be used to update the back-end system of changes to the client's bio and contact details.\n## Service Behaviour\nThe back-end system will apply the advised changes to the relevant Health Case.\nNote: This service is the only mechanism by which data that is collected in eMedical during the course of the medical examination is propagated to the back-end system. There is no intention for the examination data to remain in eMedical for historical purposes. Any element that is needed for historical purposes needs to be collected and sent to the back end system as part of this service.\nGenerally Asynchronous service, except when a Case is first managed by IOM, under which circumstance it is used Synchronously to interface to MiMOSA so that the user can become aware immediately of any failure.\n## Service Dependencies\nXS019 is the externally dependent service that acts as a proxy for SV445. \nNo transform exists so the payload of SV445 is directly exposed via XS019 but in a flattened form.\n"},{"filename":"Health\/Services\/SV463-NotifyCachedHealthClientDetailsUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service notifies eMedical of changes in the back-end system (HAP \/ GCMS \/ IHS) regarding bio or contact details for previously cached Health Clients. It also modifies the relevant Health Client details stored in eMedical.\n\nInitiated upon the following business triggers:\nWhere client contact information has been updated\nWhere client bio-data has been updated \n\n## Service Behaviour\nThe back-end system (HAP \/ GCMS \/ IHS) will notify eMedical of changes in bio or contact details for previously cached Health Clients.\nAsynchronous service.\n\n"},{"filename":"Health\/Services\/SV464-NotifyCachedHealthRequirementsUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service publishes\/modifies the relevant Health Requirements added in the back-end system as a result of deferral\/furtherance processing to eMedical.\n\nThe modification is initiatied when:\n\n- A deferral\/furtherance where the additional requirements have beena dded to the Health Case.\n- Upon subsequent reversal of a derferral\/furtherance additional requirements.\n\nThe back-end system (HAP \/ GCMS) will notify eMedical of additional \/ changed requirements resulting from the furtherance \/ deferral process.\nAsynchronous service.\n## Service Behaviour\nThe back-end system (HAP \/ GCMS \/ IHS) will retrieve and publish the relevant Health Case details for the specified Health Case.\nAustralia only: Historical health case information will be retrieved and propagated as part of this service which is why requirements results and decisions are included in the listed service elements.\nThe back-end system (HAP \/ GCMS \/ IHS) will send the full Health Case elements to eMedical. The changes in eMedical (for example in the case of a furtherance \/ deferral) may result in the Health Case appearing in a clinic inbox for further processing.\n\n## Service Dependencies\nXS023 is the externally dependent service that acts as a proxy for SV464. \nNo transform exists so the payload of SV464 is directly exposed via XS023 but in a flattened form.\n"},{"filename":"Health\/Services\/SV466-RecordVisaApplicantHealthDeclarations\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThe service sends health declarations and client data which is collected from a visa application or Front End Loaded (FEL) form to HAP for Health requirements determination process.\n"},{"filename":"Health\/Services\/SV481-VerifyVisaApplicantsHealthCaseIdentity\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service will verify that a HAP Id nominated for a visa applicant on a visa application matches with the bio details for that individual held against the health case with the matching HAP Id. On the request, the HAP will compare the details from the visa application of each applicant against the Bio details held against the HAP Id that has been nominated as being the health case for that individual. \nThe service will verify that a HAP Id nominated for a MHS appointment matches with the bio details for that individual held against the health case with the matching HAP Id. On the request, the HAP will compare the details from the MHS appointment of each applicant against the Bio details held against the HAP Id that has been nominated as being the health case for that individual. \nA match \/ no match response is returned for each individual on the request.\nIndividuals who do not indicate that they have a HAP ID will not be passed on this service.\n"},{"filename":"Health\/Services\/SV481-VerifyVisaApplicantsHealthCaseIdentity\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThe service will verify that a HAP Id nominated for a visa applicant on a visa application matches with the bio details for that individual held against the health case with the matching HAP Id. On the request, the HAP will compare the details from the visa application of each applicant against the Bio details held against the HAP Id that has been nominated as being the health case for that individual. \nThe service will verify that a HAP Id nominated for a MHS appointment matches with the bio details for that individual held against the health case with the matching HAP Id. On the request, the HAP will compare the details from the MHS appointment of each applicant against the Bio details held against the HAP Id that has been nominated as being the health case for that individual. \nA match \/ no match response is returned for each individual on the request.\nIndividuals who do not indicate that they have a HAP ID will not be passed on this service.\n"},{"filename":"Health\/Services\/SV513-RegisterMedicalExaminationsIssues\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service sends details to eMedical when a MOC records an audit finding against an exam in HAP. This is for storage, analysis and subsequent action.\n\nNotification of issues detected with health case assessments back by the MOC to eMedical.\nInitiated in any case where an assessment issue is added in respect of a clinic that has been identified as being shared between eMedical and the back end system.\n## Service Behaviour\nThis is an asynchronis service where details of the Health Case issue are passed from eMedical to HAP.\n"},{"filename":"Health\/Services\/SV536-RetrieveHealthCaseCorrespondenceElements\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThe service retrieves health examination details and health examination status when using client's Business Service ID.\n"},{"filename":"Health\/Services\/SV573-RetrieveSelectedHealthCases\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service retrieves details of selected Health Cases when using a clients Visa Application ID, Transaction Reference Number and one to many Health Case IDs. \nCurrently, service based retrieval of health related information is provided by SV106 Retrieve Health Case. The information provided by this service is sourced from the HAPR in ICSE. As positioning for the eventual removal of the HAPR the HAP will now provide a service to retrieve details related to the health case. Details of the requested health case(es) will be retrieved from the HAP in either summary or detailed mode as specified by the Summary Information Only Flag in the request.\nIn summary only mode only core health case and status details of the any underlying assessment, undertakings and waivers will be returned.\nNote: When the service is invoked via Visa Application Id it is the service consumers responsibility to be able to correlate the returned health cases to their applicants. \nSynchronous service.\n"},{"filename":"Health\/Services\/SV574-NotifyVisaApplicantHealthCaseActivity\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service notifies ICSE with information regarding significant activites and decisions relating the an applicant's health. \nThe Health Case Identifier will be used to associate the data with the applicant. Notification of success will be given in response along with a creation date.\n"},{"filename":"InformationRecord\/Services\/SV059-StoreInformationRecord\/V5.0\/XSD\/README.md","contents":"## Service Usage\nThe service is used to store an information record and its associated metadata into the Record Keeping System (currently implemented via TRIM) for an indefinite period of time. When storing an information record the user has the capability to specify whether the information record can be further modified (eg functionality of Drafting Correspondence) or whether it is to be locked down as a final version.\nThe execution of this service is a step that is likely to occur when a consumer wishes to store metadata and Information Record (IR)\nThis service allows the consumer to store\/relate a single information record into multiple business context containers and multiple parties containers. The consumers provides at least one Business Context and optionally parties with the Information Record to be stored. The Information Record is physically stored only within a single Business Context Container and related to other Business Context and party containers.\nAn Information Record could be a single document or a correspondence with a list of attachments.\n\n## Service Behaviour\nThis service provides information record storage in the following steps:\nThe consumer provides the following metadata and Information Record inputs:\nBinary Large Objects (for storing electronic copies) and related\nMetadata \nMetadata only if hard copy information records\nRelated Information Record ID and relationship type\nRecord Management Access Groups\nRecord Management Security Classification and Caveats \nBusiness Contexts\nParty Contexts\nElectronic Container ID.\nThe service invokes Create\/Search Container, Store Document and Link Document Record Keeping Services (RKS) passing the metadata and the Information Record. \nRKS executes the service call and returns either:\nA Record ID for the newly stored Information Record\nA Record ID of the container where the Information Record is contained in. \nA Paper File Created Flag for the Business Context container that the IR is contained in.\nBusiness Context (with Business Context Container Id)\nClient Sub Container Context (with Client Subcontainer Id)\nOR\nAn Enterprise Error detailing why the service was unsuccessful.\nA consumer of this service receives either:\nA Record ID for the successfully stored information record\nAn Electronic Container ID\nA paper File Created Flag\nAn optional list of Business Context\nAn optional list of Party Context\nOR\nAn error message if an information record cannot be stored successfully for technical reasons\nThis service has been altered to use MTOM\/XOP by changing the base64Binary fields to xsd:anyType so that a reference to the attachment can be sent. This is converted by ESB to a base64Binary attachment reference before it is sent to RKS. The developer can choose to either convert the link into a base64 or not convert and not validate.\n\n## Service Variants\nThis service relies on the consumer already having a unique identifier for Business Context as a Business Context Id with Business Context Type and Sub Type and a valid Electronic Container ID. This service also expects that the Meta information provided with a document will be record keeping compliant. \n\n## Service Composition\nAlthough this service is not a composite service i.e. it is not composed of other enterprise services within the Service Portfolio, it makes a call to SV002.1 Retrieve Multiple Parties v02.0 in order to retrieve details available for a selected Parties in a consolidated records. These party details are used by the provider service to search and create party containers and party sub containers\n\n## Service Flow\nThe normal flow for this service is a call to RMS to store information record. The return message contains TRIM unique Record Id.\nThe following service flow describes a successful execution path.\nService Invocation and Retrieve Multiple Parties\nService Consumer invokes service SV059 on ESB with StoreInformationRecordRequest.\nUse AF1 IF StoreInformationRecordRequest.InformationRecord.StoreiNformationRecord.StoreCorrespondence.PrimaryCorrespondenceItem.BodyContentRenditionList!=NULL \nAND StoreInformationRecordRequest.InformationRecord.StoreiNformationRecord.StoreCorrespondence.PrimaryCorrespondenceItem.BodyContent= NULL.\nIF PartyContext is provided with the service request, ESB transforms StoreInformationRecordRequest into RetrieveMultiplePartiesRequest with the Party Ids from those Party Contexts for which the PartyContext.PartySubContainerId=NULL.\nESB invokes SV002.1 Retrieve Multiple Parties v02.0 with RetrieveMultiplePartiesRequest.\nESB receives RetrieveMultiplePartiesResponse from SV002.1 Retrieve Multiple Parties v02.0. \nUse AF2 if SV002.1 Retrieve Multiple Parties v02.0 fails.\nStore and Process the Record into Business Context Container \nESB transforms StoreInformationRecordRequest and RetrieveMultiplePartiesResponse into StoreRecordRequest.\nESB invokes RecordKeeping.storeRecord () with StoreRecordRequest.\nESB receives response StoreRecordResponse from RecordKeeping.StoreRecord ().\nUse AF3 if RecordKeeping.StoreRecord () fails.\nESB transform StoreRecordResponse into StoreInformationRecordResponse.\nESB return StoreInformationRecordResponse to service consumer.\nAlternate Flow 1\nESB returns message SV059.MSG-E05 to consumer.\nAlternate Flow 2\nIf SV002.1 times out, ESB returns message SV059.MSG-E03 to consumer else ESB capture the error code and error message from SV002.1 and concatenate to body of message SV059.MSG-E01 then return to consumer\nAlternate Flow 3\nIf StoreRecord is timeout, ESB returns message SV059.MSG-E03 to consumer else ESB capture the error code and error message from RecordKeeping.storeDocumentSet() and concatenate to body of message SV059.MSG-E01 then return to consumer.\n\n## Service State Management Decisions\nNo State management required.\n"},{"filename":"InformationRecord\/Services\/SV200-RetrieveInformationRecord\/V3.0\/XSD\/README.md","contents":"## Service Usage\nAn information record represents any electronic or hardcopy item of documentation or correspondence (correspondence encompasses any associated attachments). This may include electronic mail (correspondence), case assessment documents, plans, notes, interview reports, health reports or application forms\nThe service enables a consumer to select, retrieve and reserve an Information Record for modification. \nIn the context of the service, all information records fall into two distinct sub types, Document\/Attachment and Primary Information Record Item. If the requested subtype is a Document\/Attachment the service returns physical Information Record and its associated metadata. If the requested subtype is a Primary Information Record Item the service will return the Primary Information Record Item (contents) a list of associated attachment(s) and related metadata. The consumer may then choose to re-invoke the service to retrieve a specific record (attachment). \n\n## Service Behaviour\nThe execution of this service is a step that will allow VPO to view Information record list and then select a particular information record to view. \n\n\nTo invoke the service a consumer inputs:\n Information Record Id , \n Checkout Requested Flag and \n\nThe Provider System responds with :\n Metadata associated with content of the Information Record, or if applicable, metadata associated with associated attachments. Metadata includes the date and time the document was last updated and its edit status.\n Content of the record (An electronic file of any type e.g. .txt, .doc, .pdf, .xls etc)\n Business context associations(s)\n Related record associations(s)\n Container metadata (Id, type, location, paper file created flag if applicable)\n\nNote: The service does not provide a complete historical audit trail of changes made to an information record. However this function is available through the existing TRIM user interface.\n\n## Service Variants\nThis service has no service variants.\n\n## Service Dependencies\nThis service relies on the consumer already having a unique information record Id. This service also expects that the meta-information provided with an information record will be record keeping compliant.\n\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\n\n## Service Flow\nThe normal flow for this service is a call to RKS to retrieve information record. \nThe following service flow describes a successful execution path.\n1. Service Consumer invokes service on ESB with \nRetrieveInformationRecordRequest.\n2. ESB transforms RetrieveInformationRequest to RetrieveRecordRequest.\n3. ESB invokes RecordKeeping.RetrieveRecordRequest() on Record Keeping interface using RetrieveRecordRequest object.\n4. Record Keeping service returns RetrieveRecordResponse to ESB.\n5. Use Alternate flow 1 if Record keeping service raises Error\n6. ESB transforms RetrieveRecordResponse to RetrieveInformationResponse and returns response to the consumer.\n\n1.1.1 Alternate Flow 1\nESB transforms errors into enterprise error message and returns to the consumer. Please see the section Service Enterprise Return Code Message for more details.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"InformationRecord\/Services\/SV201-ModifyInformationRecord\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows the service consumer to update metadata and the body binary associated with an Information Record. Information record in this context represents any item of documentation that is required to be kept as a record for any given length of time. Examples of an Information Record include but are not limited to:\nCase assessment, plan or notes\nInterview report\nHealth report\nApplication form\nPrimary Correspondence\nInformation Record will have two main parts:\nMetadata associated with the content of the record\nThe content of the record\nMetadata will contain compliance elements (required by National Archives of Australia NAA standards) and context specific elements required by the consumer (eg. data used for searching).\nActual content of the record can be a Body Binary of any type (eg. txt, PDF, doc, xsl, jpg, bmp ). \nThe service also allows the service consumer to register a Hardcopy correspondence or document to the Record Keeping System.\nThe execution of this service is a step that will occur when:\nThe Visa Processing Officer returns original document(s) to client. This is not considered a new outbound correspondence but additional information for existing correspondence.\nThe Visa Processing Officer changes the status of the correspondence (for example from unactioned to no action required).\nThe Visa Processing Officer checks in a new version of the Binary File to replace the old version.\nThe Visa Processing Officer registers a Hardcopy Correspondence or document to the Record Keeping System\n\n## Service Behaviour\nA consumer of this service provides:\nIdentity of the Information Record\nAny data item which is to be modified by the consumer. This encompasses data from any of the following CDM Entities:\nInformation Record Status\nCorrespondence Item\nDocument\nRelated Information Records\nBody Binary Content\nA consumer of this service receives either:\nAn Enterprise Service Acknowledgement\nOr\nAn Enterprise Error detailing why the retrieve was unsuccessful.\nThis service also provides the following behaviour:\nThe service behaviour in modifying security caveat of an Information Record is by Adding new Security Caveat to the record in addition to the existing caveat. In other words, the service will not replace or modify existing Caveats in a record\nThe service behaviour in modifying Access Group of an Information Record is by Granting new Access to new set of users but not revoking access from existing users. \nFollows an all or nothing principal for updates. This means if any particular part of the update is unable to be performed, then nothing will be updated and the service will return an Enterprise error.\nThe service uses MTOM\/XOP instead of SOAP with Attachments (SwA). If an endpoint requires SwA then a converter will be used after the message is delivered by ESB.\nThis service has been altered to use MTOM\/XOP by changing the base64Binary fields to xsd:anyType so that a reference to the attachment can be sent. This is converted by ESB to a base64Binary attachment reference before it is sent to RKS. The developer can choose to either convert the link into a base64 or not convert and not validate.\n\n## Service Dependencies\nThis service consumer must have previously acquired a valid Correspondence Item Id or Information Record Id.\n\n## Service Composition\nThis service is not a composite service. i.e. it is not composed of other services within the Service Portfolio\n\n## Service Flow\nService Consumer invokes service on ESB with ModifyInformationRequest. \nESB invokes RecordKeeping.ModifyRecord() on Record Keeping interface using ModifyRecordRequest object.\nRecord Keeping service returns ModifyRecordResponse to ESB.\nUse AF1 if ModifyRecordResponse returns with error or timeout\nESB transforms ModifyRecordResponse to ModifyInformationRecordResponse and returns response to the consumer.\nAlternate Flow 1 (AF1)\nIf the service call was timeout, ESB should return SV201.MSG-E03 to the consumer.\nESB returns message SV201.MSG-E01 to consumer.\n\n"},{"filename":"InformationRecord\/Services\/SV213-SearchInformationRecord\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows the consumer to retrieve a summary list of all information records in provider system matching the specified search criteria. The summary list retrieved will represent the current status of the specified information records. \n\n## Service Behaviour\nTo invoke the service a consumer inputs one or more of the following attributes. If more than one of the following attributes is specified, the input rationale will be logically and together (to enable a more accurate and focused search):\n Party Id\n Business Context Id \/ Type\/Subtype\n Information Record Current Status\n (Correspondence) Subject Text\n (Correspondence) Sender Details\n (Correspondence) Recipient Details\n (Correspondence) Sent date\/time filter\n (Correspondence) Received date\/time filter\n (Correspondence) Direction Type\/Channel Type\n (Correspondence) Work Centre Category Name\n Case Management: Case Activity Id\n (Correspondence) Hardcopy flag\n Document Type\n BussinessContextContainerId\n BussinessContext Details\nThe Provider System responds with a summary list of information records. The following attributes are provided for each information record on the summary list:\n Information Record Item Id\n (Correspondence) Sender Details\n (Correspondence) Recipient Details\n (Correspondence) Subject Text\n (Correspondence) Direction Type\/Channel Type\n (Correspondence) Received Date\n (Correspondence) Sent Date\n Information Record Status\n Document Details (File name\/ File Extension\/ Size)\n Information Record Title\n Has Attachments Flag\n Edit Status\n Security Classification\/Security Caveat Type\n Hardcopy flag\n Case Activity Id\n BussinessContextContainerId\n BussinessContext Details\n ResultSetResponse\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\n\n## Service Flow\nThe normal flow for this service is a call to Provider (RKS) to search information record. \nThe detail of the flow is as follows:\nConsumer invokes SearchInformationRecord on ESB\nESB transforms SearchInformationRecordRequest to searchRecordRequest\nESB invokes RecordKeepingService.searchRecord() on RecordKeeping component using searchRecordRequest\nUse Alternate Flow 1 if RecordKeepingService.searchRecord() returns error.\nFor each element present in searchRecordRequest the RecordKeeping component will form up the appropriate RecordSearch clauses and use them to perform a Search operation against the TRIM database\nFor each record matching the input searching criteria the Record Keeping component will create a SearchRecord instance and add it to the RecordKeepingService.searchRecordResponse.\nThe Record Keeping component returns searchRecordResponse to the ESB\nThe ESB transforms searchRecordResponse to SearchInformationRecordResponse\nThe ESB returns SearchInformationRecordResponse to the consumer. \nAlternate Flow 1\nESB transforms errors into enterprise error message and returns to the consumer. Please see the section Service Enterprise Return Code Message for more details.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"InformationRecord\/Services\/SV261-CreateAndFormatCorrespondence\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to create a correspondence item from an identified correspondence template, and convert it into a format such as pdf or html, ready for delivery via a specific channel (email, post, or fax).\nThis service is used for automatically generated correspondence that does not require a manual review step before formatting (e.g. a grant approval letter for an auto-granted visa application). \n\n## Service Behaviour\nThis service generates and formats correspondence in the following steps:\nBatch Configuration Id\nTemplate data, a flexible content element, which may include:\nChannel Type\nRecipient details\nDetails of the primary Party whom the correspondence concerns (may be the same as recipient)\nDetails of the Departmental Officer sending the correspondence\nBusiness Context Details (eg. Compliance Case, Visa grant, Request for further information, etc).\nThis service calls Thunderhead directly to create an item of correspondence and format it for a specific delivery channel. \nA consumer of this service receives either:\n A Channel Formatted Correspondence Item, \nOr\n An Enterprise error message.\n\n## Service Dependencies\nThis service consumer must have previously acquired a valid Batch Configuration Id via a previous invocation of another service. It also assumes that the consumer uses the correct template data for Thunderhead.\n\n## Service Composition\nThis service does not require any composition. It calls Thunderhead directly using the Template Id and the Template Data and receives a finalised correspondence.\n\n## Service Flow\nThe normal flow for this service is a call to Provider (Thunderhead) to format a correspondence item passed in as template data nd return it in formatted channel type to the consumer.\nThe following service flow describes a successful execution path.\nService Consumer invokes service SV261 on ESB with CreateAndFormatCorrespondenceRequest \nESB invokes the operation JobAPIWebWrapped.executePreview on the provider (Thunderhead) SOAP\/HTTP WebService and transforms CreateAndFormatCorrespondenceRequest to JobAPIWebWrapped.executePreviewRequest \nSet BodyContent on the Thunderhead message\nESB receives a response\nUse AF1, if invocation failed.\nESB transforms JobAPIWebWrapped.executePreviewResponse into CreateAndFormatCorrespondenceResponse.\nESB returns FormatCorrespondenceResponse to service consumer.\nexecutePreviewResponse returned from the Thunderhead contains a body and 0 or more attachments based on the channel type:\nBody Content is returned in the Thunderhead master channel. Although the Thunderhead schema allows for multiple master channels, only one master channel will ever be returned. The encoding for the body content depends on the channel type:\nFor channel type of Email, body content is HTML encoded\nFor channel type of Fax or Post, body content is PDF encoded\nAttachments may be returned for all channel types. Attachments are returned in the Thunderhead slave channels. The encoding for each attachment is always PDF format, irrespective of channel type. The attachment name is also returned with each attachment. The following xml fragment from the Thunderhead response gives an example of how attachment names are returned:\n<propertyNames soapenc:arrayType=\"xsd:string[1]\" xsi:type=\"soapenc:Array\">\n<propertyNames xsi:type=\"xsd:string\">AttachmentName<\/propertyNames>\n<\/propertyNames>\n<propertyValues soapenc:arrayType=\"xsd:string[1]\" xsi:type=\"soapenc:Array\">\n<propertyValues xsi:type=\"xsd:string\">Form 1282- Australian Values Statement<\/propertyValues>\n<\/propertyValues>\nThese elements already occur in each of the slave channels that are currently received; the only difference is that they will be populated with child elements. The first contains the property name, in this case \"AttachmentName\", and the second contains the property value, which is the attachment name.\nAlternate Flow 1 (AF1)\nIf the service call to Thunderhead is timeout, ESB should return SV261.MSG-E02 to the consumer.\nIf Thunderhead returns a SOAP fault, ESB should transform the SOAP fault from Thunderhead Server into SV261.MSG-E01 and return to consumer. The body of the SOAP fault from Thunderhead will pass on to the consumer without modification.\nESB should log the error message before returning the response to the consumer.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Lodgement\/Services\/SV656-LodgeSkilledApplication\/V1.0\/XSD\/README.md","contents":"## Service Usage\n\nThe service is used to lodge visa application information captured through online channels into a visa processing system.\n\nThe LodgeSkilledApplication variant enables lodgement of the following Application Forms:\n\n* **SRV-AP-491** - Application for a Skilled Work Regional (Provisional) visa\n* **SRV-AP-494** - Application for a Skilled Employer Sponsored Regional (Provisional) visa\t\n* **SRV-NOM-494** - Nomination for a Skilled Employer Sponsored Regional (Provisional) Visa\n\nSVS656 is a reimplementation of the existing SV472 RegisterVisaApplication service, split into multiple variants for the various Visa streams:\n\nThe proposed list of variants includes:\n\n* Skilled *(this schema)*\n* Protection\/Humanitarian\n* Visitor\n* Working Holiday\n* Student\n* Family\n\nFor more background on this new service see the discussion paper ADD2019\/560143. \n\n## Service Behavior\n\nUpon successful submission this service sends an acknowledgment.\nAs of the NOV19 release, an asynchronous SV472 RegisterVisaApplicationResponse is returned.\n\n## Transformation\n\n**Request Transformation:**\n\nThe SV656 Request message is transformed into an ICSE eCommerce provider message.\n\n**Response Transformation:**\n\nThe ICSE eCommerce provider message is transformed into a SV472 Response message as noted above.\n"},{"filename":"OnlineAccount\/Services\/SV484-MaintainExternalLogonAccess\/V1.0\/XSD\/README.md","contents":"## Service Usage\nService provides business service access lifecycle management operations for ESS external immi logon which authorised departmental systems can invoke. Currently systems can only modify the role of account.\n"},{"filename":"OnlineAccount\/Services\/SV498-NotifyAccountBusinessServiceRelationship\/V3.0\/XSD\/README.md","contents":"## Service Usage\nUpdates the relationship between a business service and an online account in the Online Account from the consumer (ePLUS\/eVisa). \nThis is to ensure that the correct view of associated business services is reflected to the online account holder through the summary view.\n"},{"filename":"OnlineAccount\/Services\/SV500-NotifyAccountHolderUpdate\/V3.0\/XSD\/README.md","contents":"## Service Usage\nSV500 Notify Account Holder Update notifies departmental systems of changes to external user details (eg. name, email address, etc).\n## Service Behaviour\nESS publishes a SV500 message when a users details have changed. Subscribing systems will receive the SV500 message and if the message relates to a user stored within specific system, will perform updates to data held within that system.\n## Service Flow\nA normal flow for this service is for ESS to publish a SV500 message when user details have changed. Subscribing systems will receive the SV500 message and if the message relates to a user stored within the specific system, will perform updates to data held within that system.\n\n## Transformation\nN\/A\n"},{"filename":"OnlineAccount\/Services\/SV504-RequestPaymentBusinessServiceList\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service provides a list of business services requesting a bulk payment.\n"},{"filename":"OnlineAccount\/Services\/SV504-RequestPaymentBusinessServiceListExternal\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service provides a list of business services requesting a bulk payment for external systems such as Agents.\n"},{"filename":"OnlineAccount\/Services\/SV507-RetrieveBusinessServicePaymentStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service provides the ability to check whether payment has already made by the client.\n\nThis service is triggered from eVisa\/ePLUS to SAP when user trying to edit the incompleted transaction and payment indicator has been set to true.\n\n\n## Service Behaviour\nProvider Sequence List:\nOnline Account requests ePLUS\/eVisas to Edit the Transaction\neVisa\/ePLUS requests SAP to check for the current payment status\nSAP returns 'payment status' to eVisa\/ePLUS \neVisa\/ePLUS will the payment status to determine whether the client can continue to editing the transaction or not\n\n"},{"filename":"OnlineAccount\/Services\/SV577-RetrieveExternalLogonDetails\/V2.0\/XSD\/README.md","contents":"## Service Usage\nSV577 Retrieve External Logon Details provides departmental systems with the details of an external user (eg. name, email address, assigned roles etc..)\n## Service Behaviour\nThe service will retrieve details of an external used based on the supplied identifier information\n## Service Flow\nA normal flow for this service is for Subscription to invokemSV577 for a specific ESS user. If the supplied user identifier matches a valid user, ESS will response with the details of the user, if not an error message will be sent.\n## Transformation\nN\/A\n"},{"filename":"OnlineAccount\/Services\/SV578-VerifyExternalLogonServiceAccess\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service provides systems with the ability to authenticate an external ESS user.\n"},{"filename":"OnlineAccount\/Services\/SV587-CreateBusinessServiceApplication\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service will be used by OLA to create and validate business service applications within PLP (ELP). The end state is that the service will be exposed externally for service delivery partners to consume.\n"},{"filename":"Orchestration\/Services\/OS001-RetrieveBiometricCaptureByCitizenship\/V1.0\/XSD\/README.md","contents":"## Service Usage\nOS001 is an Orchestration Service that provides the ability to search and retrieve Biographic and Biometric data associated with a client's Citizenship application.\nThe search is conducted using a Citizenship Certificate Number, with further filtering by Biographic Criteria (Date of Birth, Family Name and Given Name).\n\nThe service orchestrates calls to services 'SV341' and 'IN009' to retrieve biographic data associated with the matching party's business dealing, and to ISR via SV150 to retrieve an associated image. \n\n\n## Service Behaviour\nThe service will attempt to retrieve data for a single party based on the supplied criteria, according to the following flow and business rules:\nCitizenship \nOS001.1 The Citizenship Certificate Number ('CCN') is applied to find matching candidate parties:\nMatching rules:\n- 'CCN' = PARTY_SYSTEM_IDENTIFER.IDENTIFIER_VALUE where IDENTIFIER_CODE_TYPE = 'CID'\nOR\n- 'CCN' = DOCUMENT.DOCUMENT_NUMBER where DOCUMENT.DOCUMENT_TYPE in ('certificate_of_evidence_of_citizenship', 'citizenship_certificate')\n\nOS001.2 If no parties match 'CCN', a response is returned with the message PRTY00091.\nOS001.3 If one or more parties match 'CCN', the Biographic criteria is matched against the ICSE Principal Preferred name of the candidate(s):\nMatching rules: \n\nFor PARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE = 'CID' AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE = '1'\n- 'Date of Birth Year' = BIOGRAPHIC.BIRTH_DATE_YEAR\n- 'Date of Birth Month' = BIOGRAPHIC.BIRTH_DATE_MONTH (if 'Date of Birth Month' not provided match BIOGRAPHIC.BIRTH_DATE_MONTH in (0,-1))\n- 'Date of Birth Day' = BIOGRAPHIC.BIRTH_DATE_DAY (if 'Date of Birth Day' not provided match BIOGRAPHIC.BIRTH_DATE_DAY in (0,-1))\n- 'Family Name' = BIOGRAPHIC.FAMILY_NAME\n- 'Given Name' = BIOGRAPHIC.GIVEN_NAME (If 'Given Name' not provided match BIOGRAPHIC.GIVEN_NAME = '') \n\nOS001.4 If no parties match (CCN + Biographic criteria), a response is returned with the message PRTY00092.\nOS001.5 If multiple parties match (CCN + Biographic criteria), a response is returned with the message PRTY00093.\nOS001.6 Where a single party is matched after applying (CCN + Biographic criteria), a response will be sent as follows: \nResponse: Biographic Data\nOS001.7 If IncludeBiographicFlag = 'T', Biographic Data will be returned as follows:\n Return Biographic details where PARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE = '1'\nSet NameUsageType = 'Principal Preferred'. \n\nOS001.7.1 If AliasNameFlag = 'T'\n Also return Biographic details where\nPARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE = '2'\nOR\nPARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE not in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE in ('1', '2') \n\nSet NameUsageType = 'Alias' for all names returned as a result of AliasNameFlag = 'T'. \n\nOS001.7.2 If AliasExistsFlag = 'T'\n Also return AliasExistsFlag.\nSet = 'T' where exists (\nPARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE = '2'\nOR\nPARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE not in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE in ('1', '2') \n )\n Else Set 'F'\n\nResponse: Other Data \nOS001.8 Deceased Indicator:\n Set 'T' where exists DEATH.EFFECTIVE_TO_TIMESTAMP IS NULL. \nELSE Set 'F'\n \nOS001.9 Citizenship Status:\n If exists CITIZENSHIP where BUSINESS_SERVICE_ROLE.ROLE_STATUS = '5' SET = 'Acquired'\n ElseIf exists CITIZENSHIP where BUSINESS_SERVICE_ROLE.ROLE_STATUS = '9' SET = 'Loss'\nElseIf exists CITIZENSHIP where BUSINESS_SERVICE_ROLE.ROLE_STATUS = '3' SET = 'Approved not Acquired'\n Else SET = 'Not Approved'. \n\nOS001.10 Document Status:\n For CCN that matched:\n If exists DOCUMENT_EVENT.DOCUMENT_EVENT_TYPE = 'VOIDED_REASON' SET = 'Void'. \n Else SET = 'Current'\n\nResponse: Image\n If IncludeImage = 'T' the OS service will attempt to retrieve the latest Citizenship Image from ISR via SV150, where it is lawful to disclose:\n Retrieve Rules:\nCall SV150 with the image id of the latest (based on local_facial_acquisition_timestamp) BIOMETRIC_ENROLMENT where \n BIOMETRIC_ENROLMENT.BUSINESS_CONTEXT_TEXT = 'Citizenship' \n and BIOMETRIC_ENROLMENT.BUSINESS_EVENT_TEXT IN ('Citizenship_interview','Citizenship_Test')\nAnd local_facial_acquisition_timestamp) >= '2009-09-17'\nAnd BIOMETRIC_IMAGE_REFERENCE. BIOMETRIC_IMAGE_REFERENCE_TYPE = 'FC'\nIf no such image id exists\nCall SV150 with the image id of the latest (based on local_facial_acquisition_timestamp) BIOMETRIC_ENROLMENT where \nBIOMETRIC_ENROLMENT.BUSINESS_CONTEXT_TEXT= 'Citizenship' and BIOMETRIC_ENROLMENT.BUSINESS_EVENT_TEXT NOT IN ('Citizenship_interview','Citizenship_Test') \nAnd BIOMETRIC_IMAGE_REFERENCE. BIOMETRIC_IMAGE_REFERENCE_TYPE = 'FC'\n\nOS001.11 If no Image exists. Return message PRTY00095\nOS001.12 If Image exists but not lawful to return. Return message PRTY00096. \nOS001.13 If Image exists but ISR cannot find image. Return message PRTY00097\nOS001.14 If Image Retrieve is successful, return message PRTY00094.\nOS001.15 If IncludeImage = 'F', return message PRTY00094.\nOS001.16 IsImageAvailable (FaciaImageCount):\nIf image exists set = 'T' Else 'F'\n\n\n"},{"filename":"Orchestration\/Services\/OS001-RetrieveBiometricCaptureByIdentifier\/V1.0\/XSD\/README.md","contents":"## Service Usage\nOS001 is an Orchestration Service that provides the ability to search and retrieve Biographic and Biometric data associated with a client's Biometric Identifier.\nThe search is conducted using a Biometric Match Identifier Value.\n\n"},{"filename":"Orchestration\/Services\/OS001-RetrieveBiometricCaptureByVisa\/V1.0\/XSD\/README.md","contents":"## Service Usage\nOS001 is an Orchestration Service that provides the ability to search and retrieve Biographic and Biometric data associated with a client's Visa Details.\nThe search is conducted using a Visa Grant Number or Document Number, with further filtering by Biographic Criteria (Date of Birth, Family Name and Given Name).\n\nThe service orchestrates calls to services 'SV341' and 'IN009' to retrieve biographic nad visa data associated with the matching party's business dealing, and to ISR via SV150 to retrieve an associated image.\n"},{"filename":"Orchestration\/Services\/OS002-MatchBiometricCaptureByCitizenship\/V1.0\/XSD\/README.md","contents":"## Service Usage\nOS002 is an Orchestration Service that provides the ability to search and retrieve Biographic and Biometric data associated with a client's Citizenship application, and to conduct a Biometric verification using the provided Image.\nThe search is conducted using a Citizenship Certificate Number, with further filtering by Biographic Criteria (Date of Birth, Family Name and Given Name).\nA Biometric verification is conducted using the provided Image and the Biometric data retrieved for a party.\n\nThe service orchestrates calls to services 'SV341' and 'IN009' to retrieve biographic data associated with the matching party's business dealing, and to BMS via SV606 to conduct the Biometric verification.\n\n## Service Behaviour\nThe service will attempt to retrieve data for a single party based on the supplied criteria, according to the following flow and business rules:\nCitizenship \nOS002.1 The Citizenship Certificate Number ('CCN') is applied to find matching candidate parties:\nMatching rules:\n- 'CCN' = PARTY_SYSTEM_IDENTIFER.IDENTIFIER_VALUE where IDENTIFIER_CODE_TYPE = 'CID'\nOR\n- 'CCN' = DOCUMENT.DOCUMENT_NUMBER where DOCUMENT.DOCUMENT_TYPE in ('certificate_of_evidence_of_citizenship', 'citizenship_certificate')\n\nOS002.2 If no parties match 'CCN', a response is returned with the message PRTY00091.\nOS002.3 If one or more parties match 'CCN', the Biographic criteria is matched against the ICSE Principal Preferred name of the candidate(s):\nMatching rules: \n\nFor PARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE = 'CID' AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE = '1'\n- 'Date of Birth Year' = BIOGRAPHIC.BIRTH_DATE_YEAR\n- 'Date of Birth Month' = BIOGRAPHIC.BIRTH_DATE_MONTH (if 'Date of Birth Month' not provided match BIOGRAPHIC.BIRTH_DATE_MONTH in (0,-1))\n- 'Date of Birth Day' = BIOGRAPHIC.BIRTH_DATE_DAY (if 'Date of Birth Day' not provided match BIOGRAPHIC.BIRTH_DATE_DAY in (0,-1))\n- 'Family Name' = BIOGRAPHIC.FAMILY_NAME\n- 'Given Name' = BIOGRAPHIC.GIVEN_NAME (If 'Given Name' nor provide match BIOGRAPHIC.GIVEN_NAME = '') \n\nOS002.4 If no parties match (CCN + Biographic criteria), a response is returned with the message PRTY00092.\nOS002.5 If multiple parties match (CCN + Biographic criteria), a response is returned with the message PRTY00093.\n\n\nOS002.6 Where a single party is matched after applying (CCN + Biographic criteria) the OS service will attempt a Biometric Verification via SV606. A response will be sent as follows: \nResponse: Biometric Match Result\nBiometric Match Rules:\nCall SV606 with the PROBE Image and BAMS_ID of the latest (based on local_facial_acquisition_timestamp) BIOMETRIC_ENROLMENT where \n BIOMETRIC_ENROLMENT.BUSINESS_CONTEXT_TEXT = 'Citizenship' \n and BIOMETRIC_ENROLMENT.BUSINESS_EVENT_TEXT IN ('Citizenship_interview','Citizenship_Test')\nAnd BIOMETRIC_IMAGE_REFERENCE. BIOMETRIC_IMAGE_REFERENCE_TYPE = 'FC'\nIf no such image id exists\nCall SV606 with the PROBE Image and BAMS_ID of the latest (based on local_facial_acquisition_timestamp) BIOMETRIC_ENROLMENT where \nBIOMETRIC_ENROLMENT.BUSINESS_CONTEXT_TEXT= 'Citizenship' and BIOMETRIC_ENROLMENT.BUSINESS_EVENT_TEXT NOT IN ('Citizenship_interview','Citizenship_Test') \nAnd BIOMETRIC_IMAGE_REFERENCE. BIOMETRIC_IMAGE_REFERENCE_TYPE = 'FC'\n \nIf IncludeImage = 'F' OR BAMS_ID sent is for BIOMETRIC_ENROLMENT.BUSINESS_EVENT_TEXT IN ('Citizenship_interview','Citizenship_Test') and BIOMETRIC_ENROLMENT.local_facial_acquisition_timestamp) < '2009-09-17' SET SV606 IncludeImage flag = 'F'\n \n NB Biometric Match Result is still returned even if it is not 'lawful to disclose' image.\n\nOS002.7 If SV606 call fails due to Probe Image not being of Biometric Quality, return message PRTY00100.\nOS002.8 If Biometric Match Result = 'No Match', return message PRTY00099.\n\nResponse: Biographic Data\nOS002.9 If IncludeBiographicFlag = 'T' and Biometric Match Result = 'Match', Biographic Data will be returned as follows:\n Return Biographic details where PARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE = '1'\nSet NameUsageType = 'Principal Preferred'. \n\nOS002.9.1 If AliasNameFlag = 'T'\n Also return Biographic details where \nPARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE = '2'\nOR\nPARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE not in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE in ('1', '2') \n\nSet NameUsageType = 'Alias' for all names returned as a result of AliasNameFlag = 'T'. \n\nOS002.9.2 If AliasExistsFlag = 'T'\n Also return AliasExistsFlag.\nSet = 'T' where exists (\nPARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE = '2'\nOR\nPARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE not in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE in ('1', '2') \n )\n Else Set 'F'\n\nResponse: Other Data - Only return where Biometric Match Result = 'Match' \nOS002.10 Deceased Indicator:\n Set 'T' where exists DEATH.EFFECTIVE_TO_TIMESTAMP IS NULL. \nELSE Set 'F'\n \nOS002.11 Citizenship Status:\n If exists CITIZENSHIP where BUSINESS_SERVICE_ROLE.ROLE_STATUS = '5' SET = 'Acquired'\n ElseIf exists CITIZENSHIP where BUSINESS_SERVICE_ROLE.ROLE_STATUS = '9' SET = 'Loss'\nElseIf exists CITIZENSHIP where BUSINESS_SERVICE_ROLE.ROLE_STATUS = '3' SET = 'Approved not Acquired'\n Else SET = 'Not Approved'. \n\nOS002.12 Document Status:\n For CCN that matched:\n If exists DOCUMENT_EVENT.DOCUMENT_EVENT_TYPE = 'VOIDED_REASON' SET = 'Void'. \n Else SET = 'Current'\n\n \nResponse: Image\nIf IncludeImage = 'T' and Biometric Match Result = 'Match' and Image is 'lawful to disclose', return the Image against which the PROBE Image was verified.\nNB Citizenship Images other than ('Citizenship_interview','Citizenship_Test') prior to 17\/09\/2009 are lawful to disclose. This is checked before setting IncludeImage flag in SV606 call.\n\nOS002.13 If no Image exists. Return message PRTY00095\nOS002.14 If Image exists but not lawful to return. Return message PRTY00096. \nOS002.15 If Image exists but BMS cannot find image. Return message PRTY00097\nOS002.16 If Biometric Match Result = 'Match', return message PRTY00094.\nOS002.17 IsImageAvailable (FaciaImageCount):\nIf image exists set = 'T' Else 'F'\n\n"},{"filename":"Orchestration\/Services\/OS002-MatchBiometricCaptureByVisa\/V1.0\/XSD\/README.md","contents":"## Service Usage\nOS002 is an Orchestration Service that provides the ability to search and retrieve Biographic and Biometric data associated with a client's Visa details, and to conduct a Biometric verification using the provided Image.\nThe search is conducted using a Visa Grant Number or Document number, with further filtering by Biographic Criteria (Date of Birth, Family Name and Given Name).\nA Biometric verification is conducted using the provided Image and the Biometric data retrieved for a party.\n\nThe service orchestrates calls to services 'SV341' and 'IN009' to retrieve biographic data associated with the matching party's business dealing, and to BMS via SV606 to conduct the Biometric verification.\n"},{"filename":"Orchestration\/Services\/OS003-SearchBiometricCaptureByCitizenship\/V1.0\/XSD\/README.md","contents":"## Service Usage\nOS003 is an Orchestration Service that provides the ability to search and retrieve Biographic and Biometric data associated with a client's Citizenship application, and to conduct a Biometric verification using the provided Image.\nThe search is conducted using Biographic Criteria (Date of Birth, Family Name and Given Name).\nA Biometric verification is conducted using the provided Image and the Biometric data retrieved for one or more matching parties.\nThe service orchestrates calls to service IN009 to retrieve biographic data associated with the matching party's business dealing, and to BMS via SV606 to conduct the Biometric verification.\n\n\n## Service Behaviour\nThe service will attempt to retrieve data for a single party based on the supplied criteria, according to the following flow and business rules:\nCitizenship BUSINESS_CONTEXT = 'CITIZENSHIP'\nOS003.1 The Biographic criteria is matched against ICSE Principal Preferred biographic data, for parties with Citizenship Applications:\nMatching rules: \nFor PARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE = 'CID' AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE = '1'\n- 'Date of Birth Year' = BIOGRAPHIC.BIRTH_DATE_YEAR\n- 'Date of Birth Month' = BIOGRAPHIC.BIRTH_DATE_MONTH (if 'Date of Birth Month' not provided match BIOGRAPHIC.BIRTH_DATE_MONTH in (0,-1))\n- 'Date of Birth Day' = BIOGRAPHIC.BIRTH_DATE_DAY (if 'Date of Birth Day' not provided match BIOGRAPHIC.BIRTH_DATE_DAY in (0,-1))\n- 'Family Name' = BIOGRAPHIC.FAMILY_NAME\n- 'Given Name' = BIOGRAPHIC.GIVEN_NAME (If 'Given Name' nor provide match BIOGRAPHIC.GIVEN_NAME = '') \nAND Exists Citizenship Application \nOS003.2 If no parties match Biographic criteria, a response is returned with the message PRTY00092.\nOS003.3 If more than 10 parties match Biographic criteria, a response is returned with the message PRTY00093.\nOS003.4 Where between 1 and 10 parties match Biographic criteria, the OS service will attempt a Biometric Verification via SV606. A response will be sent with as follows: \nResponse: Biometric Match Result\nBiometric Match Rules:\nCall SV606 with the PROBE Image and FOR EACH CANDIDATE (1-10) the BAMS_ID as per the following rules:\nThe latest (based on local_facial_acquisition_timestamp) BIOMETRIC_ENROLMENT where \n BIOMETRIC_ENROLMENT.BUSINESS_CONTEXT_TEXT = 'Citizenship' \n and BIOMETRIC_ENROLMENT.BUSINESS_EVENT_TEXT IN ('Citizenship_interview','Citizenship_Test')\nAnd BIOMETRIC_IMAGE_REFERENCE. BIOMETRIC_IMAGE_REFERENCE_TYPE = 'FC'\nIf no such image id exists for a candidate\nThe latest (based on local_facial_acquisition_timestamp) BIOMETRIC_ENROLMENT where \nBIOMETRIC_ENROLMENT.BUSINESS_CONTEXT_TEXT= 'Citizenship' and BIOMETRIC_ENROLMENT.BUSINESS_EVENT_TEXT NOT IN ('Citizenship_interview','Citizenship_Test') \nAnd BIOMETRIC_IMAGE_REFERENCE. BIOMETRIC_IMAGE_REFERENCE_TYPE = 'FC'\n \nIf IncludeImage = 'F' OR ALL BAMS_ID sent are for BIOMETRIC_ENROLMENT.BUSINESS_EVENT_TEXT IN ('Citizenship_interview','Citizenship_Test') and BIOMETRIC_ENROLMENT.local_facial_acquisition_timestamp) < '2009-09-17' SET SV606 IncludeImage flag = 'F'\n \n NB Biometric Match Result is still returned even if it is not 'lawful to disclose' image.\n \nOS003.5 If SV606 call fails due to Probe Image not being of Biometric Quality, return message PRTY00100.\nOS003.6 If Biometric Match Result = 'No Match', return message PRTY00099.\nResponse: Biographic Data\nOS003.7 If IncludeBiographicFlag = 'T' and Biometric Match Result = 'Match', Biographic Data will be returned as follows:\n Return Biographic details where PARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE = '1'\nSet NameUsageType = 'Principal Preferred'. \nOS003.7.1 If AliasNameFlag = 'T'\n Also return Biographic details where \nPARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE = '2'\nOR\nPARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE not in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE in ('1', '2') \nSet NameUsageType = 'Alias' for all names returned as a result of AliasNameFlag = 'T'. \nOS003.7.2 If AliasExistsFlag = 'T'\n Also return AliasExistsFlag.\nSet = 'T' where exists (\nPARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE = '2'\nOR\nPARTY_SYSTEM_IDENTIFIER.IDENTIFIER_CODE_TYPE not in ('CID') AND PARTY_BIOGRAPHIC.NAME_USAGE_TYPE in ('1', '2') \n )\n Else Set 'F'\nResponse: Other Data - Only return where Biometric Match Result = 'Match'\nOS003.8 Deceased Indicator:\n Set 'T' where exists DEATH.EFFECTIVE_TO_TIMESTAMP IS NULL. \nELSE Set 'F'\n \nOS003.9 Citizenship Status:\n If exists CITIZENSHIP where BUSINESS_SERVICE_ROLE.ROLE_STATUS = '5' SET = 'Acquired'\n ElseIf exists CITIZENSHIP where BUSINESS_SERVICE_ROLE.ROLE_STATUS = '9' SET = 'Loss'\nElseIf exists CITIZENSHIP where BUSINESS_SERVICE_ROLE.ROLE_STATUS = '3' SET = 'Approved not Acquired'\n Else SET = 'Not Approved'. \nOS003.10 Document Status:\n If exists DOCUMENT.DOCUMENT_TYPE = citizenship_certificate' AND EXISTS 'DOCUMENT_EVENT.DOCUMENT_EVENT_TYPE = 'VOIDED_REASON' SET = 'Void'. \n Elseif exists DOCUMENT.DOCUMENT_TYPE = citizenship_certificate' SET = 'Current'\n Else SET = 'Not Applicable'\n \nResponse: Image\nIf IncludeImage = 'T' and Biometric Match Result = 'Match' and Image is 'lawful to disclose', return the Image against which the PROBE Image was compared.\nNB Citizenship Images other than ('Citizenship_interview','Citizenship_Test') prior to 17\/09\/2009 are lawful to disclose. \nOS003.11 If no Image exists. Return message PRTY00095.\n NB In the case of multiple candidates, this message will only apply if no candidate parties have an image.\nOS003.12 If Image exists but not lawful to return. Return message PRTY00096. \n NB In the case of multiple candidates, this check only applies to the image for the party the subject of a Biometric Match Result of 'Match'\nOS003.13 If Image exists but BMS cannot find image. Return message PRTY00097\n NB In the case of multiple candidates, this message will only apply if BMS cannot find an image for any of the candidates.\nOS003.14 If Biometric Match Result = 'Match', return message PRTY00094.\nOS003.15 IsImageAvailable (FaciaImageCount):\nIf Image exists set = 'T' Else 'F'\n\n\n"},{"filename":"Orchestration\/Services\/OS003-SearchBiometricCaptureByVisa\/V1.0\/XSD\/README.md","contents":"## Service Usage\nOS003 is an Orchestration Service that provides the ability to search and retrieve Biographic and Biometric data associated with a client's Visa Details, and to conduct a Biometric verification using the provided Image.\nThe search is conducted using Biographic Criteria (Date of Birth, Family Name and Given Name).\nA Biometric verification is conducted using the provided Image and the Biometric data retrieved for one or more matching parties.\nThe service orchestrates calls to service IN009 to retrieve biographic data associated with the matching party's business dealing, and to BMS via SV606 to conduct the Biometric verification.\n"},{"filename":"Organisation\/Services\/SV646-NotifyCarrierUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service notifies of the creation of a new carrier (AIRLINE or CRUISE OPERATOR) with the contact address details and method by which the carrier wishes to be notified. "},{"filename":"Party\/Services\/IN001-RetrievePartyByAddressId\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service was designed to be used for Client Search only. Its design is to be used in conjunction with Search to retrive parties (Org, Person and Agents) related to an address.\n## Service Behaviour\nThis service was designed to be used for Client Search only.\n## Service Variants\nNA\n## Service Dependencies\nNA\n## Service Composition\nThis service utilises CDH only for all data\n## Service Flow\nThis service utilises CDH only for all data\n## Transformation\nNone\n## Service State Management Decisions\nNone\n"},{"filename":"Party\/Services\/IN004-SearchPartyExactName\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is designed to be able to retrieve a Person or Organisation based on the exact matching of names and biographic details. This differs from other services that utilise fuzzy name, linguistic and phonetic name matching techniques and instead focus's on the function where a surname or given name is known outright to discover other parties with that exact details and not cloud the results with additional logic.\n"},{"filename":"Party\/Services\/IN007-SearchConsolidatedAddress\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to search and retrieve addresses and those parties associated to the address. The Search accepts most of the typical address fields but applies no fuzzy logic or name recoginiton to the address search. \nThis service is only used by CSP and is currently deemed as an Internal Service only and not for enterprise consumption.\n## Service Behaviour\nThis service is an internal interaction between CSP and DHUB.\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThis service\n## Transformation\nNone\n## Service State Management Decisions\nNone\n"},{"filename":"Party\/Services\/IN010-RetrievePartyBiographic\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used by CSP to retrieve all of a party's biographic unconsolidated with it's confidence percentile\n## Service Behaviour\nThis service retrieves a party's unconsolidated biographic when a given System Party Identifier is used\n"},{"filename":"Party\/Services\/IN011-UpdatePartyBiographic\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis internal service is used by CSP to update a party's biographic and it's confidence percentage for a given Party Biographic ID\n## Service Behaviour\nThis internal service update a party's biographic for a given Party Biographic ID returned from service IN010\n"},{"filename":"Party\/Services\/SV001-SearchParty\/V7.0\/XSD\/README.md","contents":"## Service Usage\nThe service is used by consumers to find a Party (Person or Organisation) using specific search criteria such as biographic data, identity documents or any associated role the Party may have (e.g. Registered Migration Agent, Non Registered Overseas Migration Agent, etc).\nThe execution of this service is a step that may occur naturally in any business process where the goal of the user is to locate a Party. If the Party cannot be found, the user may have to refine their search criteria values.\nThe service returns a list of Party summary information that matches the search criteria. There is sufficient data in the Party summary to allow a user to determine if this is likely to be the Party of interest and whether or not to invoke another service to retrieve full Party details.\n\n\n\n\n\n\n\n\n## Service Behaviour\nThis service provides Party Search functionality in the following steps:\nThe consumer invokes the service with following elements as part of SearchPartyRequest message.\nParty Search Type\nInquiry Level\nParty Role\nAnd either one of the following\nPerson Details\nOrganization Detail\nParty Identifier.\nThe consumer receives either\nA list of Party Summaries for matched active Party records. The data retrieved is constrained to the level of visibility for the security profile of the user associated with the execution.\nor\nEnterprise error message if the search fails.\nThis service also provides the following behaviours:\nRole Based Searching\nThe service supports the use of role based searching for each Party type; this has been implemented to allow searching for Parties based on a specific role they have with DIAC (e.g. Migration Agent, Non Registered Migration Agent, etc), with an optional criteria of specifying the agency associated with the role.\nFollowings are the list of valid role types:\nRegistered Migration Agent\nEducation Agent\nTravel Agent\nNon Registered Overseas Migration Agent\nBAMS - Biometric Acquisition and Matching System\nVLN Visa Lodgement Number\nThese types can be searched either individually or in combination with other types; valid Combinations are:\nAll Agent Types\nRegistered Migration Agents AND Non Registered Overseas Migration Agents\nName Token Swap\nThe service provides functionality to perform a name token swap for searches using Person Name biographical criteria. Specifying a name token swap requests that the provider checks if there is another more likely way for the provided name attributes to be ordered (e.g. Smith John is more likely to be John Smith).\nIf there is a more likely order of the name than the one provided, this alternative order will be returned within two additional response fields: OtherLastName and OtherGivenName.\nNote: The search based on the original name order will still occur when a name token swap has been specified; a search is not performed on the alternative order without the user initiating it.\nAdvanced Searching\nAdvanced searching uses the GNR (Global Name Recognition) search method, which allows for fuzzy searching and requires less specific input data to return valid results (e.g. John will be matched to Jon, Jonathan and Johan). This behaviour allows consumer to search for parties, when agent roles are not specified.\nFor additional information on searching options refer to the CDH options paper titled Design Options Paper - Person Search.DOC\nIdentifier Search\nThe following Identifier searches are supported:\nABN \nACN \nAPPROVED_PDP \nARBN \nASX \nBAMS_ID \nBOAT_NAME \nBORDER_REFERRAL_ID \nBOX_FILE_NUMBER \nCAS \nCCCN \nCCMDS_APPOINTMENT_ID \nCCMDS_JOB_ID \nCCMDS_REFERRAL_ID \nCCMDS_SERVICE_ID \nCEN \nCENTRE_ID \nCERTIFICATE_NUMBER \nCID \nCITIZENSHIP_APPOINTMENT_ID \nCLASS_ACTION_NAME \nCLIENT_CASE_ID \nCRIMINAL_DEPORT_ID \nELMA_EXAMINEE_ID \nFILE_NUMBER \nHATS_CLIENT_ID \nIOM_ID \nIRIS_CLIENT_ID \nMARN \nMPMS \nNIC \nOCN \nOFFSHORE_BOAT_TASKFORCE_ID \nPERMISSION_REQUEST_NUMBER \nPID \nPV_BOAT_AND_SQUENCE_ID \nPV_BOAT_TASKFORCE_NUMBER \nPV_CASE_ID \nRECEIPT_NUMBER \nREFUGEE_ID \nRESI_CASE_ID \nREVENUE_RECEIPTING_ID \nSAFE_HAVEN_GROUP_NAME \nSCID \nSECURITY_REFERRAL_ID \nSPECIAL_NEEDS_GROUP_TYPE \nSRI \nSSC \nSTEPS_ORGANISATION_ID \nTRN \nUNHCR_ID \nVISA_APPLICATION_ID \nVISA_EVIDENCE_NUMBER \nVISA_GRANT_NUMBER \nVLN \nVRTSI \nSPONSORSHIP_AGREEMENT_NUMBER \nBUSINESS_CONTEXT_CONTAINER_NUMBER \nIRIS_VISA_APPLICATION_ID \n\n\n\n\n\n\n\n\n\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n\n## Service Composition\nThis service is not a composite service, i.e. it is not composed of other services within the Service Portfolio.\n\n\n\n## Service Flow\nDepending on the search type and search criteria being used, this service will access either the ICSE or CDH provider systems. The general breakdown is as follows:\nSearch Type Provider \nPerson or Organisation or Id (Without an Agent Role specified) CDH Search \nPerson & Organisation (With an Agent Role specified) ICSE Search \nIdentity Document ICSE Search \nFor Person and Organisation (without an Agent Role specified):\nThe Party Summary data is returned by CDH.\nThe ESB:\nWhere necessary, transforms SearchPartyRequest to CDH.searchParty with Person or Organisation as appropriate.\nInvokes searchParty.\nIf no results then generate warning message (SV001.MSG-W01) and END flow.\nIf one or more results are returned they will be in searchPartyResponse format.\nESB returns searchPartyResponse to consumer.\nFor Person and Organisation (with an Agent Role specified):\nService Consumer invokes the service on the ESB with SearchPartyRequest.\nESB will recognise as an ICSE-Search based on the presence of an Agent Role value in the PartyRoleType attribute\/s.\nFor ICSE-Search, ESB invokes the secondary provider ICSE as follows:\nESB extracts the GivenName, FamilyName, PartyRoleType (multiple values can be submitted), PartyRoleId and related OrganisationName from the searchParty.RequestObject and transforms to ICSE.SearchAgentRequest\nESB invokes ICSE.SearchAgentRequest.\nESB transforms the ICSE.SearchAgentResponse to SearchPartyResponse.\nIf no search results found then return SV001.MSG-W01 and END flow.\nESB returns SearchPartyResponse to consumer.\nNote: A warning will be returned where one type of Party is expected but a record of another Party type is found with the provided search criteria. SV001.MSG-W05 is returned when the search criteria match an Organization, but a Person was expected. SV001.MSG-W04 is returned when the search criteria match an Organization, but a Person was expected.\nLimitations: If a name search yields more than 1,000 Parties, only 1,000 Parties are returned with a warning PRTY0020. This limitation is not present on searches using address.\n\nRefer to the NameHunter documentation for details of the limitations it imposes upon this service.\nFor Person_ID and OrganisationID search where Alternate Identifier or Role Identifier is of Type specified in section ICSE Service Provider:\nService Consumer invokes the service on the ESB with SearchPartyRequest.\nESB will recognise as an ICSE-Search based on the presence of specific Alternate Identifier or Role Identifier.\nESB invokes ICSE.SearchAgentRequest.\nESB transforms the ICSE.SearchAgentResponse to SearchPartyResponse.\nFor Party Search Type Identity Document and document type code of 1 (Passport):\nService Consumer invokes the service on the ESB with SearchPartyRequest.\nESB will recognise as an ICSE-Search based on the Party Search Type of Identity Document (Passport).\nESB invokes ICSE.SearchAgentRequest.\nESB transforms the ICSE.SearchAgentResponse to SearchPartyResponse.\n\n\n\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Party\/Services\/SV004-ModifyParty\/V4.0\/XSD\/README.md","contents":"## Service Usage\nModifying a Party is a step that occurs in the course of a variety of business processes where data about a Party (sometimes called a client) is required to be changed or added to in order for business processes to function correctly.\nThe typical case is where SV003 Create Party (or some other mechanism, such as the user interface of one of the provider systems) has been used at some prior time to create a Party with the data required at that time. SV004 Modify Party may be used immediately to complete the initial party record or at some time later due to an error, a change in circumstances or a new business context.\nSuch updates may be required for a number of business reasons, including:\nFor addresses\nadds new addresses - for location and electronic addresses\nmodifies existing locations\nmodifies address usage\nFor names\nCorrection of wrongly entered name\nAddition of an name alias, or terminates existing alias\nThe number of added or changed attributes can be quite varied depending on the circumstances of the change.\nIn SFP7 the service interface changed to incorporate following elements :\nEthinicityList and MaritalStatusList\nInclusion of Ethnicity List allows the request to provide a collection of Ethnicity Type with its Start Date and End Date.\nInclusion of Marital Status List allows the request to provide a collection of Marital Status Type and its Start Date and End Date.\n\n\n\n\n\n\n\n\n## Service Behaviour\nThis service provides Party Search functionality in the following steps:\nThe consumer invokes the service with following elements as part of SearchPartyRequest message.\nParty Search Type\nInquiry Level\nParty Role\nAnd either one of the following\nPerson Details\nOrganization Detail\nParty Identifier.\nThe consumer receives either\nA list of Party Summaries for matched active Party records. The data retrieved is constrained to the level of visibility for the security profile of the user associated with the execution.\nor\nEnterprise error message if the search fails.\nThis service also provides the following behaviours:\nRole Based Searching\nThe service supports the use of role based searching for each Party type; this has been implemented to allow searching for Parties based on a specific role they have with DIAC (e.g. Migration Agent, Non Registered Migration Agent, etc), with an optional criteria of specifying the agency associated with the role.\nFollowings are the list of valid role types:\nRegistered Migration Agent\nEducation Agent\nTravel Agent\nNon Registered Overseas Migration Agent\nBAMS - Biometric Acquisition and Matching System\nVLN Visa Lodgement Number\nThese types can be searched either individually or in combination with other types; valid Combinations are:\nAll Agent Types\nRegistered Migration Agents AND Non Registered Overseas Migration Agents\nName Token Swap\nThe service provides functionality to perform a name token swap for searches using Person Name biographical criteria. Specifying a name token swap requests that the provider checks if there is another more likely way for the provided name attributes to be ordered (e.g. Smith John is more likely to be John Smith).\nIf there is a more likely order of the name than the one provided, this alternative order will be returned within two additional response fields: OtherLastName and OtherGivenName.\nNote: The search based on the original name order will still occur when a name token swap has been specified; a search is not performed on the alternative order without the user initiating it.\nAdvanced Searching\nThe service updates the supplied attributes of the identified Party in the primary provider system, which indirectly may also update attributes in other systems via existing interfaces. \nThe service handles data within discrete groupings:\nBiographic - a persons name, date of birth, gender, birth country code; includes name usage and source of biographic information\nIdentifiers system IDs and external identifiers\nContacts name details (ICSE requires that the Family Name is mandatory, although it is an optional element within the schema), addresses, phone, fax and email details; includes source of contact name details. Note that the ICSE key for address, telephone, fax and email can be specified within the request message via the SystemId and SequenceNumber.\nPersonal Factors such as religion, language, country of residence, name ethnicity and marital status. It uses code lookup tables while transforming the request message.\nBusiness Context case details, detention details and UHM details\nThe consumer may choose to include some or all of these data groups in the same request message.\nIn some cases the service may create the Party in a provider system if it does not exist there already and a request message containing only a Party ID may cause this to happen.\nThe service does not monitor nor enforce some aspects of its usage, for example that a duplicate party is not created. It is trusted that the service consumer applications or the service provider systems enforce these constraints. \nOnly person Parties can be modified, but later versions of the service may also support:\nOrganisation parties\nParty of Interest details\nPrior to the SV004 request individual attributes may be null (so data is being added), or may hold values (so data is being updated). In the case of an update, the value may be being corrected, replaced, or added to. SV004 requests may include added data, updated data, or a combination of both. In most cases prior data is maintained in the provider systems rather than deleted or overwritten.\nThe subset of data included in the SV004 request is as determined by the service consumer within its own business context. There is no minimum data requirement for this service, and indeed a null request that does not update any data is valid. However:\nA Party Id must be provided\nIndividual data attributes will not be carried forward from previous versions of a given data entity. Hence, individual data entities must be complete, containing all attributes not just the changed ones\nRules for individual data entities may prohibit incomplete or inconsistent attribute values\nHence, SV004 provides a flexible container by which the service consumer can provide those values that it wishes to modify.\nThe service returns the PartyId. It also returns other party identifiers in other provider systems if a party was created in them as part of the service processing. The Party may be modified in one or more downstream provider systems, but this update may not occur immediately in these systems.\n\n\n\n\n\n\n\n\n\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n\n## Service Composition\nThis service is not a composite service, i.e. it is not composed of other services within the Service Portfolio.\n\n\n\n## Service Flow\nThe flow for the Modify Party service is as follows:\nThe consumer constructs a ModifyPartyRequest message, including the Party ID and party data to be added or modified, and invokes SV004. Note that when SV004 is called immediately after receiving the SV003 response, the consumer must include in the SV004 request all identities that were sent in SV003, including the BiodataInformationSource against each identity. This is required because SV003 response does not return the BiodataInformationSource (since CDH does not store it), but ICSE requires it to create a client (also see step 6).\nESB calls SV002 to obtain the data held about the Party (it is expected that the party will always exist in CDH)\nESB receives the SV002 RetrievePartyResponse message and inspects it to see if it contains a CID. If the reply contains a CID, then processing continues at step 9. If no CID was returned (and so it is assumed that there is no client record in ICSE) then processing continues at step 4\nThe ESB determines if one of the names returned from CDH is of type Principal \/ Preferred. If at least one name is of type Principal \/ Preferred then processing coninues at step 6. If no name returned from CDH is of type Principal \/ Preferred then processing continues at step 5\nThis step is required when creating a client in ICSE to ensure that a name of type Principal \/ Preferred is supplied (ICSE will return an error when creating a client if a name of type Principal \/ Preferred is not supplied). Note: It is assumed that the consumer of this service provides a name of type Principal \/ Preferred. The ESB takes the identity associated with the name of type Principal \/ Preferred provided by the consumer and compares it against the identities returned from the previous call to SV002. If a match is found, then the name type returned by SV002 is updated to Principal \/ Preferred. If no match is found then the identity associated with the name of type Principal \/ Preferred that is provided by the consumer is added to the list of identities returned from SV002. The following identity attributes must be the same in both the SV002 RetrievePartyResponse message and the SV004 ModifyPartyRequest message for an identity to be considered matched:\nFamilyName\nGivenName\nBirthDate (BirthDateDay, BirthDateMonth, BirthDateYear)\nSexType\nBirthCountryCode\nNameTitleText\nThis step is required to ensure that each identity passed to ICSE when creating the client contains a BiodataInformationSource. Note that step 1 requires that where SV004 is called immediately after SV003, all identity information sent in the SV003 request must also be present in the SV004 request. The ESB takes the identities provided by the consumer in the SV004 request and compares them against the identities returned from the previous call to SV002. For each match found, the BiodataInformationSource against an identity provided by the consumer is added to the matched identity returned by SV002. For all identities returned from the previous call to SV002 which are not matched, the BiodataInformationSource is defaulted to 7. The following identity attributes must be the same in both the SV002 RetrievePartyResponse message and the SV004 ModifyPartyRequest message for an identity to be considered matched:\nFamilyName\nGivenName\nBirthDate (BirthDateDay, BirthDateMonth, BirthDateYear)\nSexType\nBirthCountryCode\nNameTitleText\nNameUsage\nNote: NameUsageStartDate is not included when matching since SV002 will not return this when the ICSE client does not exist.\nESB creates a ClientMaintenenceRequest message with the Party Id provided by the consumer and the party data returned in the SV002 RetrievePartyResponse message (including any updated name types as per step 5) and invokes the ICSE service\nSince no CID was provided, ICSE performs a query to determine whether or not there is an ICSE client associated with the Party Id. If there is not an ICSE client associated with the Party Id, ICSE creates a new client with the party data provided. If there is an ICSE client associated with the Party Id, ICSE simply ignores the party data in the ClientMaintenanceRequest message. In either case, ICSE replies with the ClientMaintenanceRequest message with the CID that either already existed or has just been created.\nESB creates a new ClientMaintenenceRequest message with the data provided by the consumer, plus the CID (which was obtained in step 3 or in step 5) and invokes the ICSE service\nSince a CID was provided, ICSE applies the provided data to the client record, adding new and changed entities as required. ICSE then replies to the ESB with the ClientMaintenanceRepsonse message\nESB returns ModifyPartyResponse to consumer with the Party Id, and includes the CID if a new client was created in ICSE\n\n\n\n\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Party\/Services\/SV021-SearchMovement\/V2.0\/XSD\/README.md","contents":"## Service Usage\nA Party is any person or organisation that directly or indirectly interacts with DIACs core business. All expected and actual Movements associated to a party can be retrieved and filtered based on a date range and the movement type.\n\n## Service Behaviour\nThis service retrieves all movements associated to a party including a collection of information that is stored in TRIPS defining the movement. A valid ID to uniquely identifier the party and optionally the date range and movement type is supplied. \n\nThe retrieved data consists of:\n\n Expected Movements; Flight\\Vessel Number, Expected travel dates, times, ports, directions etc\n\n Actual Movements; Flight\\Vessel Number, Expected travel dates, times, ports, directions etc\n\nSV288 will be used to retrieve the required identifiers to pass to TRIPS. The unique ID for the party will be resolved to a PID and an SPL. If PID is supplied SV288 will still be invoked to retrieve the SPL. \n\nIf the End Date passed in is greater than 1989, historical movements file is not checked as all historical movements are pre 1989 only. This logic is handled by the TRIPS provider to save processing. \n\n## Service Variants\nNone.\n\n## Service Dependencies\nNone.\n\n## Service Composition\nThis service is a composite service i.e. it is composed of other services within the Service Portfolio.\n\n## Service Flow\n1. An event is generated by the Service Consumer when they invoke the SearchMovement service on the ESB by sending a valid SearchMovementRequest.xml file to the ESB.\n2. ESB invokes RetrieveConsolidatedPartyIdentifiers (SV288) with the identifier provided by the consumer. \n3. ESB extracts the active PID and active SPL (where they exist) and populates these identifiers into the SearchMovementRequest.xml\n4. SearchMovementRequest.xml is then parsed and eSQL produces a flat file request to TRIPS. \n5. ESB invokes the provider TRIPS with this flat file. \n6. TRIPS responds with the flat file response. ESB processes this using eSQL and converts the flat file to a valid SearchMovementResponse.xml\n7. ESB adds any code reference lookups and code translations to the SearchMovementResponse.xml\n8. ESB returns SearchMovementResponse.xml to the consumer\n1.1.1 Alternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when SV288 raises an error.\n1. SV288 Returns an error code\n2. ESB will not call TRIPS\n3. ESB passes this error code on unchanged to the consumer.\n1.1.2 Alternate Flow 2 (AF2)\nThe following alternate service flow depicts the execution path that takes place when SV288 returns no SPL or PID. \nSV288 returns a valid response but it contains no PID or SPL\nESB will not call TRIPS\nESB will pass back a warning and a valid empty SearchMovementResponse.xml\n\n## Service State Management Decisions\nIf either provider system returns an error code at any stage of the service execution, the message flow will be stopped and the error returned to the consumer. This service will not return partial response messages.\n\n"},{"filename":"Party\/Services\/SV111-NotifyBusinessOrPartySubscription\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis allows for consumers to subscribe to party events and business events.\n## Service Behaviour\nThis service can be used primarily as an asynchronis update to the notification topics. No payload is carried to update any party records.\n"},{"filename":"Party\/Services\/SV278-RetrieveConsolidatedPartyBusinessSummary\/V11.0\/XSD\/README.md","contents":"## Service Usage\nThe service will be used by CCMD&S, CCP, GVP, ECS and BSP to show the business dealings a party can have with DIAC. This service provides a consolidated summary of active and past business dealings for a nominated party. The information will be retrieved from the CDH.\n## Service Behaviour\nA request is sent from the consumer to the CDH requesting a business summary for a party. CDH returns returns all information or the business dealings with no orchestration of calls to another provider.\n\nThe request will contain a System of Entry (SoE) code or party role identifier to identify the party concerned. Optionally, the service will allow one or more business dealing categories to enable CDH to return only specific business areas. If there is no specific business dealing category in the request then it is assumed that all business categories for that party will be retrieved.\n\nWhen CDH returns the business summary in the service response format to the consumer. A party, with respect to this service, may be either a person or an organisation. This service will return all roles associated with the business dealing.\n\nThe service returns a list of associated business dealings, such as nominations and sponsorships, if such a relationship is stored in CDH. The only exception to this is when GVP create and master a business dealing and subsequently create a dummy, or skeleton, business dealing in ICSE. This is a situation where two identifiers for the one business dealing exist. To cater for this an AssociatedBusinessDealingMsg will be created to indicate the ICSE skeleton business dealing and the business dealing relationship will be 'ICSE skeleton'.\n\nThe number of results returned may be restricted by business dealing category or by a date range. A record start and end number may be sent to indicate only a subset of records be returned from a total set either for all business dealings or for specific business dealings. If specific pagination for a business dealing is specified then it must also be in the top element. A zero in either field indicates no upper or lower bound. \n\nTo ensure that pagination can happen, the order of the business dealing records is by last update date.\n \nA flag may be sent to indicate no related party information is to be sent.\n\nThe response will also indicate, for each business dealing category, how many records have been returned from how many possible records. \n\nNote: A role identifier will be returned in the response instead of one or more party identifiers if and only if a role identifier is sent in the request AND no party is found in CDH.\n\n## Service Variants\nThere are no service variants\n## Service Dependencies\nThis service is dependent on CDH having an appropriate API, or set of APIs, that return the business summary given a party id and, optionally, a business category.\n## Service Composition\nThis service is a single service calling CDH only. This service currently retrieves one, and only one, party back. Although the XSD for the request and response has been designed to allow many different parties to be requested for and returned, this alternative functionality is not implemented. IF identifiers for many different parties are sent in the request the service will return the details for one of them. Which party it would pick is not defined; but the service itself cannot tell that the parties are not multiple and therefore cannot return an error (unless it tries every party and rejects the duplicates).\n\n## Service Flow\n1. The consumer generates a RetrieveConsolidatedPartyBusinessSummary service call to CDH.\n\n2. Within the request structure there are a number of attributes designed to reduce the size of the return XML. These are:\na. Filter (i.e. active or inactive business dealings). The values are ACTIVE, INACTIVE and ALL. Default is ACTIVE;\nb Subset. Values are 0 (all business dealings returned) or 1 (only the latest business dealing returned);\nc. StartDate\/EndDate - Allows a date range;\nd. Offset Start\/Offset Count - Allows a form of pagination over the set of data (assuming all business dealings are sorted from earliest to latest); and\ne. Related Party Flag - A boolean to indicate if related parties are returned\n\n3. It is recommended that the consumer provide their system of record ID, for example Siebel should supply a SCID\n\n4. The data is gathered from CDH and a RetrieveConsolidatedPartyBusinessSummaryResponse message is returned\n\nALTERNATE FLOW 1\nIf an error is detected then CDH will raise an Enterprise error message\n\nALTERNATE FLOW 2\nIf the party is not found then CDH will raise an Enterprise warning message\n\nALTERNATE FLOW 3\nIf the service call times out then a message will be returned to the consumer indicating this.\n## Transformation\nSee the micro documentation.\n## Service State Management Decisions\nNo state management is required.\n"},{"filename":"Party\/Services\/SV279-RetrievePartyApplicationContactDetails\/V3.0\/XSD\/README.md","contents":"## Service Usage\nA Party is any person or organisation that directly or indirectly interacts with DIACs core business. A Partys interaction with DIAC is defined by one or many different Roles e.g. a Person can have the role of Applicant, Sponsor or Agent. An Organisation can have roles including Agency and Sponsor. \n\nThis service retrieves Party Contact Method information relating to a specific Party application, along with other relevant data and related business context information from the ICSE provider system. Contact method information covers relevant postal address, phone, fax or email information relating to the application.\n\nThe contact methods will be limited to only those contacts where the Usage code is set to HOME, MOBILE, POSTAL and BUSINESS. It will therefore exclude codes such as OTHER-HOME, OTHER-BUSINESS etc\n\nNote: This service will not retrieve Agent information from ICSE as currently done by Service SV002 - Retrieve Party.\n\n## Service Behaviour\nThis service retrieves a set of contact method information relating to a specific Party application, selected using a valid CDH Party Id, CID (ICSE Client Id - unique identifier of a client in ICSE). Although the service is considered to use ICSE as its sole provider, if a consumer identifies a party using a CDH Party Id, a call will be made to the CDH to resolve the identifier into a CID utilizable by the ICSE system.\n\nThe request information consists of:\n\n Identifier; the specific identifier for the required Party \n Identifier Type; the type of identifier used (limited to CID or CDH Party Id for the SfP7 release). Where CID is used no resolving of the ID is required and the service call will be more efficient.\n\nThe retrieved data consists of:\n\n Contact method information; a collection of contact details relating to the specified Partys application, comprising of:\no Address\no Phone\no Fax\nEmail information\n\n## Service Variants\nNone\n## Service Dependencies\nThis service relies on the consumer providing a valid unique CDH Party Id or ICSE CID (Client Identifier) for a Party.\n If the consumer identifies a Party using a CDH Party Id, the ESB must use the SV176 Transform Identifier service to resolve the identifier into a CID, utilizable by the ICSE system.\n\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\n\n## Service Flow\n1. An event is generated by the Service Consumer when they invoke the RetrievePartyApplicationContactDetails service on the ESB by sending a valid RetrievePartyApplicaitonContactDetailsRequest.xml file to the ESB.\n2. ESB invokes the primary provider ICSE as follows:\na. ESB will transform RetrievePartyApplicaitonContactDetailsRequest.xml to ICSE.IC_SV_CLNT_RTRV_SRVC_Request as per data mappings in the SV279_v02.00.xls micro design spreadsheet.\nIf the identifier used in the request is a CDH Party Id, at this point the ESB will utilize the SV176 Transform Identifier service to resolve the identifier to a CID. Flow will then continue as per normal. If any identifier type other than Party Id of CID is used, stop flow and return message to consumer (SV279.MSG-E10).\nb. ESB invokes the ICSE.RetrieveParty service\nc. ICSE excecutes the ICSE.RetrieveParty service and returns the ICSE.IC_SV_CLNT_RTRV_SRVC_Response file to the ESB. If the Party does not exist in ICSE then stop flow and return message to consumer (SV279.MSG-E11).\nd. ESB transforms ICSE.RetrievePartyResponse.xml into RetrievePartyApplicaitonContactDetailsResponse.xml as per data mappings in the SV279_v02.00.xls micro design spreadsheet.\n3. ESB returns RetrievePartyApplicaitonContactDetailsResponse.xml to the consumer.\n1.1.1 Alternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\n1. Primary provider ICSE returns a specific error code to the ESB; see section 4 of this document for a full listing of Return Codes and Messages.\n2. ESB transforms error code into Enterprise Error Message.\n3. ESB returns response with Enterprise Error payload to the consumer.\n\n1.1.2 Alternate Flow 2 (AF2)\nIf the ESB raises an error before or while attempting to contact the primary provider, it will respond to the consumer with the relevant Enterprise Error payload. See section 4 of this document for a full listing of Return Codes and Messages.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Party\/Services\/SV287-RetrieveAgentDetails\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service enables a consumer to retrieve information about a nominated Agent and any Agency(ies) that the nominated Agent is related to.\nAn Agent is a Party with the Role of Agent. A Party is any person or organisation that directly or indirectly interacts with DIACs core business. A Party has a Party Role that is a role independent of any specific DIAC business context. For example, DIAC may have an interest in an Agent that is independent of the agents involvement in any specific visa application. Within DIAC, the Party Role of Agent encompasses:\nUnregistered Migration Agent\nRegistered Migration Agent\nTravel Agent\nEducation Agent.\nAgents may also be employed by an organisation referred to as an Agency. In these instances, it is possible for a relationship to exist between an Agent and one or more Agencies.\n\n## Service Behaviour\nThis service retrieves Agent information matching to the supplied Agent Id (Role Id) or Migration Agent Registration Authority (MARA) Registration ID or any other Party Identifier for example PID, SCID,, which must resolve to an Agent Id or Mara Id. ICSE is used as sole provider for Agent information returned by this service.\nTo invoke the service a consumer provides a pair of parameters as under:\n Identifier\n IdentifierType\nValue supplied for IdentifierType (System) can be of one of the following types\n MARA_ID \n ICSEAgentID\n CDH_PARTY_ID\n CID\n HATS_CLIENT_ID\n PID\n REVENUE_RECEIPTING_ID\n SCID\n SPL\n\n## Service Variants\nNone\n## Service Dependencies\nThis service relies on the consumer providing a valid Identifier which resolves to an Agent Id or MARA ID in ICSE.\n\n## Service Composition\nThis service is a composite service. It calls SV288 Retrieve Consolidated Party Identifiers.\n\n## Service Flow\n1. An event is generated by the Service Consumer which invokes the Retrieve Agent Details service on the ESB by sending a SOAP XML message wrapping a message conforming to ESB.RetreiveAgentDetailsRequest.\n2. ESB checks IdentifierType. If IdentifierType is of type AGENT_ID or MARA_ID then flow proceeds to Step 3.\na. Using SV288 resolve party Identifier to Identifier of type AGENT_ID or MARA_ID\nb. If Identifier does not get resolved to either type of AGENT_ID or MARA_ID then return SV287.MSG-E06\n3. ESB transforms the incoming request message to ICSE RetrieveAgentDetailRequest as per DIMA_DCD d15 Service Specification - SV287-v01.0 Retrieve Agent Details.xls and invokes ICSE.\n4. ICSE executes the retrieve agent process and returns an XML message with Agent Details as per ICSE.RetrieveAgentDetailsResponse to ESB.\nNote: ICSE will return details under agent_dtls only when the supplied id belongs to Migration Agent.\n5. ESB transforms the ICSE.RetrieveAgentDetailsResponse message to ESB.RetrieveAgentDetailsResponse and returns it to consumer.\n\n1.1.1 Alternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\n1. Primary provider ICSE returns a specific error code to the ESB\n2. ESB transforms error code into Enterprise Error Message.\n3. ESB returns response with Enterprise Error payload to the consumer.\n1.1.2 Alternate Flow 2 (AF2)\nIf the ESB raises an error before or while attempting to contact the primary provider, it will respond to the consumer with the relevant Enterprise Error payload. \n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Party\/Services\/SV288-RetrieveConsolidatedPartyIdentifiers\/V2.0\/XSD\/README.md","contents":"## Service Usage\nA Party is any person or organisation that directly or indirectly interacts with any of DIACs core businesses. A Party can be recorded and allocated a unique Party Identifier in any number of DIAC systems that manage this interaction. \nThis service will allow for all known Consolidated (i.e. stored in the CDH) Party Identifiers to be retrieved using any other Party Identifier which is known to the consumer. \nThis service will be based on the principles of SV176 Transform Identifier but is not dependent on transforming to or from a Party Id (which is the identifier pertaining to the Client Data Hub).\nParty or System of Entry (SOE) Identifiers such as ICSE Client Identifier (CID) are specific to provider systems such as ICSE. In order to have the ability to use this specific identifier to retrieve other Party Identifiers, the service requires the actual identifier and its type to be used as input. For example, if the value of the identifier type is CID then the Party Identifier represents the Client Identifier which is used in ICSE.\n\n## Service Behaviour\nThis service retrieves all known Consolidated Party Identifiers (stored in CDH) using any other Party Identifier (stored in CDH) supplied by consumer.\nTo invoke the service a consumer provides following parameters\nParty Identifier\nIdentifier Type\nStatus - Status value act as a filter and may have one of ACTIVE, INACTIVE and ALL values. If not provided the service defaults to ACTIVE value.\nThe response returned has following structure and group of fields\nPartyIdentifier\nIdentifierType\nEndDate\n\n## Service Composition\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Retrieve Consolidated Party Identifiers service on the ESB;\nESB transforms the incoming request message Retrieve Consolidated Party Identifiers Request to TCRMService as per DIMA_DCD d15 Service Specification - SV288-v01.0 Retrieve Consolidated Party Identifiers.xls and send the message to CDH\nCDH executes the Retrieve Consolidated Party Identifiers Request and returns an XML message TCRMService to ESB.\nESB receives TCRMService message and transforms it to Retrieve Consolidated Party Identifiers Response\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the CDH provider returns an error.\nESB transforms Error into Enterprise Error Message as per section 4 Return Codes and Messages.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return error as per 4 Return Codes and Messages.\nto the consumer.\n## Service State Management Decisions\nNo state management required\n"},{"filename":"Party\/Services\/SV288-RetrieveImageIdentifiers\/V1.0\/XSD\/README.md","contents":"## Service Usage\nA Party is any person or organisation that directly or indirectly interacts with any of DIACs core businesses. A Party can be recorded and allocated a unique Party Identifier in any number of DIAC systems that manage this interaction. \nThis service will allow for all known Consolidated (i.e. stored in the CDH) Party Identifiers to be retrieved using any other Party Identifier which is known to the consumer. \nThis service will be based on the principles of SV176 Transform Identifier but is not dependent on transforming to or from a Party Id (which is the identifier pertaining to the Client Data Hub).\nParty or System of Entry (SOE) Identifiers such as ICSE Client Identifier (CID) are specific to provider systems such as ICSE. In order to have the ability to use this specific identifier to retrieve other Party Identifiers, the service requires the actual identifier and its type to be used as input. For example, if the value of the identifier type is CID then the Party Identifier represents the Client Identifier which is used in ICSE.\n\n## Service Behaviour\nThis service retrieves all known Consolidated Party Identifiers (stored in CDH) using any other Party Identifier (stored in CDH) supplied by consumer.\nTo invoke the service a consumer provides following parameters\nParty Identifier\nIdentifier Type\nStatus - Status value act as a filter and may have one of ACTIVE, INACTIVE and ALL values. If not provided the service defaults to ACTIVE value.\nThe response returned has following structure and group of fields\nPartyIdentifier\nIdentifierType\nEndDate\n\n## Service Composition\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Retrieve Consolidated Party Identifiers service on the ESB;\nESB transforms the incoming request message Retrieve Consolidated Party Identifiers Request to TCRMService as per DIMA_DCD d15 Service Specification - SV288-v01.0 Retrieve Consolidated Party Identifiers.xls and send the message to CDH\nCDH executes the Retrieve Consolidated Party Identifiers Request and returns an XML message TCRMService to ESB.\nESB receives TCRMService message and transforms it to Retrieve Consolidated Party Identifiers Response\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the CDH provider returns an error.\nESB transforms Error into Enterprise Error Message as per section 4 Return Codes and Messages.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return error as per 4 Return Codes and Messages.\nto the consumer.\n## Service State Management Decisions\nNo state management required\n"},{"filename":"Party\/Services\/SV314-RetrievePartyNotes\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service is to be used to retrieve client notes from the Client Data Hub (CDH) based on optional filtering criteria.\n\n\n## Service Behaviour\nThis service returns a list of notes associated with the client. The types of notes retrieved are:\nCSP Client Notes (CSP this will not be used until CR03)\nClient Additional Info Notes (CAI)\nClient of Interest Notes (COI)\nClient Contact Details Notes (CCD)\nThe client contact details notes message will also show its usage code. A party or role identifier must be sent down.\nThe filters supported are;\nSource system\nElectronic file reference (TRIM)\nStart and End dates\nOffset start in the result set and number of records (offset count) to return.\nThe return list will include the number of notes found, how many notes have been returned and their offset. The implicit order is the Effective From Date of the note.\n\n\n## Service Composition\nThis service is a single service that calls CDH only. A valid invocation of this service requires either a party or role identifier.\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Retrieve Party Note List service on the ESB;\nESB invokes the provider CDH as follows:\nESB will transform RetrievePartyNoteListRequest.xml to CDH. MyTCRM as per data mappings in SV314_v01.00_Micro.doc\nESB invokes the CDH.MyTCRM service on the CDH\nCDH returns CDH.TcrmResponse to the ESB. This will contain all the notes CDH has for this client.\nESB transforms CDH.TcrmResponse to RetrievePartyNoteListResponse.xml\nIf the client exists, but no notes exist then this service will simply return the result set information showing the result set potential size of zero. Otherwise all the clients notes will be returned. The result set counters are for all notes, regardless of type.\nIf the party does not exist then a warning will be returned. Other errors will be sent back to the user as per Alternate Flow 1 below.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms CDH Errors into Enterprise Errors.\nESB returns response with Enterprise Error payload.\nSee Section 4 on errors returned.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return a message to the consumer. See Section 4 on errors returned.\n\n## Service State Management Decisions\nNo state management required\n"},{"filename":"Party\/Services\/SV317-NotifyClientIntegrityEventUpdate\/V1.0\/XSD\/README.md","contents":"## Service Behaviour\nFilters are used in the request message to narrow results to a better match. An Image Count has been added to the response for an easier count of results. \nImage Usage Type is used to indicate whether or not the image is Biometric or Non Biometric. \nImageType is used to indicate whether it is a facial image, fingerprint etc\n\n"},{"filename":"Party\/Services\/SV317-NotifyClientUpdate\/V5.0\/XSD\/README.md","contents":"## Service Usage\nThis service provides a method of maintaining consolidated client information in CDH. Other systems, such as Siebel and GVP, send SV317 notification messages to CDH.\n\nThe service updates client information. In SfP9 this includes:\nClient identifiers\nPersonal biographic data\nOther client information that will be returned in later releases are:\nOrganisational data (e.g. industry type)\nVisa and detention information\nFlags, including In Detention, Migration Review Tribunal (MRT) in progress, etc.\nContact information, such as postal address, email address, etc.\nTravel documents\nAt least one of these areas of information must be present and, possibly, more than one can be present. The behaviour of the service depends on which data exist and is described below.\n\n\n\n## Service Behaviour\nThe service updates information in the CDH. There must be at least one System of Entry (SoE) identifier. The rules are:\nThe System of Entry (SoE) identifiers are present to assist CDH to determine if this is a new client or an update to an existing client;\nThe service returns all SoE identifiers for a client in the response;\nIf message has only SoE identifiers then it must have at least two and may have more;\nIf the message has client information then it must have at least one SoE identifier, although it can have more than one SoE identifier; and\nIf the message has client information and more than one SoE identifier then it updatex the client data and associatex the SoE identifiers.\nA consumer invokes the service by providing the System of Entry identifiers (mandatory) and information. For SfP9 this service provides two business functions:\nAssociate party identifiers; and\/or\nUpdate a persons biodata or organisation details.\nThese functions can be used in the one invocation if multiple SoE identifiers are sent with biodata\nSupported Functions\nAssociate Party Identifiers\nAs of SfP9, the only party identifiers that can be associated are:\nCDH_PARTY_ID\nSiebel SCID \nUpdate a Persons Biodata\nThis function will allow \nPerson Biographic Data\nIf the party is unknown to CDH then at least one SoE identifier needs to be provided and the family name or organisation name. The rules for this service are specified later in the service composition section.\nThe PartyType enumeration must be used to indicate if the party is a PERSON or an ORGANISATION.\nOrganisation Details\nNo organisational information is allowed at this time\nInformation not supported in SfP 9\nThe following is not supported in this release of SV317:\nPerson Status (e.g. lawful, unlawful)\nBusiness dealing information (Visa & Detention)\nContact details (e.g. Postal address, email, fax)\nTravel Documents\nThe following flags:\nUnaccompanied Humanitarian Minor\nIn Detention\nActive Administrative Appeals Tribunal (AAT) Review\nMigration Review Tribunal (MRT) in progress \nRefugee Review Tribunal (RRT) in progress\nJudicial Review in progress\nMinisterial Intervention in progress \nResponse\nThe service responds by either:\nAcknowledging that the update was successful and returning all the identifiers for the client; or\nIndicating that the update was not successful (due to a processing error and\/or system timeout).\n\n\n\n## Service Composition\nThis service is a single service that calls CDH only. A valid invocation of this service requires either a party or role identifier.\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Notify Client Update service on the ESB;\nESB invokes the provider CDH as follows:\nESB will transform NotifyClientUpdateRequest.xml to CDH. MyTCRM as per data mappings in SV317_v01.00_Macro.doc\nESB invokes the CDH. MyTCRM service on the CDH. CDH will:\nIF the client is unknown to CDH then the client will create the client;\nIF the client is known then CDH will amend the client;\nIF only SoE identifiers are sent and the client is known then CDH will update the SoE identifiers with its internal client identifier if it can match the client.\nCDH returns CDH. TcrmResponse to the ESB. This will contain all the client identifiers CDH have for this client.\nESB transforms CDH. TcrmResponse to NotifyClientUpdateResponse.xml\nService Flow\nThere are a number of conditions that need to be handled. These are:\nIF CDH receives a list of one or more identifiers, none of which can be matched to an existing client, and sufficient client details for the client to be created then a client is created;\nIF CDH receives a list of one or more identifiers, none of which can be matched to an existing client, and no further details then CDH will return an error;\nIF CDH receives a list of one or more identifiers, of which one or more can be associated with a single client, then CDHs internal association of SoE identifiers to its CDH party identifier should be updated;\nIF CDH receives a list of one or more identifiers, of which one or more can be associated with a single client, and client data then CDHs internal association of SoE identifiers to its CDH party identifier should be updated and the clients data should be updated; and\nIF CDH receives a list of two or more identifiers that identify two separate clients an error is raised.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms CDH Error into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV317.MSG-E02 to the consumer.\n\n\n## Transformation\nThe two sections below show usage. Please note: as of SfP9 fields that exist in the NotifyClientUpdateRequest XSD but which DO NOT EXIST in the examples below WILL NOT BE SENT to CDH.\nSV317 - Relate SoE IDs to CDH_PARTY_ID\n<pty:NotifyClientUpdateRequest\nxmlns:ptycore=\"http:\/\/www.immi.gov.au\/Namespace\/Party\/Core\/V1.0\"\nxmlns:pty=\"http:\/\/www.immi.gov.au\/Namespace\/Party\/Service\/V1.0\"\nxmlns:ptymsg=\"http:\/\/www.immi.gov.au\/Namespace\/Party\/Messaging\/Service\/V1.0\"\nxmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\nxsi:schemaLocation=\"http:\/\/www.immi.gov.au\/Namespace\/Party\/Service\/V1.0 NotifyClientUpdateRequest.xsd\">\n<ptycore:SourceSystem>SIEBEL<\/ptycore:SourceSystem>\n<ptymsg:PartyIdentifierDetailsListMsg>\n<ptymsg:PartyIdentifierDetails>\n<ptycore:Identifier>5921187932975020<\/ptycore:Identifier>\n<ptycore:IdentifierType>CDH_PARTY_ID<\/ptycore:IdentifierType>\n<ptycore:StatusCode>1<\/ptycore:StatusCode>\n<\/ptymsg:PartyIdentifierDetails>\n<\/ptymsg:PartyIdentifierDetailsListMsg>\n<ptymsg:PartyIdentifierDetailsListMsg>\n<ptymsg:PartyIdentifierDetails>\n<ptycore:Identifier>1-2LG4N<\/ptycore:Identifier>\n<ptycore:IdentifierType>SCID<\/ptycore:IdentifierType>\n<ptycore:StatusCode>1<\/ptycore:StatusCode>\n<\/ptymsg:PartyIdentifierDetails>\n<\/ptymsg:PartyIdentifierDetailsListMsg>\n<\/pty:NotifyClientUpdateRequest>\n\nSV317 - Create New Party:\n<pty:NotifyClientUpdateRequest xmlns:pty=\"http:\/\/www.immi.gov.au\/Namespace\/Party\/Service\/V1.0\"\nxmlns:ns3=\"http:\/\/www.immi.gov.au\/Namespace\/Party\/Core\/V1.0\"\nxmlns:ns15=\"http:\/\/www.immi.gov.au\/Namespace\/Party\/Messaging\/Service\/V1.0\"\nxmlns:ns18=\"http:\/\/www.immi.gov.au\/Namespace\/PersonIdentity\/Core\/V1.0\"\nxmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\"\nxsi:schemaLocation=\"http:\/\/www.immi.gov.au\/Namespace\/Party\/Service\/V1.0 NotifyClientUpdateRequest.xsd\">\n<ns3:SourceSystem>CCMD&amp;S<\/ns3:SourceSystem>\n<ns15:PartyIdentifierDetailsListMsg>\n<ns15:PartyIdentifierDetails>\n<ns3:Identifier>1-1VG1Z<\/ns3:Identifier>\n<ns3:IdentifierType>SCID<\/ns3:IdentifierType>\n<ns3:StatusCode>1<\/ns3:StatusCode>\n<\/ns15:PartyIdentifierDetails>\n<\/ns15:PartyIdentifierDetailsListMsg>\n<ns15:PartyPersonMsg>\n<ns15:PersonSystemDetailsMsg>\n<ns15:PersonBiodataMsg>\n<ns5:FamilyName>FamilyName0<\/ns5:FamilyName>\n<ns5:GivenName>GivenName0<\/ns5:GivenName>\n<ns18:BirthDate>\n<ns18:BirthDay>---01<\/ns18:BirthDay>\n<ns18:BirthMonth>--01<\/ns18:BirthMonth>\n<ns18:BirthYear>2006<\/ns18:BirthYear>\n<\/ns18:BirthDate>\n<ns18:SexType>-<\/ns18:SexType>\n<ns18:BirthCountryCode>BirthCountryCode0<\/ns18:BirthCountryCode>\n<ns5:NameTitleText>NameTitleText0<\/ns5:NameTitleText>\n<ns18:PersonNameUsage>\n<ns18:NameUsageType>NameUsageType0<\/ns18:NameUsageType>\n<\/ns18:PersonNameUsage>\n<\/ns15:PersonBiodataMsg>\n<\/ns15:PersonSystemDetailsMsg>\n<\/ns15:PartyPersonMsg>\n<\/pty:NotifyClientUpdateRequest>\n\n## Service State Management Decisions\nNo state management required\n"},{"filename":"Party\/Services\/SV325-RetrieveConsolidatedPartyIdentitySummary\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service provides the Name, Document and email in order to verify the party and use this party's data for correspondence.\n"},{"filename":"Party\/Services\/SV325-RetrieveConsolidatedPartyLegalSummary\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used by the Legal System to retrieve data about known parties to immigration. The retrieve utlises CDH for all data relating to the current person of interest and all the associated roles per buisness dealing that this party may have. It includes their biographic details, Religion, Ethinicity and Citizenship along with the contact methods. It also retrieves this same data for each related person such as their spouse on the visa application. The service can use any Party ID or Role ID that uniquly identifies a person or organisation.\n## Service Behaviour\nThis service is a direct call to CDH and is only supporting read over http and MQ.\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThis service is not a composite.\n## Transformation\nNo transformations exist on this service.\n"},{"filename":"Party\/Services\/SV325-RetrieveConsolidatedPartyNameSummary\/V2.0\/XSD\/README.md","contents":"## Service Usage\nA Party is any person or organisation that directly or indirectly interacts with DIACs core business. A Partys interaction with DIAC is defined by one or many different Roles e.g. a Person can have the role of Applicant, Sponsor or Agent. An Organisation can have roles including Agency and Sponsor.\nBy design, Party information will be consolidated in the Client Data Hub (CDH) to support the 360 degree view of Party; SV325 service will allow consumers to retrieve partys basic level of consolidated client information. This information will include:\nParty Details\nNames and Aliases\nIdentifiers\nPersonal or Organizational data\nParty of interest Indicator\n\n\n\n\n## Service Behaviour\nThis service retrieves a consolidated collection of basic data relating to a specific Party stored within the CDH, identified using a valid System Identifier for the request.\n\n\n\n\n## Service Variants\nSV288 Retrieve Consolidated Party Identifiers, SV277 Retrieve Consolidated Party Details.\n\n## Service Dependencies\nThis service relies on the consumer providing a valid unique System Identifiers, for example CDH Party Id; PID; SCID; or CID.\n\n## Service Composition\nThis is not a composite service\n\n\n## Service Flow\nService Flow\nAn event is generated by the Service Consumer which invokes the Retrieve Consolidated Party Name Summary service on the ESB;\nESB transforms the incoming request message RetrieveConsolidatedPartyNameSummaryRequest to TCRMService as per SV325_v01.00_Micro.xls and send the message to CDH\nCDH executes the TCRMService and returns an XML message TCRMService to ESB.\nESB receives TCRMService message and transforms it to RetrieveConsolidatedPartyNameSummaryResponse\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the CDH provider returns an error.\nESB transforms Error into Enterprise Error Message as per section Error! Reference source not found..\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return error as per section Error! Reference source not found. to the consumer.\n\n\n\n## Transformation\n\n\n## Service State Management Decisions\nNo state management required\n"},{"filename":"Party\/Services\/SV325-RetrieveConsolidatedPartySummary\/V9.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used by many consumers as the flagship service of CDH and the consolidated party. This service is designed to return the data associated to resolving identity. This inlcudes biographics from all source systems, religion, ethinicity and martial status, alerts and the current visa and associated travel document to that visa.\n## Service Behaviour\nThis service interacts only with CDH and has no additional dependancies. Flags exist on the request message to allow filtering at a course level. The main filters will be on the return of IDs as many parties, especially organisations, will have very large numbers of role ids such as sponsorship and nominations. If this data isnt required then please ensure the flags are set acordingly as this will vaslty change the performance of this service.\n## Service Composition\nThis service is not composed.\n## Service Flow\nThis service is only provided by CDH.\n## Transformation\nNA\n"},{"filename":"Party\/Services\/SV325-RetrieveConsolidatedPersonFacts\/V1.0\/XSD\/README.md","contents":"## Service Usage\nCDH will provide details of a person fact\n## Service Behaviour\nThis service is a direct call to CDH and is only supporting read over http and MQ.\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThis service is not a composite.\n## Transformation\nNo transformations exist on this service.\n"},{"filename":"Party\/Services\/SV325-RetrieveConsolidatedPersonIdentityDocument\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve identity documents which are associated with a client record. The service also returns supplementary information including biographic details, citizenship information, relationship status and death details.\n## Transformation\nTransformation exists between enterprise and legacy isr provider messages\n"},{"filename":"Party\/Services\/SV325-RetrieveConsolidatedPersonStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nCDH will provide details of a person fact\n## Service Behaviour\nThis service is a direct call to CDH and is only supporting read over http and MQ.\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThis service is not a composite.\n## Transformation\nNo transformations exist on this service.\n"},{"filename":"Party\/Services\/SV341-MatchBiographic\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis services provides the ability to search and match parties using Biographic data with filters of context. \nThe search is conducted using a client's Birth Year as well as either a Generic Identifier or a client's Documents Details. \nIf a single client is matched confidentally, Biographic and associated IDs will be returned in the Response with a Confidence Percentage.\n"},{"filename":"Party\/Services\/SV341-MatchBiometric\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis services provides the ability to match parties using Biometric data (facial, finger, retna) with filters such as the biographic data in a real time service. \nThis service expects to be able to match the party to a single known entity but can also return multiple matches. Limits exist for the number of parties to be returned and checks that the party does not appear on a watch list.\nYou can supply many biometric images within the request. The service is expected to be a real time service only. This service does not register the biomtric image. \n"},{"filename":"Party\/Services\/SV341-MatchPartyByDocument\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will match a party in CDH by the document details with the purpose of finding one single best match for the details currently provided.Multiple results can be returned.\n## Service Behaviour\nTraveller Platform lodges SV341 call to Client Data Hub using Document details to obtain best match results. Filters containing Biographic details and Generic Identifiers can be applied to narrow down results. \n\n"},{"filename":"Party\/Services\/SV341-MatchPartyByDocumentIdentitySummary\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service inputs a proof of identity or travel document and returns the identity summary of any parties that the document is associated with. The identity summary includes: system identifiers, facial image identifier, biographic details (including aliases), identity documents, citizenship and person death details.\n## Transformation\nThe legacy ISR provider service RetrieveIdentitiesByDocument is transformed into this enterprise service on the ESB. At the time of writing (28\/09\/17) the only consumer of this legacy service is CMAL.\n"},{"filename":"Party\/Services\/SV341-RetrieveIdentifiedConsolidatedParty\/V4.0\/XSD\/README.md","contents":"## Service Usage\nSV341 Retrieve Identified Consolidated Party provides the ability to search and retrieve consolidated summary of an identified party. The options to identify and retrieve consolidated party summary are as under:\nTo retrieve an already identified party by providing its party identifier or.\nTo retrieve a party by providing search criteria such as Visa Evidence number and Date of Birth, or a Transaction Reference Number TRN.\nThis service performs exact party identification based on the supplied criteria, for details see section 1.4 Service Behaviour, and does not perform fuzzy name search on the given bio-graphic details. This service will be used by Generic Visa Portal to perform a client match and retrieve all relevant data to perform an assessment.\nIf a single party is successfully identified, the service response includes list of party identifiers and summary attributes as per section 1.9.2 Service Response Message.\nIf multiple parties are identified, the service response will retrieve list of party identifiers and summary attributes as per section 1.9.2 Service Response Message. Identified Multiple parties retrieved in response will be limited to 10.\nIf no party is identified, the service will respond with no match found message.\n\nA Party is any person or organisation that directly or indirectly interacts with DIACs core business. A Partys interaction with DIAC is defined by one or many different Roles e.g. a Person can have the role of Applicant, Sponsor or Agent. An Organisation can have roles including Agency and Sponsor.\nBy design, Party information will be consolidated in the Client Data Hub (CDH) to support the 360 degree view of Party; the SV341 service will allow consumers to search and retrieve the consolidated summary information, along with a summary of business dealings information.\n\n\n\n\n\n\n## Service Behaviour\nService will retrieve an identified party on the basis of the supplied party identifiers. In case the party is not already identified, the party identification is done on the following basis.\nPerson identification and retrieval:\nClient identification, excluding contact recipient; Migration Agent and Authorised recipient, is based on the following criteria and order.\nParty Identifier\nvisa evidence number and Date of Birth\nTransaction Reference number and Date of Birth (compare DOB provided with primary applicant on TRN)\nPassport number, country of passport, and Date of Birth\nPerson Biodata Details:\nFamily Name\nGiven Name\nDOB\nBirth Country code\nSex code\nIf using a higher level search criteria party is not found then the next level criteria is used to identify party along with an appropriate warning message. \nFor a Person Search, this service doesnt match on contact recipient, Migration Agent and Authorised recipient.\nOrganisation identification and retrieval\nOrganisation identification is based on following criteria and order:\nParty Identifier\nTransaction Reference Number\nOrganisation identifier:\nOrganisation Registered Name (Current)\n\n\n\n\n\n## Service Variants\nSV324 RetrieveConsolidatedPartyNameSummary, SV288 Retrieve Consolidated Party Identifiers, SV368 Retrieve Consolidated Party Addresses\n\n\n## Service Dependencies\nNone.\n\n\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\n\n\n\n## Service Flow\nAn event is generated by the Service Consumer or a System which invokes the Retrieve Identified Consolidated Party service on ESB;\nESB will transform Retrieve Identified Consolidated Party request to CDH request format as per the mappings specified in the associated micro document.\nCDH will send response message to ESB.\nESB will transform the CDH response message to Retrieve Identified Consolidated Party response message as per the mappings specified in the associated micro document.\nESB will return the response message to the Service Consumer.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nPrimary provider CDH returns a specific error code to the ESB; see section Error! Reference source not found. Error! Reference source not found. of this document for a full listing of Return Codes and Messages.\nESB transforms error code into Enterprise Error Message.\nESB returns response with Enterprise Error payload to the consumer.\nAlternate Flow 2 (AF2)\nIf the ESB raises an error before or while attempting to contact the primary provider, it will respond to the consumer with the relevant Enterprise Error payload. See section 4 of this document for a full listing of Return Codes and Messages.\nAlternate Flow 3 (AF3)\nIf the service call was timeout, ESB should return SV341.MSG-E00 to the consumer.\n\n\n\n\n\n## Transformation\n\n\n## Service State Management Decisions\nNo State Management required\n\n\n"},{"filename":"Party\/Services\/SV354-NotifyApplicationBusinessDealingUpdate\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by GVP in order to send updates to CDH. The service allows updates for the following business categories:\n Visa applications\n Visa cancellations\n Sponsorships Applications\n Sponsorship Agreements \n Nominations Applications\n\n## Service Behaviour\nA request is sent from the consumer to DI. DI translates this and loads into CDH to update or insert a business dealings. CDH process the message. This service is asynchronous and has no response.\n\nOne aspect of this services behaviour concerns when GVP creates a permission request in ICSE to represent its own business dealing. It will use the AssociatedBusinessDealingMsg to inform CDH that ICSE now contains a minimal, or skeleton, permission request that represents the GVP business dealing. The association is ICSE skeleton and CDH will create two references, one for GVP and one for ICSE, to the one business dealing.\n\nThis mechanism will ensure that - as long as the business dealing is active, or mastered, by GVP - any ICSE updates to this business dealing will be ignored. Once the business dealing is no longer mastered by GVP; that is, its state becomes inactive, then ICSE updates to the business dealing may be applied by CDH.\n\nThe SV278 service will return this association.\n\nWhen adding or updating a lower level entity, such as a role or contact method, the parent entities must be sent in their entirety, but unaffected sibling entities do not need to be sent. For example, to add or update a related party role the complete Business Dealing Message is required along with the new role, but no sibling roles are required. Likewise, to add a contact method, the business dealing message and the parent role of the contact method need to be a complete snapshot, but sibling contact methods of that role do not need to be sent; likewise unaffected sibling roles of the role sent down do not need to be sent.\n\nUpdated the Party Response Message to ensure that we can capture the VLN in context to the business dealing and the interested Party.\n\n## Service Variants\nNone\n## Service Dependencies\nThis service is dependent on Datastage\n## Service Composition\nThis service uses Datastage as the provider for incoming messages. A valid invocation of this service requires only one business dealing with a valid business dealing id, business dealing category and business dealing source.\nThe translation of the additional agreement details are as follows:\n Business Dealing Id = Agreement number\n Business Dealing Type = Agreement Type\n Lodgement Date = Agreement Start Date\n Expiry Date = Agreement Expiry Date\nAny related business dealings have to be sent down as distinct messages. It is in the subsequent related business dealings that the associated business dealing message element is used to show the relationship. \nIF a party role is created then at least one of either (both are allowed) party identifier must exist OR an party role identifier may exist.\nThe required information is:\n Associated Business Dealing Id = the other business dealing id in the message\n Associated Business Dealing Source = e.g. GVP\n Dealing Category = e.g. NOMINATION\n Business Dealing Relationship = this attribute requires a value\nNote:\n1. The absence of contactPerson in contactMethod implies the actual applicant\n2. Expiry Date = Approval Expiry Date\n3. Application Type was left over from modelling of Sponsorships and Nominations, which are now modelled as separate constructs thereby making this attribute redundant.\n4. If the business dealing relationship is ICSE skeleton then CDH will create a second reference to the GVP business dealing. As long as the GVP business dealing is in an active state then subsequent updates from ICSE to that business dealing will be ignored. Once the business dealing state becomes inactive, then updates from either ICSE or GVP may be applied to the business dealing.\n\n## Service Flow\n1. Datastage receives a file in XML compliant with the schema.\n2. Depending on internal rules, either a new business dealing is created or an existing business dealing is update.\n\n## Transformation\nCDH Internal transformations.\n## Service State Management Decisions\nIf an error is discovered then this will need to be addressed by BAU.\n"},{"filename":"Party\/Services\/SV368-RetrieveConsolidatedPartyAddresses\/V2.0\/XSD\/README.md","contents":"## Service Usage\nSV368 Retrieve Consolidated Party Addresses service provides the functionality to retrieve party addresses for the provided party system identifier.\nA Party is any person or organisation that directly or indirectly interacts with DIACs core business. A Partys interaction with DIAC is defined by one or many different Roles e.g. a Person can have the role of Applicant, Sponsor or Agent. An Organisation can have roles including Agency and Sponsor.\nBy design, Party information will be consolidated in the Client Data Hub (CDH) to support the 360 degree view of Party. \nIn SFP10 this services functionality was provided by SV277 (now SV325).\n\n## Service Behaviour\nThe SV368 service will allow consumers to retrieve the consolidated addresses information for the following contact method types:\n Address\n Email\n Fax\n Telephone\nSV368 Retrieve Consolidated Party Addresses interface allows consumers to limit addresses to be retrieved by supplying the following set of optional criteria:\n Maximum Retrieve Count \n Address Start and End date\n Active Address indicator\n Contact methods types (Email or Fax etc.)\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\n\n## Service Flow\n1. An event is generated by the Service Consumer or a System which invokes the Retrieve Consolidated Party Addresses service on ESB;\n2. ESB invokes the primary provider CDH (Client Data Hub) as follows:\na. ESB will transform Retrieve Consolidated Party Addresses.xml to CDH.retrievePartyRequestObject as per data mappings in the SV368 Retrieve Consolidated Party Addresses micro design spreadsheet.\nb. ESB invokes the CDH.retrievePartyRequestObject service on the CDH\nc. CDH executes the CDH.retrievePartyRequestObject service and returns CDH.retrievePartyResponseObject to the ESB. If the Party does not exist in the CDH then stop flow and return message to consumer (SV325.MSG-E10).\nd. ESB transforms CDH.retrievePartyResponseObject into Retrieve Consolidated Party Addresses.xml as per data mappings in micro design spreadsheet.\n3. ESB returns Retrieve Consolidated Party AddressesResponse.xml to the consumer.\n1.1.1 Alternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\n1. Primary provider CDH returns a specific error code to the ESB; see section 4 of this document for a full listing of Return Codes and Messages.\n2. ESB transforms error code into Enterprise Error Message.\n3. ESB returns response with Enterprise Error payload to the consumer.\n1.1.2 Alternate Flow 2 (AF2)\nIf the ESB raises an error before or while attempting to contact the primary provider, it will respond to the consumer with the relevant Enterprise Error payload. See section 4 of this document for a full listing of Return Codes and Messages.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Party\/Services\/SV368-RetrieveConsolidatedPartyContacts\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve addresses for a party from CDH\n## Service Behaviour\nThe SV368 service will allow consumers to retrieve the consolidated contact  information\nThis is a synchronis service.\n\nOptional criteria limits the amount of results.\n"},{"filename":"Party\/Services\/SV401-UpdatePartyNote\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is to be used to add CSP notes to the Client Data Hub (CDH) and to update the note although only being able to end-date a note is allowed as of SfP11\/12.\n\n\n\n\n\n\n\n## Service Behaviour\nThis service inserts or updates CSP notes in the CDH database. The service requires the following items to insert a new note:\nParty or role identifier\nSource system\nParty type (organisation or person)\nNote text\nNote type\nStart date\nRecord timestamp\nCreate user id\nCreate user name\nLast actioned by\nIt will return a note identifier. This can be used to update a note. An update requires the following fields:\nParty or role identifier\nSource system\nParty type (organisation or person)\nNote id\nEnd date\n\n\n\n\n\n\n## Service Variants\nSV324 RetrieveConsolidatedPartyNameSummary, SV288 Retrieve Consolidated Party Identifiers, SV368 Retrieve Consolidated Party Addresses\n\n\n## Service Dependencies\nNone.\n\n\n## Service Composition\nThis service is a single service that calls CDH only. A valid invocation of this service requires either a party or role identifier.\n\n\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Update Party Note service on the ESB;\nESB invokes the provider CDH as follows:\nESB will transform NotifyClientUpdateRequest.xml to CDH. MyTCRM as per data mappings in SV401_v01.00_Micro.doc\nESB invokes the CDH.MyTCRM service on the CDH\nCDH returns CDH.TcrmResponse to the ESB.\nESB transforms CDH.TcrmResponse to NotifyClientUpdateResponse.xml\nThis service is either a creation of a new note or the updating of an existing note. If an existing note is updated the only field which can be updated is the EndDate. In either invocation the normal response of this service will be to return a note identifier number. If the note cannot be inserted or if the note id for an update does not exist then the response of the service will be as per Alternate Flow 1 below.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms CDH Errors into Enterprise Errors.\nESB returns response with Enterprise Error payload.\nSee Section 4 on errors returned.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return a message to the consumer. See Section 4 on errors returned.\n\n\n\n\n\n\n## Transformation\n\n\n## Service State Management Decisions\nNo State Management required\n\n\n"},{"filename":"Party\/Services\/SV402-RetrieveRelatedParties\/V4.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by CSP to interrogate the WCC database to obtain a list of clients who have had business or other dealings with the related client.\n\n\n\n\n\n\n\n\n## Service Behaviour\nA consumer calls this service with either a party identifier or a party role identifier. If the party does not exist then a warning is returned to the consumer. If the party exists then the list of related parties is returned, along with their various relationships to the main party. The types of relationships that could be returned are:\nParties are related by business dealing\nParties are related by transport (on the same aeroplane)\nParties are related in a familial manner\nFor SfP11\/12, the related parties returned will be for business dealings only. The list of business dealings are:\nCITIZENSHIP\nVISA_APPLICATION\nVISA_CANCELLATION\nSPONSORSHIP\nAGREEMENT\nNOMINATION\nAOS\nHEALTH_ASSESSMENT\nMONITORING\nOTHER\nVISA\n\n\n\n\n\n\n## Service Variants\n\n\n\n## Service Dependencies\nNone.\n\n\n## Service Composition\nThis is a single service call to CDH only.\n\n\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Retrieve Related Party List service on the ESB;\nESB invokes the provider CDH as follows:\nESB will transform RetrieveRelatedPartyListRequest.xml to CDH. MyTCRM as per data mappings in SV402_v01.00_Micro.doc\nESB invokes the CDH.MyTCRM service on the CDH\nCDH returns CDH.TcrmResponse to the ESB.\nESB transforms CDH.TcrmResponse to RetrieveRelatedPartyListResponse.xml\nThis service returns related parties to the party of interest that are connected, at this stage, through business dealings. If an error in execution or in the service occurs then the response of the service will be as per Alternate Flow 1 below\nThe service will also return two counts:\nThe number of related parties (result set size, potential size and offset in the returned result set); and\nAn optional list of all the roles for the party of interest, depending if the optional flag in the request (IncludeRoleTypesFlag) is both existent and TRUE.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms CDH Errors into Enterprise Errors.\nESB returns response with Enterprise Error payload.\nSee Section 4 on errors returned.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return a message to the consumer. See Section 4 on errors returned.\n\n\n\n\n\n\n\n## Transformation\n\n\n## Service State Management Decisions\nNo State Management required\n\n\n"},{"filename":"Party\/Services\/SV403-RetrieveApplicantPersonalIdentifierMatchCase\/V1.0\/XSD\/README.md","contents":"## Service Usage\nConsumer of the service will supply the unique VLN in the request and the service provider will provide the matched, finalised or in process of being finalised, details of the biometric identity data held in the system. The response will include a flag to indicate whether the response contains finalised or in process data.\nThis service will potentially become part of the interactions between BAMS and SRS that are required as part of UKVAC Pilot project. As an overall process of UKVAC system this service interface is used by SRS to retrieve biometric data and match results from BAMS, and it is referred as UC-VAC-0.24. \n\n\n\n\n\n\n\n\n## Service Behaviour\nThe service provider exposes an interface for retrieving details of a biometric identity response details. This service responds with Enterprise Messaging Model (EMM) error codes in any exception scenarios. The request and response messages are sent in EMM format using xml. The current interface is exposed using HTTP transport protocol.\n\n\n\n\n\n\n\n## Service Variants\n\n\n\n## Service Dependencies\nNone.\n\n\n## Service Composition\nSRS initiates this service call when it has established that there are biometrics related to the offshore visa application due to the presence of a VLN and consequently issues a service call to poll BAMS for biometric data. SRS polls BAMS till it receives a final response having ProcessingFinalisedFlag with the true value, or an exception response.\n\n\n\n\n\n## Service Flow\nThe interaction below is describes an interaction between a consumer system (CS) and BAMS.\nNormal Flow\nCS initiates the process for retrieving, finalised or in process of being finalised, details of biometric identity data passed to BAMS for matching and assessment as a result of some specific event.\nCS invokes BAMS Service SV403 by sending an HTTP request.\nBAMS searches within its system for any current jobs or completed jobs based on the VLN supplied.\nBAMS sends the response for the one and only one Job found for the supplied match criteria.\nCS receives finalised or in-process details on match decisions.\nAlternate Flow Duplicate VLN Error\nCS initiates the process for retrieving, finalised or in process of being finalised, details of biometric identity data passed to BAMS for matching and assessment as a result of some specific event.\nCS invokes BAMS Service SV403 by sending an HTTP request.\nBAMS searches within its system for any current jobs or completed jobs based on the VLN supplied.\nBAMS finds more than one Job found for the supplied match criteria.\nBAMS sends Duplicate VLN Error in Response.\nCS receives exception response with PRTY00092 code.\nAlternate Flow Data could not be found for the specified request\nCS initiates the process for retrieving, finalised or in process of being finalised, details of biometric identity data passed to BAMS for matching and assessment as a result of some specific event.\nCS invokes BAMS Service SV403 by sending an HTTP request.\nBAMS searches within its system for any current jobs or completed jobs based on the VLN supplied.\nBAMS finds no Job for the supplied match criteria.\nBAMS sends Job Not Found Error in Response.\nCS receives exception response with ENTR00016 code.\n\n\n\n\n\n\n\n\n## Transformation\n\n\n## Service State Management Decisions\nState management between multiple calls using the same VLN is implementation dependent and will be based on BAMS internal rules.\n\n\n\n"},{"filename":"Party\/Services\/SV416-RetrieveBusinessDealingSummary\/V3.0\/XSD\/README.md","contents":"## Service Usage\nThe service will be used to return a summary of data, for an identified business dealing. This service provides a consolidated summary of a specified business dealing, its related parties and their outcomes in association to that business dealing.\n\n\n\n\n\n\n\n\n\n## Service Behaviour\nA request is sent from the consumer to the ESB. The ESB translates this to the CDH API requesting a summary for an identified business dealing and its related parties. The CDH API for the business dealing returns all the information and there should be no orchestration of calls to another provider.\nThe request will contain a Party Role Identifier to identify the party concerned. \nCDM Code CDM Description \nALL All business dealings \nCITIZENSHIP Citizenship \nVISA_APPLICATION Visa Application \nSPONSORSHIP Sponsorship \nNOMINATION Nomination \nAOS AOS \nHEALTH_ASSESSMENT Health Assessment \nADDRESS Address \nMONITORING Monitoring \nOTHER Other (not currently used) \nVISA_CANCELLATION Visa Cancellation \nAGREEMENT Agreement \nENFORCEMENT Enforcement \nVISA_ENTITLEMENT_VERIFICATION Visa Entitlement Verification \nVISA Visa \nBORDER_REFERRAL Border Referral \nCLIENT_CASE CCMDS Client Case \nSECURITY_REFERRAL Security Referral \nCCMDS_APPOINTMENT CCMDS Appointment \nCCMDS_JOB CCMDS Job \nCITIZENSHIP_APPOINTMENT Citizenship Appointment \nHEALTH_CASE Health Case \nWhen CDH returns the business summary through the API, ESB will translate this into the service response format and return it to the consumer. A party, with respect to this service, may be either a person or an organisation. This service will return all roles associated with the business dealing.\nThe service returns a summary for the identified business dealing, it will then return all the related parties associated to that business dealing and the outcomes associated to that party through that business dealing. \nA flag may be sent to indicate no related party information is to be sent, no related outcomes to be sent or no related associated business dealings are to be sent.\n\n\n\n\n\n\n\n\n## Service Variants\nNone\n\n\n## Service Dependencies\nThis service is dependent on CDH having an appropriate API, or set of APIs, that return the business summary given a party id and, optionally, a business category.\n\n\n## Service Composition\nThis service is a single service. It will call CDH only. Service Flow\nAn event is generated by the Service Consumer which invokes the RetrieveConsolidatedPartyBusinessSummary service on the ESB;\nThis is transformed to the CDH service myTCRM.TCRMInquiry using the InquiryType of RetrieveBusinessDealingSummary. This has the following parameter structure (from the WCC Service Micro Design document see related documents):\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms errors into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV416 ENTR00007 to the consumer.\nAlternate Flow 3 (AF3)\nIf no business dealing is found. Return a warning message and a valid response with a no business dealing response flag.\n\n\n\n\n\n\n## Service Flow\n\n\n\n\n\n\n\n\n\n## Transformation\n\n\n## Service State Management Decisions\nNo state management.\n\n\n\n"},{"filename":"Party\/Services\/SV422-NotifyHealthCaseUpdate\/V3.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by Health in order to send updates to CDH. The service allows updates for the following business categories:\n- Create Health Case\n- Update Health Case\n- Update Client Contacts\nHealth will also send through any associations to existing ICSE HAPR and Visa Application. \n\n## Service Behaviour\nA message is sent to CDH\n\nAs part of the service behaviour any updates that are sent through to CDH must be done so as a whole object. If one element is modified within an object regardless of whether the remaining elements are updated\/modified the entire object and its associated elements and the related objects must be sent through, in order to recreate the message in the event that the original create failed.\n## Service Variants\nNone\n## Service Dependencies\nIn order for SV422 to update the CDH with any creation or updates it is dependant on SV317 association a HAP Applicant ID to the party held in the CDH.\n## Service Flow\n1. An event is generated by the Service Consumer which invokes the Notify Health Business Dealing Update Request service on the ESB;\n2. Datastage receives a file in XML complaint with the schema.\n3. Datastage will then transform the message into valid XML for WCC.\n4. WCC with then apply any applicable rules, either a new business dealing is created or an existing business dealing is updated.\n5. WCC should always be able to recreate any subsequent updates in the event that the create message may have failed.\n\n## Transformation\nPlease see micro documentation\n## Service State Management Decisions\nNo state management required\n"},{"filename":"Party\/Services\/SV422-NotifySettlementHealthCaseUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is currently pushing new and updated Health cases that are of interest to Settlement processing. This is primarily for Refugee and Humanitarian cases but could be extended to meet other demands of the settlement process. The Health Case sent is a small subset of available Health Case data but includes question and answer sets from available health exams.\n## Service Composition\nThis services is not composed of any other services.\n## Transformation\nNo transformations are done on this service.\n"},{"filename":"Party\/Services\/SV426-CalculateOrganizationSponsoredVisaCount\/V1.0\/XSD\/README.md","contents":"## Service Usage\nCalculate the number of Visa's an Organisation had sponsored.\n"},{"filename":"Party\/Services\/SV446-NotifyPersonVisaStatusUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service provides the ability to notify Traveller Process Centre of Visa data alterations (delete\/add)\nThe search is conducted using a Visa Grant Number.\nThe Traveller Process Centre is then able to process the Visa Data Information in the Traveller Processing Data Store.\nThe Visa Grant Number is sent back in the response to user along with Warnings and Information.\n## Service Behaviour\nSV446.1 TRIPS sends Visa add\/delete fixed length messages to a new message queue created in the ESB: Message Queue Manager \nSV446.2 The ESB instance monitors the queue, converts fixed length messages to a standard XML format and put XML message in a new message queue monitored by the Traveller Processing Centre (TPC). \nSV446.3 The TPC processes the message and load data into Traveller Processing Data Store.\n\n## Transformation\nThe ESB instance monitors the queue, converts fixed length messages to a standard XML format and put XML message in a new message queue monitored by the Traveller Processing Centre (TPC).\n"},{"filename":"Party\/Services\/SV446-NotifyVisaUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nSupports the creation and update of Visa Grant summary data in CDH.\n"},{"filename":"Party\/Services\/SV447-NotifyVisaEntitlementCheckUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by ICSE in order to send updates to CDH. The service allows updates for the Visa Entitlement (VEVO) Check.\n\n## Service Behaviour\nA request is sent from the ICSE consumer via DataStage, which transforms the message from the consumer's native format to SV447. DataStage sends the SV448 message is sent to CDH which then inserts or updates a Visa Entitlement (VEVO) business service. The service is asynchronous.\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThis service uses DataStage for the incoming messages which are translated from the ICSE message format to SV447 format.\n## Service Flow\n1. ICSE sends an XML message to DataStage\n2. DataStage transforms the message to an SV447 message\n3. The transformed message is sent to CDH\n\nAlternate Flow 1\n\nIf an error is discovered then this is addressed later by BAU\n## Transformation\nThe ICSE message is transformed to one compliant with NotifyVisaEntitlementCheckUpdateRequest.xsd\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"Party\/Services\/SV448-NotifyVisaApplicationUpdate\/V3.0\/XSD\/README.md","contents":"## Service Usage\nSupports the creation and update of Visa Application summary data in CDH.\n"},{"filename":"Party\/Services\/SV449-NotifyVisaCancellationUpdate\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by ICSE via DataStage, which transforms the message, to send updates to CDH. CANX sends a message, without transformation, to CDH via DataPower.The service allows updates for the Visa Cancellation.\n\n## Service Behaviour\nA request is sent from the ICSE consumer via DataStage, which transforms the message from the consumer's native format to SV449. DataStage sends the SV449 message to CDH, which then inserts or updates a Visa Cancellation business service. \n\nCANX sends a SV449 message to CDH via DataPower with no transformation.\n\nThe service is asynchronous.\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThe service uses DataStage for incoming messages from ICSE, which are translated from the consumer's message format to SV449 format.\n\nThe service uses DataPower for incoming messages from CANX and these require no translation.\n## Service Flow\nAlternate Flow 1\n\n1. ICSE sends an XML message to DataStage\n2. DataStage transforms the message to an SV449 message\n3. The transformed message is sent to CDH\n\nAlternate Flow 2\n\n1. CANX send an SV449 message to DataPower\n2. DataPower sends this message to CDH\n\nAlternate Flow 3\n\nIf an error is discovered then this is addressed later by BAU\n## Transformation\nThe ICSE message is transformed to one compliant with NotifyVisaApplicationCancellationUpdateRequest.xsd\n\nThe CANX message does not require transformation.\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"Party\/Services\/SV450-NotifySponsorshipApplicationUpdate\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by ICSE via DataStage, which transforms the message, to send updates to CDH. GVP sends a message, without transformation, to CDH via DataPower.The service allows updates for the Sponsorship Application.\n\n## Service Behaviour\nA request is sent from the ICSE consumer via DataStage, which transforms the message from the consumer's native format to SV450. DataStage sends the SV450 message to CDH, which then inserts or updates a Sponsorship Application business service. \n\nGVP sends a SV450 message to CDH via DataPower with no transformation.\n\nThe service is asynchronous.\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThe service uses DataStage for incoming messages from ICSE, which are translated from the consumer's message format to SV450 format.\n\nThe service uses DataPower for incoming messages from GVP and these require no translation.\n## Service Flow\nAlternate Flow 1\n\n1. ICSE sends an XML message to DataStage\n2. DataStage transforms the message to an SV450 message\n3. The transformed message is sent to CDH\n\nAlternate Flow 2\n\n1. GVP send an SV450 message to DataPower\n2. DataPower sends this message to CDH\n\nAlternate Flow 3\n\nIf an error is discovered then this is addressed later by BAU\n## Transformation\nThe ICSE message is transformed to one compliant with NotifySponsorshipApplicationUpdateRequest.xsd\n\nThe GVP message does not require transformation.\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"Party\/Services\/SV451-NotifySponsorshipNominationUpdate\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by ICSE via DataStage, which transforms the message, to send updates to CDH. GVP sends a message, without transformation, to CDH via DataPower.The service allows updates for the Sponsorship Application.\n\n## Service Behaviour\nA request is sent from the ICSE consumer via DataStage, which transforms the message from the consumer's native format to SV451. DataStage sends the SV451 message to CDH, which then inserts or updates a Sponsorship Nomination business service. \n\nGVP sends a SV451 message to CDH via DataPower with no transformation.\n\nThe service is asynchronous.\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThe service uses DataStage for incoming messages from ICSE, which are translated from the consumer's message format to SV451 format.\n\nThe service uses DataPower for incoming messages from GVP and these require no translation.\n## Service Flow\nAlternate Flow 1\n\n1. ICSE sends an XML message to DataStage\n2. DataStage transforms the message to an SV451 message\n3. The transformed message is sent to CDH\n\nAlternate Flow 2\n\n1. GVP send an SV451 message to DataPower\n2. DataPower sends this message to CDH\n\nAlternate Flow 3\n\nIf an error is discovered then this is addressed later by BAU\n## Transformation\nThe ICSE message is transformed to one compliant with NotifySponsorshipNominationUpdateRequest.xsd\n\nThe GVP message does not require transformation.\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"Party\/Services\/SV452-NotifyComplianceActivityUpdate\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by ICSE via DataStage, which transforms the message, to send updates to CDH. The service allows updates for Compliance Activity.\n\n## Service Behaviour\nA request is sent from the ICSE consumer via DataStage, which transforms the message from the consumer's native format to SV452. DataStage sends the SV453 message to CDH, which then inserts or updates Compliance activity. \n\nThe service is asynchronous.\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThe service uses DataStage for incoming messages from ICSE, which are translated from the consumer's message format to SV452 format.\n## Service Flow\n1. ICSE sends an XML message to DataStage\n2. DataStage transforms the message to an SV452 message\n3. The transformed message is sent to CDH\n\nAlternate Flow 1\n\nIf an error is discovered then this is addressed later by BAU\n## Transformation\nThe ICSE message is transformed to one compliant with NotifyComplianceActivityUpdateRequest.xsd\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"Party\/Services\/SV453-NotifyCitizenshipUpdate\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by ICSE via DataStage, which transforms the message, to send updates to CDH. The service allows updates for Citizenship updates.\n\n## Service Behaviour\nA request is sent from the ICSE consumer via DataStage, which transforms the message from the consumer's native format to SV453. DataStage sends the SV453 message to CDH, which then inserts or updates Citizenship data. \n\nThe service is asynchronous.\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThe service uses DataStage for incoming messages from ICSE, which are translated from the consumer's message format to SV453 format.\n\n## Service Flow\n1. ICSE sends an XML message to DataStage\n2. DataStage transforms the message to an SV453 message\n3. The transformed message is sent to CDH\n\nAlternate Flow 1\n\nIf an error is discovered then this is addressed later by BAU\n## Transformation\nThe ICSE message is transformed to one compliant with NotifyCitizenshipUpdateRequest.xsd\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"Party\/Services\/SV454-NotifyBorderReferralUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by TRIPS via DataStage, which transforms the message, to send updates to CDH. The service allows updates for Border Referral updates.\n\n## Service Behaviour\nA request is sent from the TRIPS consumer via DataStage, which transforms the message from the consumer's native format to SV454. DataStage sends the SV454 message to CDH, which then inserts or updates Border Referral data. \n\nThe service is asynchronous.\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThe service uses DataStage for incoming messages from TRIPS, which are translated from the consumer's message format to SV454 format.\n\n## Service Flow\n1. TRIPS sends an XML message to DataStage\n2. DataStage transforms the message to an SV454 message\n3. The transformed message is sent to CDH\n\nAlternate Flow 1\n\nIf an error is discovered then this is addressed later by BAU\n## Transformation\nThe TRIPS message is transformed to one compliant with NotifyBorderReferralUpdateRequest.xsd\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"Party\/Services\/SV455-NotifySecurityReferralSummaryUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nSupports the creation and update of Security Referral summary data in CDH\n"},{"filename":"Party\/Services\/SV455-NotifySecurityReferralUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by SRS via DataStage, which transforms the EV007 message to an SV455 message, and sends the update to CDH. The service allows updates for Security Referral updates.\n\n## Service Behaviour\nA Ev007 event is sent from the consumer SRS via DataStage, which transforms the message from EV007 to SV455. DataStage sends the SV455 message to CDH, which then inserts or updates Security Referral data. \n\nThe service is asynchronous.\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThe service uses DataStage for incoming EV007 from SRS, which is translated to SV455 format.\n\n## Service Flow\n1. SRS sends an EV007 to DataStage\n2. DataStage transforms the EV007 message to an SV455 message\n3. The transformed message is sent to CDH\n\nAlternate Flow 1\n\nIf an error is discovered then this is addressed later by BAU\n## Transformation\nThe SRS EV007 event is transformed to one compliant with NotifySecurityReferralUpdateRequest.xsd\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"Party\/Services\/SV456-NotifyCaseUpdate\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by Siebel via DataPower. The service allows updates for Case updates.\n\n## Service Behaviour\nA Ev007 event is sent from the consumer SRS via DataStage, which transforms the message from EV007 to SV455. DataStage sends the SV455 message to CDH, which then inserts or updates Security Referral data. \n\nThe service is asynchronous.\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThe service uses DataStage for incoming EV007 from SRS, which is translated to SV455 format.\n\n## Service Flow\n1. SRS sends an EV007 to DataStage\n2. DataStage transforms the EV007 message to an SV455 message\n3. The transformed message is sent to CDH\n\nAlternate Flow 1\n\nIf an error is discovered then this is addressed later by BAU\n## Transformation\nThe SRS EV007 event is transformed to one compliant with NotifySecurityReferralUpdateRequest.xsd\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"Party\/Services\/SV457-NotifyCitizenshipTestUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nSupports the creation and update of CTMS (Citizenship Test Management System) Test summary data in CDH.\n"},{"filename":"Party\/Services\/SV459-NotifyAppointmentUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nSupports the create\/update of CCMDS Appointment and Client Contact summary data in CDH\n"},{"filename":"Party\/Services\/SV460-NotifyComplianceReferralUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nSupports the create\/update of Compliance Referral summary data in CDH\n"},{"filename":"Party\/Services\/SV470-RetrieveOnshoreStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\n\n\n\n\n\n\n\n\n\n\n## Service Behaviour\n\n\n\n\n\n\n\n\n\n## Service Variants\nNone\n\n\n## Service Dependencies\n\n\n## Service Composition\n\n\n\n\n\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Retrieve Onshore Status service on the ESB;\n{continue from here}\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms XXXX Error into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV470.MSG-E00 to the consumer.\n\n\n\n\n\n\n\n\n\n## Transformation\n\n\n## Service State Management Decisions\nNo state management.\n\n\n\n"},{"filename":"Party\/Services\/SV487-RetrieveConsolidatedPartyComplianceService\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis change supports the retrieval of an identified client's Identity Assessment(s) for the Identity Assessment tab of CSP\n"},{"filename":"Party\/Services\/SV489-RetrieveConsolidatedPartyDocumentList\/V3.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used by CSP to retrieve all documents known against a party including those in Business Context and those without.\n## Service Behaviour\nThis service retrieves Documents\n"},{"filename":"Party\/Services\/SV490-RetrieveConsolidatedPartyDocument\/V1.0\/XSD\/README.md","contents":"## Service Usage\nRetrieves the detailed metadata, including associated biographics, of a specific document, for a specified client.\n\n"},{"filename":"Party\/Services\/SV496-RetrieveConsolidatedPartyEventList\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is returning a very lightweight summary of the requested client's business events to support display in CSP of a client's timeline of business interactions.\n"},{"filename":"Party\/Services\/SV508-RetrieveMatchPartyList\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service performs a search for client(s) in the Client Data Hub (CDH) using the specified identifier against all indentifier types supported in CDH.\n"},{"filename":"Party\/Services\/SV510-NotifyContextualUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service gives notification of a update against either a specific Business Service, or a specific Business Service Role without having to understand the type of Business Service to be updated.\n"},{"filename":"Party\/Services\/SV515-RemoveBusinessService\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis TIS Online service is to update the details of a job record held in JESSICA after the interpreting work has already been completed.\n"},{"filename":"Party\/Services\/SV516-RemoveParty\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used by TIS-Online to send new TIS client details to JESSICA.\n"},{"filename":"Party\/Services\/SV517-RemoveBusinessServiceAgentRoles\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is modified in TR01 to enable TIS Online to create a booking record in both TIS Online and JESSICA when a booking is made by clients.\nCurrently, Create Interpreter Job creates a job record only in TIS Online when a booking is made by clients. Once the interpreting work has been completed, this service both closes the record in TIS Online and generates a duplicate record in JESSICA.\n\n\n"},{"filename":"Party\/Services\/SV518-NotifyPartyIdentifierResolution\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to send TIS client updates to JESSICA.\n"},{"filename":"Party\/Services\/SV550-RetrievePersonBusinessServicesSummary\/V2.0\/XSD\/README.md","contents":"## Service Usage\nProvides client data retrieval for two modes - summary and detailed - all business dealings for a DIBP client. \n\nSummary Mode\nEnables BMS to provide DIBP client data (R1 or TIER 1) to external FCC parties in response to an inbound Query 1 (Q1) or NPS NIST file - LEVEL 1 operation. Also used to enable BMS to provide DIBP client data (RR) in response to an inbound Query Reciprocal (QR) - LEVEL 2 operation.\nCDH provides the client bio-data for each BMS registered Business Dealing in CDH (via SV540). That is, only for biometric related Business dealings. Also, CDH provides Current Immigration Status data.\nRR client data is the same as the R1 data, except it also includes alias and travel doc info and conviction information (but only if that data is associated with a biometrics Business Dealing).\nDetailed Mode\nEnables BMS to provide additional DIBP client data (R2 OR TIER 2) in response to a follow-up inbound Query 2 (Q2) or Tier 2 request - LEVEL 2 operation.\nR2 \/TIER 2 provides all the non-biometric related Business dealings for a DIBP client. It also includes additional information (compared with R1) such as travel, conviction information and encounter disposition information.\n\n\n\n## Service Behaviour\nThe Retrieve Client Summary and Party Business Dealings service will return a summary of a clients business dealings and related Biodata along with information regarding the clients immigration status.\nThe Service will consist of a Summary Mode or a Detailed Mode (Determined by a Flag set in the Request message)\nThe Summary Mode will return the Clients Lawful Status, Biometric Collection Business Dealings and related Biodata\nThe Detailed Mode will return the Clients Lawful Status, Selected Business Dealings (NOT YET DEFINED) and related biodata and document data\n\n## Service Variants\nNone\n## Service Flow\nRequest (BAMS ID) \nThe inbound Request will contain one or more BAMS IDs. DHub will resolve to the client that the BAMS ID are stored against. Note: BAMS ID is stored on the PARTY_SYSTEM_IDENTIFIER table linked to the PARTY table\n\nRequest (Summary Flag)\nIf the Summary Flag value is set to True, DHub will return a summary set of data consisting of the Clients Lawful Status, Biometric Collection Business Dealings and related Biodata If the Summary Flag is set to False, DHub will return a detailed set of the Clients Lawful Status, Selected Business Dealings and related biodata and document data\n\nResponse - Summary Mode - BiometricEncounterListMsg\nAll of the clients BAMS IDs will be returned in the response (BiometricEncounterListMsg) \n\nResponse - Summary Mode Only - Immigration Status -RetrievePersonBusinessServicesSummaryImmigrationStatusList \nDHub will return the Lawful Status from the Person Visa Status table where: \n The linking Party System Identifier record (PID) is not ended (ie. does not have an Effective To Timestamp); \n The Person Visa Status record is not ended (ie. does not have an Effective To Timestamp); \n The Person Visa Status record has the greatest Source Update Timestamp \n\nIf a Person Visa Status record does not exist or if one exists however the Lawful Status field is NULL, DHub will not return the RetrievePersonBusinessServicesSummaryImmigrationStatusList \n\nResponse - Summary Mode Only - Previous Immigration Status -RetrievePersonBusinessServicesSummaryImmigrationStatusList\nDHub will not be returning Previous Immigration Status \n\nResponse - Summary Mode Only (Biometric Encounters) RetrievePersonBusinessServicesSummaryDetails \nDHub will return all Biometric Enrolments stored against the client (via Party_System_Identifier records where the Identifier Type Code = BAMS) and the where the Biometric Enrolment record \n Has a Biometric Mode Type equal to Finger or Fingerprint and Face \n\nResponse - Summary Mode Only (Biometric Encounters) BusinessServiceId \nFor each Biometric Enrolment the corresponding BAMS ID will be returned (ie Party_System_Identifier)\n\nResponse - Summary Mode Only (Biographic Data) RetrievePersonBusinessServiceSummaryBiographicList \nDHub will return each instance of Biographic data linked to the BAMS ID where \n The Name Usage type <> 3 (Recorded in Error)\n\nResponse - Summary Mode Only (Document Data) RetrievePersonBusinessServiceSummaryDocumentList \nDHub will return each instance of Document and Document Biographic data linked to the BAMS ID \n\nResponse - Summary Mode (Derogatory Information) RetrievePersonBusinessServiceSummaryDerogatoryInformationList\nDHub will not return Derogatory Information in either the Summary or Detailed Mode as this data is not currently stored in DHub \n\nResponse - Summary Mode (Biometric Encounter Info) RetrievePersonBusinessServiceSummarySummaryMode \n\nDHub will return the following information for each \n- Biometric Enrolment \n- Biometric Mode \n- Acquisition Location \n- Local Fingerprint Acquisition Date Time \n- UTC Acquisition Date Time Offset \n- Acquisition Reason (Acquisition Reason will be a concat of the values Business Programme Text and Business Event Text) \n\n\n\n"},{"filename":"Party\/Services\/SV550-RetrievePersonBusinessServicesSummary\/V3.0\/XSD\/README.md","contents":"## Service Usage\nProvides client data retrieval for two modes - summary and detailed - all business dealings for a DIBP client. \n\nSummary Mode\nEnables BMS to provide DIBP client data (R1 or TIER 1) to external FCC parties in response to an inbound Query 1 (Q1) or NPS NIST file - LEVEL 1 operation. Also used to enable BMS to provide DIBP client data (RR) in response to an inbound Query Reciprocal (QR) - LEVEL 2 operation.\nCDH provides the client bio-data for each BMS registered Business Dealing in CDH (via SV540). That is, only for biometric related Business dealings. Also, CDH provides Current Immigration Status data.\nRR client data is the same as the R1 data, except it also includes alias and travel doc info and conviction information (but only if that data is associated with a biometrics Business Dealing).\nDetailed Mode\nEnables BMS to provide additional DIBP client data (R2 OR TIER 2) in response to a follow-up inbound Query 2 (Q2) or Tier 2 request - LEVEL 2 operation.\nR2 \/TIER 2 provides all the non-biometric related Business dealings for a DIBP client. It also includes additional information (compared with R1) such as travel, conviction information and encounter disposition information.\n\n\n\n## Service Behaviour\nThe Retrieve Client Summary and Party Business Dealings service will return a summary of a clients business dealings and related Biodata along with information regarding the clients immigration status.\nThe Service will consist of a Summary Mode or a Detailed Mode (Determined by a Flag set in the Request message)\nThe Summary Mode will return the Clients Lawful Status, Biometric Collection Business Dealings and related Biodata\nThe Detailed Mode will return the Clients Lawful Status, Selected Business Dealings (NOT YET DEFINED) and related biodata and document data\n\n## Service Variants\nNone\n## Service Flow\nRequest (BAMS ID) \nThe inbound Request will contain one or more BAMS IDs. DHub will resolve to the client that the BAMS ID are stored against. Note: BAMS ID is stored on the PARTY_SYSTEM_IDENTIFIER table linked to the PARTY table\n\nRequest (Summary Flag)\nIf the Summary Flag value is set to True, DHub will return a summary set of data consisting of the Clients Lawful Status, Biometric Collection Business Dealings and related Biodata If the Summary Flag is set to False, DHub will return a detailed set of the Clients Lawful Status, Selected Business Dealings and related biodata and document data\n\nResponse - Summary Mode - BiometricEncounterListMsg\nAll of the clients BAMS IDs will be returned in the response (BiometricEncounterListMsg) \n\nResponse - Summary Mode Only - Immigration Status -RetrievePersonBusinessServicesSummaryImmigrationStatusList \nDHub will return the Lawful Status from the Person Visa Status table where: \n The linking Party System Identifier record (PID) is not ended (ie. does not have an Effective To Timestamp); \n The Person Visa Status record is not ended (ie. does not have an Effective To Timestamp); \n The Person Visa Status record has the greatest Source Update Timestamp \n\nIf a Person Visa Status record does not exist or if one exists however the Lawful Status field is NULL, DHub will not return the RetrievePersonBusinessServicesSummaryImmigrationStatusList \n\nResponse - Summary Mode Only - Previous Immigration Status -RetrievePersonBusinessServicesSummaryImmigrationStatusList\nDHub will not be returning Previous Immigration Status \n\nResponse - Summary Mode Only (Biometric Encounters) RetrievePersonBusinessServicesSummaryDetails \nDHub will return all Biometric Enrolments stored against the client (via Party_System_Identifier records where the Identifier Type Code = BAMS) and the where the Biometric Enrolment record \n Has a Biometric Mode Type equal to Finger or Fingerprint and Face \n\nResponse - Summary Mode Only (Biometric Encounters) BusinessServiceId \nFor each Biometric Enrolment the corresponding BAMS ID will be returned (ie Party_System_Identifier)\n\nResponse - Summary Mode Only (Biographic Data) RetrievePersonBusinessServiceSummaryBiographicList \nDHub will return each instance of Biographic data linked to the BAMS ID where \n The Name Usage type <> 3 (Recorded in Error)\n\nResponse - Summary Mode Only (Document Data) RetrievePersonBusinessServiceSummaryDocumentList \nDHub will return each instance of Document and Document Biographic data linked to the BAMS ID \n\nResponse - Summary Mode (Derogatory Information) RetrievePersonBusinessServiceSummaryDerogatoryInformationList\nDHub will not return Derogatory Information in either the Summary or Detailed Mode as this data is not currently stored in DHub \n\nResponse - Summary Mode (Biometric Encounter Info) RetrievePersonBusinessServiceSummarySummaryMode \n\nDHub will return the following information for each \n- Biometric Enrolment \n- Biometric Mode \n- Acquisition Location \n- Local Fingerprint Acquisition Date Time \n- UTC Acquisition Date Time Offset \n- Acquisition Reason (Acquisition Reason will be a concat of the values Business Programme Text and Business Event Text) \n\n\n\n"},{"filename":"Party\/Services\/SV552-NotifyPartiesMergeSplitAudit\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service provides notification of updates to Identity Resolution Audit data.\nUpdates may occur out of CDH match rule algorithms and\/or IRC CSP actions.\n\n"},{"filename":"Party\/Services\/SV553-UpdatePartyAddresses\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be called by ePlus to update applicant's contact details in ICSE.\nThe applicant contact details will include either address (postal\/residential), email address (home\/business), phone (business, home, fax, mobile).\nIf the main applicant's email address is updated and the main applicant is currently the authorised recipient then the email where correspondence for the application is sent will be updated.\n\n"},{"filename":"Party\/Services\/SV554-NotifyPartyMerge\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service notifies the outcome of a automated CDH Identity Resolution or a manual CSP Identity Resolution that needs to be actioned within ICSE.\n"},{"filename":"Party\/Services\/SV555-RetrieveDetailedPartyIdentitiesHistory\/V1.0\/XSD\/README.md","contents":"## Service Usage\nRetrieves a client's identity resolution history from CDH. This provides visibility of how the consolidated client has been associated across the various source system instances of the client. The history will provide details of merges\/associations and splits\/disassociations where relevant.\n\n"},{"filename":"Party\/Services\/SV570-RetrieveAdditionalPersonDetails\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service provides consumer with a rationalised consolidated party summary excluding any data already known to ICSE. This supports the Citizenship business process in preparing client summary reports for submission to CrimTrac. Current process involves CPO copy and pasting data, not held in ICSE, from Client Search Portal into ICSE for validation, correction.\n\n"},{"filename":"Party\/Services\/SV584-NotifyImmigrationCardStatusUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe Immigration Card order status is to sent to CDH for display in CSP. \n\n"},{"filename":"Party\/Services\/SV598-NotifyExpectedMovementUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service is used to send Expected Movement Record information including the client's Business Service ID, Air\/Sea movement information, Biodata, Visa and Travel Document information to the Traveller Processing Centre for performing border clearance. \nIn response, the Business Service ID is returned along with Information and Warnings.\n## Service Behaviour\nSV598.1 TRIPS sends Expected Movement XML message to a new message queue created in the ESB: Message Queue Manager\nSV598.2 The ESB instance monitors the queue and re-route the message to a queue monitored by Traveller Processing Centre \nSV598.3 The Traveller Processing Centre processes the message and load data into Traveller Processing Data Store\n\n"},{"filename":"Party\/Services\/SV599-NotifyPersonTravelDocumentUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service is used for IDH to notify of relevant changes to identities with active traveller business dealings.\nRelevant changes do not include updates to business dealings from other DIBP systems contributing to IDH.\n\nFor travellers with active business dealings, Traveller Processing Centre requires notification of updates to the IDH record relating to Travel Documents and Visa Grant status changes.\nThis data is used at clearance to associate travel documents to movements when travellers check in with one travel document and then present at the primary line with a different travel document.\n\n## Service Behaviour\nSV599.1 IDH processes an update to biographic and travel document details for an identity record with an active traveller business dealing\nSV599.2 IDH will notify Traveller Processing Centre via the ESB\n"},{"filename":"Party\/Services\/SV600-NotifyPersonBorderClearanceUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service that provides the ability for Future Traveller to register a movement with IDH as a Business Dealing. This occurs on receipt of Expected Movement (APP\/API) from TRIPS. Information in the requested update includes Transborder, Expected and Actual Movement information as well as clearance information ie. risk indicator. It also registers clients of interest or active for Future Traveller. \nThe response for the registration request includes the Business Service ID related to the identity that the IDH resolves the request data. \nWhen a traveller presents at the primary line for clearance, Traveller Processing Centre needs to determine their movement records and associated Treatment Plan. This provides the primary line officer with instructions on how to direct the traveller beyond the primary line. This service is used for cases where a traveller with multiple travel documents presents at the primary line with a different document to that used at check in.\n\n## Service Behaviour\nSV600.1 TPC sends a message to IDH to create or update Business Dealing records.\nSV600.2 Whenever a border clearance transaction is resolved (closed) in TPC, the TPC will send a message to close the Business Dealing record.\n\n"},{"filename":"Party\/Services\/SV600-NotifyPersonBorderClearanceUpdateSummary\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service that provides the ability for Future Traveller to register a movement with IDH as a Business Dealing. This occurs on receipt of Expected Movement (APP\/API) from TRIPS. Information in the requested update includes Transborder, Expected and Actual Movement information as well as clearance information ie. risk indicator. It also registers clients of interest or active for Future Traveller. \nThe response for the registration request includes the Business Service ID related to the identity that the IDH resolves the request data. \nWhen a traveller presents at the primary line for clearance, Traveller Processing Centre needs to determine their movement records and associated Treatment Plan. This provides the primary line officer with instructions on how to direct the traveller beyond the primary line. This service is used for cases where a traveller with multiple travel documents presents at the primary line with a different document to that used at check in.\n\n## Service Behaviour\nSV600.1 TPC sends a message to IDH to create or update Business Dealing records.\nSV600.2 Whenever a border clearance transaction is resolved (closed) in TPC, the TPC will send a message to close the Business Dealing record.\n\n"},{"filename":"Party\/Services\/SV623-RetrievePersonIdentificationEventList\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to return the list of all identification events for a person, which may include events associated with biographic details, documents, citizenships, images, assessments etc.\n"},{"filename":"Party\/Services\/SV623-RetrievePersonIdentificationImageList\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service which is used to retrieve the details of personal identifiers (images) associated with a party.\n"},{"filename":"PassengerCard\/Services\/SV631-RegisterPassengerCard\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to register and store incoming passenger cards which have been collected from passengers using electronic channels.\n## Service Behaviour\nThis service is used register a submitted passenger card with the provider system. At the time of registration it does not contain any party specific information (ie. it is not yet matched with a client). The provider system will match the passenger card to a client and clearance event and then invoke a SV632-NotifyPassengerCard event which is an enriched version of SV631.\n"},{"filename":"PassengerCard\/Services\/SV632-NotifyPassengerCard\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to notify subscribers of a clients passenger card details after the client has made a border clearance\n## Service Behaviour\nThe provider system will receive a SV631-RegisterPassengerCard message containing basic passenger card information. The information from the card is then matched to a client and clearance event which is used to enrich the SV631-RegisterPassengerCard payload with various client-related information (identifiers, addresses etc.) and forms the SV632-NotifyPassengerCard notification.\n\n"},{"filename":"PersonIdentity\/Services\/IN002-RetrieveFCCData\/V3.0\/XSD\/README.md","contents":"## Service Usage\nThis service is designed to be used by Client Search Portal only for the retrieval of FCC data. This includes data for each of the countries in the FCC and the levels of data captured. This service will continue to grow as the depth of the FCC data increases.\n## Service Behaviour\nThis service is invoked only by CSP internally.\n## Service Variants\nNA\n## Service Dependencies\nNA\n## Service Composition\nThis service is only comprised of CDH data.\n## Service Flow\nThis service call is to CDH only.\n## Transformation\nNone\n## Service State Management Decisions\nNone\n"},{"filename":"PersonIdentity\/Services\/IN009-RetrieveBiometricByCitizenship\/V1.0\/XSD\/README.md","contents":"## Service Usage\nIN009 is an Internal Service that provides the ability to search and retrieve Citizenship Biometric and Biographic data associated with a client's Citizenship Application. \nThe search is conducted using a Party System Identifier (Citizenship Certificate Number obtained from Orchestration Service). \nIf a single client is identified and that client has Biometric Enrolment(s), Biographic and Biometric data will be returned in the Response.\n## Service Behaviour\nThe service will attempt to retrieve data for a single party based on the supplied criteria, according to the following flow and business rules;\nIN009.1 Citizenship Certificate Number ('CCN') will be matched against DOCUMENT.DOCUMENT_NUMBER where DOCUMENT.DOCUMENT_TYPE in ('CERTIFICATE_OF_EVIDENCE_OF_CITIZENSHIP', 'CITIZENSHIP_CERTIFICATE')\n\nIN009.2 Where multiple parties are matched by CCN and Date of Birth is not provided, a response will be sent back with the message PRTY94\n\nIN009.3 Where multiple parties are matched by CCN and Date of Birth is provided, further matching using Date of Birth criteria will take place on any Citizenship Biometric Enrolments as follows - BIOMETRIC_ENROLMENT.BUSINESS_CONTEXT_TEXT = 'Citizenship', BIOGRAPHIC.BIRTH_DATE_DAY = Request.CalendarDay, BIOGRAPHIC.BIRTH_DATE_MONTH = Request.CalendarMonth, BIOGRAPHIC.BIRTH_DATE_YEAR = Request.CalendarYear\n\nIN009.4 Where multiple parties have matched on CCN, but none match on Date of Birth, a response will be sent back with the message PRTY00092.\n\nIN009.5 Where no parties match on CCN, a response will be sent back with the message PRTY00091.\n\nIN009.6 Where a single party matches on CCN or on CCN + Date of Birth, a response will be sent back with Biometric Enrolment and Biographic data for the party as follows:BiometricByCitizenship: BiometricCollectionID PSI details of the BAMS ID to which the enrolment is associated, PartySystemIdentifierList PSI details for the party, excluding BiometricCollectionId FacialBiometricAcquiredFlag FACIAL_BIOMETRIC_ACQUIRED_FLAG, BiometricMode BIOMETRIC_MODE_TYPE , UTCAcquisitionDatetimeOffset UTC_ACQUISITION_DATETIME_OFFSET , UTCAcquisitionDatetime LOCAL_FACIAL_ACQUISITION_TIMESTAMP , AcquistionLocation ACQUISITION_LOCATION , EnrolmentDateTime ENROLMENT_TIMESTAMP , BusinessContextType BUSINESS_CONTEXT_TEXT , BusinessProgramme BUSINESS_PROGRAMME_TEXT , BusinessEventType BUSINESS_EVENT_TEXT , EventClassification EVENT_CLASSIFICATION_TEXT , ACTProvision ACT_PROVISION_TEXT , DocumentNumber , EffectiveFromDateTime EFFECTIVE_FROM_TIMESTAMP , EffectiveToDateTime EFFECTIVE_TO_TIMESTAMP , SourceSystem, LastUpdated, BiometricByCitizenshipBiographic:, The Biographic details will be taken from a single biographic record chosen on order: name_usage_type, source_update_timestamp, effective_to_timestamp,BiometricByCitizenshipImageReference\n"},{"filename":"PersonIdentity\/Services\/SV047-RetrieveIdentityDocumentList\/V3.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows consumers to retrieve a list of all Travel Document details which have been stored by the department for a specified Party. Retrieval of documents will happen at various stages during a visa application process, whenever a Visa Processing Officer views an applicants details.\n\n## Service Behaviour\nSupplied with the 1PartyIdentifier, the service returns Travel Documents stored for that Party. The service will return a list of Document objects. \nConsumers may specify a limit and offset for the list, allowing them to slice the data into pages. For example, a limit of 25, with an offset of 0 will return the first 25 results. An offset of 25 will return the next 25. Responses will also contain the total number of documents available.\nConsumers may also specify the following criteria:\n Document Category -Currently TRAVEL_DOC is the only supported document type for this service.\n Document Type - Within Document Categories, there are numerous document types.\nThe consumer may specify that they wish to retrieve only the latest version of each document, all versions of each document, or the version of each document which was current at a given date and time. The default behaviour is to retrieve all versions.\nThe service currently only supports travel documents.\nThe service will return:\n Document data\n Person Biodata recorded for each document\n The size of the set of documents returned by the search, additionally listed by document category.\n A count of the available unended documents for the Party Id. Ended documents will not be included in the count.\n\n## Service Variants\nThere are no variants for this service.\n\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\nAs ISR does not currently support Party Id, the Party Id provided by the consumer must first be looked up in CDH to find an ICSE CID or TRIPS PID which may then be used to retrieve the document list from ISR.\nThe service relies on the assumption that the identity merge\/split notifications from ICSE, which are used to update ISR, are also updating CDH. In other words, if a CID is linked to a PID in CDH, this is a result of an event that has also caused them to be linked in ISR.\n\n## Service Flow\n1. Service Consumer invokes service on ESB with RetrieveIdentityDocumentListRequest message\na. If Party Identifier Type of CDH_PARTY_ID is provided ESB transforms RetrieveIdentityDocumentListRequest to SV288 request to retrieve CID or PID\nb. If PartyIdentifier.IdentifierType = CID or PID do not resolve. \n2. ESB transforms RetrieveIdentityDocumentListRequest to SV288 request to retrieve ICSE CID from CDH.\ni. ESB invokes SV288 with the Party Id provided by the consumer. \nii. SV288 returns response with all the Party Identifiers stored in CDH fro the given Party Id.\niii. ESB selects party identifier from SV288 response, in the following order of preference: ICSE CID, TRIPS PID. \niv. Use AF1 If SV288 does not find a party with the given party id.\nv. Use AF3 If SV288 does not find an ICSE CID or TRIPS PID for the given party id.\n\n3. ESB creates a RetrieveIdentity request using either the given Party Identifier or the Party Identifier returned in Step 3, and criteria mapped from RetrieveIdentityDocumentListRequest.\n4. ESB invokes ISR.RetrieveIdentity\n5. ISR returns a RetrieveIdentityResponse containing a list of document details, and counts of the available (unended) documents. \n6. ESB transform the RetrieveIdentityResponse message and PartyID into a RetrieveIdentityDocumentListResponse. If no documents are available, a normal RetrieveIdentityDocumentListResponse should be sent to the consumer, with both document count fields set to 0. Use AF2 If the identity is not found.\n7. RetrieveIdentityDocumentListResponse is returned to the Consumer\n\nAlternate Flow 1\n\n A SOAP fault should be returned to the consumer with the MSG-E01 message - no further processing occurs\n\nAlternate Flow 2\n\n A SOAP fault should be returned containing MSG-E02.\n\nAlternate Flow 3\n\n A SOAP fault should be returned to the consumer with the MSG-E04 message - no further processing occurs.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"PersonIdentity\/Services\/SV047-RetrieveIdentityDocumentList\/V4.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows consumers to retrieve a list of all Travel Document details which have been stored by the department for a specified Party. Retrieval of documents will happen at various stages during a visa application process, whenever a Visa Processing Officer views an applicants details.\n\n## Service Behaviour\nSupplied with the 1PartyIdentifier, the service returns Travel Documents stored for that Party. The service will return a list of Document objects. \nConsumers may specify a limit and offset for the list, allowing them to slice the data into pages. For example, a limit of 25, with an offset of 0 will return the first 25 results. An offset of 25 will return the next 25. Responses will also contain the total number of documents available.\nConsumers may also specify the following criteria:\n Document Category -Currently TRAVEL_DOC is the only supported document type for this service.\n Document Type - Within Document Categories, there are numerous document types.\nThe consumer may specify that they wish to retrieve only the latest version of each document, all versions of each document, or the version of each document which was current at a given date and time. The default behaviour is to retrieve all versions.\nThe service currently only supports travel documents.\nThe service will return:\n Document data\n Person Biodata recorded for each document\n The size of the set of documents returned by the search, additionally listed by document category.\n A count of the available unended documents for the Party Id. Ended documents will not be included in the count.\n\n## Service Variants\nThere are no variants for this service.\n\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\nAs ISR does not currently support Party Id, the Party Id provided by the consumer must first be looked up in CDH to find an ICSE CID or TRIPS PID which may then be used to retrieve the document list from ISR.\nThe service relies on the assumption that the identity merge\/split notifications from ICSE, which are used to update ISR, are also updating CDH. In other words, if a CID is linked to a PID in CDH, this is a result of an event that has also caused them to be linked in ISR.\n\n## Service Flow\n1. Service Consumer invokes service on ESB with RetrieveIdentityDocumentListRequest message\na. If Party Identifier Type of CDH_PARTY_ID is provided ESB transforms RetrieveIdentityDocumentListRequest to SV288 request to retrieve CID or PID\nb. If PartyIdentifier.IdentifierType = CID or PID do not resolve. \n2. ESB transforms RetrieveIdentityDocumentListRequest to SV288 request to retrieve ICSE CID from CDH.\ni. ESB invokes SV288 with the Party Id provided by the consumer. \nii. SV288 returns response with all the Party Identifiers stored in CDH fro the given Party Id.\niii. ESB selects party identifier from SV288 response, in the following order of preference: ICSE CID, TRIPS PID. \niv. Use AF1 If SV288 does not find a party with the given party id.\nv. Use AF3 If SV288 does not find an ICSE CID or TRIPS PID for the given party id.\n\n3. ESB creates a RetrieveIdentity request using either the given Party Identifier or the Party Identifier returned in Step 3, and criteria mapped from RetrieveIdentityDocumentListRequest.\n4. ESB invokes ISR.RetrieveIdentity\n5. ISR returns a RetrieveIdentityResponse containing a list of document details, and counts of the available (unended) documents. \n6. ESB transform the RetrieveIdentityResponse message and PartyID into a RetrieveIdentityDocumentListResponse. If no documents are available, a normal RetrieveIdentityDocumentListResponse should be sent to the consumer, with both document count fields set to 0. Use AF2 If the identity is not found.\n7. RetrieveIdentityDocumentListResponse is returned to the Consumer\n\nAlternate Flow 1\n\n A SOAP fault should be returned to the consumer with the MSG-E01 message - no further processing occurs\n\nAlternate Flow 2\n\n A SOAP fault should be returned containing MSG-E02.\n\nAlternate Flow 3\n\n A SOAP fault should be returned to the consumer with the MSG-E04 message - no further processing occurs.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"PersonIdentity\/Services\/SV146-RegisterIdentityDocument\/V3.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows consumers to register a Travel Document, which will be stored by the department for a specified party. \nThe creation of travel documents will happen during every visa application process, as providing travel documents is a requirement of the visa process.\n\n## Service Behaviour\nTo register a travel document the consumer must provide the following mandatory attributes:\nEventType.SystemId\nEventType.EventClassification\nEventType.EventDate\nIdentifier\nIdentifier Type\nDocument Reference Number\nDocument Type Code\nNationality of Bearer\nOnce all the travel document information has been entered the system will use the core document attributes (Person Identity, Travel Document Type, Travel Document Number and Nationality of Bearer) to check if the document entered already exists.\nThere are three scenarios for document registration:\n The document already exists and some of the attributes have changed then a new document version is registered in the system.\n The document already exists and no attributes have changed, then the document is just linked to a specific event that the document is being used for. An example would be someone entering the country and showing their passport.\n The document doesnt exist in the system, therefore a new document entity is registered and a new version of the document entity is registered. \nIf the document is registered successfully, the service will return:\n The ISR Document Id\n The ISR Document Version Id\nElse if an error occurs the service will return the corresponding error message.\n\n## Service Variants\nThere are no variants for this service.\n\n## Service Dependencies\nThe consumer must have a Party Id, the travel document number and the nationality of the bearer, as mandatory fields when a travel document is being entered.\nThe provider will identify if a new version or new document entity is required, through the Person Identity, Travel Document Type, Travel Document Number and the Nationality of the Bearer attributes of the Travel Document being entered.\n\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\nAs ISR does not currently support Party Id, the Party Id provided by the consumer must first be looked up in CDH to find an ICSE CID or TRIPS PID which may then be used to retrieve the document list from ISR.\nThe service relies on the assumption that the identity merge\/split notifications from ICSE, which are used to update ISR, are also updating CDH. In other words, if a CID is linked to a PID in CDH, this is a result of an event that has also caused them to be linked in ISR.\n\n## Service Flow\n1. Service Consumer invokes service on ESB with RegisterIdentityDocumentRequest message\n2. If a CID or PID is not used;\na. ESB transforms RegisterIdentityDocumentRequest to SV288 - Retrieve Consolidated Party Identifiers to retrieve party identifiers from CDH.\nb. ESB invokes SV288 - Retrieve Consolidated Party Identifiers.\nc. ESB returns SV288 - Retrieve Consolidated Party Identifiers response \nd. ESB selects the CID from SV288 if it is returned, else ESB selects PID from SV288 (preference is CID). If SV288 returns an error, then SV146 will return error SV146.MSG-E04 to the consumer - no further processing occurs. Where SV288 returns neither CID nor PID, error code SV146.MSG-E06 is returned to the consumer.\n3. ESB creates a RegisterIdentity request using the chosen identifier (CID or PID), and criteria mapped from RegisterIdentityDocumentRequest.\n4. ESB invokes ISR.RetgisterIdentity\n5. ISR returns a RegisterIdentityResponse containing the full document definition and the ISR Identity Id. \n6. ESB transform the RegisterIdentityResponse message into a RegisterIdentityDocumentResponse returning the ISR Document Id and ISR Document Version Id. \n7. RegisterIdentityDocumentResponse is returned to the Consumer.\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"PersonIdentity\/Services\/SV150-RetrievePersonImage\/V4.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows consumers to retrieve person images which have been acquired during a clients involvement with DIBP. \nCurrently the only supported image type is FACIAL. \nPerson images may be retrieved for a number of reasons:\n A client arrives at detention centre reception. In order to confirm the clients identity at reception, the latest facial image acquired for the identity claimed by the client is used for visual verification\n A person has been tentatively identified based on biographic details as someone already known to DIBP. Further confirmation is needed to determine if the proposed identity matches the subject. An image may be retrieved for purpose of verification.\n Detention centres produce bed-check reports four times daily. The reports contain a facial image used to confirm a detainees identity. The latest facial image acquired for that identity appears on the report.\n To support the data sharing with the Five Country Conference (FCC) project\nService\n## Service Behaviour\nThis service retrieves the latest available person image, which has been acquired by DIBP for a given client and linked to by DIBP to either a CID or PID. All other IDs are supported through SV288 if CID or PID is not known. Alternatively, if an ISR image identifier is supplied it will return the specific image with or without the acquisition profile.\nOnly images for a Party type of Person are supported. The Organisation party type cannot be associated with a Person Image.\nThe primary variant of the service uses CID or PID (and optional ISR image id) to locate images. All other IDs that are supported by SV288 (retrieve identifiers) will also be supported by require a call to CDH to resolve these identifiers first. It is therefore strongly recommended that CID or PID is used. If a CID or PID doesnt exist and this is known to the consumer then SV150 should not be required as no facial image will exist. \nIn addition to the CID, the consumer may optionally provide:\nThumbnailImageFlag, indicating the desired image size. If this flag is not provided, the default will be a full-sized (480x640) image.\nThe returned image is independent of Business Context. In other words, if the last image recorded for a person was acquired as part of a visa application, this will be the image returned to all consumers of this interface.\nThe service will return either\nA Person Image and\nA count of the number of images present in the system and optionally\nImage acquisition Profile\n\nOr\nA message indicating that no images were found, including a FacialImageCount element set to 0.\n\n## Service Variants\nNone\n## Service Dependencies\nSV288 Retrieve Consolidated Party Identifiers when any other ID but CID or PID is used.\n## Service Composition\nThis service is realized through ISR (Primary) service provider. \n\n## Service Flow\n1. An event is generated by the Service Consumer which invokes the Retrieve Person Image service on the ESB;\n2. ESB checks for the existence of the PartyIdentifierType of CID or PD. If CID or PID doesnt exist then;\na. SV288 is invoked to Retrieve all identifiers\nb. If CID or PID exists it is extracted from the SV288 payload\nc. If CID pr PID does not exist then RetrieveImageResponse.xsd with FacialImageCount = 0 is returned to the consumer\n3. ESB transforms the message into the ISR compliant RetrievePersonalIdentifierListRequest.xsd and sends this message to ISR\n4. ISR responds with a RetrievePersonalIdentifierListResponse.xsd and ESB transforms this message into the ESB compliant RetrieveImageResponse.xsd\n5. ESB Sends this RetrieveImageResponse.xsd message to the consumer.\n1.1.1 Alternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\n1. ESB transforms RetrieveImageResponse Error into Enterprise Error Message.\n2. ESB returns response with Enterprise Error payload.\n\n1.1.2 Alternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV150.MSG-E00 to the consumer.\n\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"PersonIdentity\/Services\/SV398-RecordApplicantPersonalIdentifiers\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used for receiving biometric (face and fingerprint) enrolments for offshore Visa applications from the provider.\n## Service Behaviour\nCSP captures the required data and sends to BAMS to consume using SV398.\nBAMS then sends data using SV540 to CDH\nCDH then sends data using SV563 to CSP for display.\n"},{"filename":"PersonIdentity\/Services\/SV540-NotifyPersonBiometricAcquisition\/V1.0\/XSD\/README.md","contents":"## Service Usage\nFollowing biometric enrolment of a client record from offshore, BMS will notify CDH. As a strategic measure, this service will also include information about onshore biometric collections, namely, Detention, ONPRO, Citizenship and ISR sourced facial images caseloads. This service includes the enrolment data but not the FCC data.\n## Service Behaviour\nData is captured by CEP, stored by Leida, transmitted to CDH and subsequently presented to CSP.\nCSP captures the required data and sends to BAMS to consume using SV398.\nBAMS then sends data using SV540 to CDH\nCDH then sends data using SV563 to CSP for display. \n\n"},{"filename":"PersonIdentity\/Services\/SV541-NotifyPersonBiometricsUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nCDH will send a subset of biometric collection information to ICSE using this service. This information will include a CSP URL link which will enable the ICSE VPO to view all the biometric collection event information for that client, as stored in CDH.\n\n"},{"filename":"PersonIdentity\/Services\/SV542-NotifyPersonBiometricMatchResults\/V3.0\/XSD\/README.md","contents":"## Service Usage\nFollowing biometric enrolment of a client, BAMS provides biometric match results for a DIBP client. This information is used in CDH for display in CSP and, following results analysis in CDH, to provide the content for the Notify person matches consolidated result service invocation by CDH to ICSE and IRIS.\nThe biometric results are for:\n(a) Internal BIDS DIBP match results\n(b) NAFIS Law Enforcement match results and \n(c)   FCC Agency search match results as provided in Response 1 (R1) messages or Tier 1 result messages (received respectively from either the SRTP or the SFSS).\n## Service Behaviour\nData is captured by CEP, stored by Leida, transmitted to CDH and subsequently presented to CSP. CDH then transmits information to ICSE or IRIS.\n"},{"filename":"PersonIdentity\/Services\/SV543-NotifyPersonMatchesConsolidatedResult\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service provides to ICSE the summary biometric match result indicator (following CDH analysis of Notify Biometric Match Result Details).\n\n"},{"filename":"PersonIdentity\/Services\/SV548-NotifyPersonForeignBusinessServicesSummary\/V2.0\/XSD\/README.md","contents":"## Service Usage\nWhen an AU search request to another FCC Agency results in a match in that country (Q1\/R1 transaction), BMS may, depending upon business logic rules, request additional client information from that FCC Agency (Q2\/R2 transaction). Further adhoc client information may also be sought following receipt of the data in R2, using the manually invoked Q3\/R3 service.\nNote that data is also received as manual Tier 2 data from FCC agencies not yet using SRTP and imported into the BMS. SV548 also provides this data (equivalent to R2 except for some data items) to CDH. \nNotify Additional FCC Data for Party service is used by BMS to send this additional data to CDH for storage and display to users via the CSP. The Q3\/R3 information is represented as a TRIM reference link for the document which provides the query\/response information exchanged for this transaction type. CDH\/CSP will retrieve this document from TRIM is requested by an officer accessing the CSP. \nThe BMS may also receive additional FCC client data for a DIBP client as a result of the QR\/RR transaction process. If an inbound Q1 from an FCC Agency has a resulted in a match against a DIBP client record, then the BMS may, depending on business logic rules, send a Query Reciprocal (QR) to that FCC Agency requesting the provision of its details for that client (since the inbound Q1 is anonymous, containing a unique reference ID and fingerprint images only for the client). This additional FCC client data, when received in the Reciprocal Response (RR), is sent by the BMS to the CDH for storage and display to users via the CSP.\nReference to facial image store and doc image store (in the ISR) will also be provided in the service to enable subsequent retrieval from ISR by the CSP is requested by a user.\n## Service Behaviour\nSynchronous service.\nAdditional FCC client data will be sent to CDH as soon as received. Receipt of all information pertaining to a DIBP client for this FCC search may require several service updates. For example:\n(a) Q2\/R2 completion for FCC Agency A at Time a\n(b) Q2\/R2 completion for FCC Agency B at Time b\n(c) Q3\/R3 first transaction completed for FCC Agency B at time c\n(d) Q3\/R3 final transaction completed for FCC Agency B at time d.\nNote: this service will always include the data sent in a previous notification for a particular client update. That is, full snapshots of data, not incremental updates.\n\n"},{"filename":"PersonIdentity\/Services\/SV563-RetrievePersonBiometricsMatchesHistory\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service retrieves a selected client's biometric enrolment(s) and match results.\nThese include internal, NAIFIS and FCC match results and associated metadata for foreign business service summaries.\n\n## Service Behaviour\nCSP captures the required data and sends to BAMS to consume using SV398.\nBAMS then sends data using SV540 to CDH\nCDH then sends data using SV563 to CSP for display.\n"},{"filename":"PersonIdentity\/Services\/SV579-CancelPersonBiometricCollection\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is to enable the provider (ICSE, IRIS, CSP) to notify consumer (BAMS) that a client biometrics acquisition is provisionally in error (following manual VPO or IRC provisional error notification in those systems).\nBAMS admin support will then be notified following invocation of this service. If BAMS admin support confirms that the error has occurred, then admin support will access BAMS and logically delete the relevant BAMS ID record. BAMS will then auto notify this BAMS ID deletion to CDH (which will then update ICSE\/IRIS) and ISR. Following biometric acquisition record correction by Admin support, the record will be replayed into BAMS, ISR, CDH and then ICSE\/IRIS.\n\n"},{"filename":"PersonIdentity\/Services\/SV580-DeregisterBiometricCollectionIdentifier\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service enables a consumer, such as BAMS, to end-date and identifier previously registered in ISR, such as a BAMS ID.\n\n"},{"filename":"PersonIdentity\/Services\/SV583-StoreUnauthorisedArrivalImmigrationDetails\/V1.0\/XSD\/README.md","contents":"## Service Usage\nCDH will send notification to Crimtrac (via ESB and WSGW) as IMA clients' details change or new IMA clients enter into Community Detention or granted Bridging Visa Holder (BVE).\n\n"},{"filename":"PersonIdentity\/Services\/SV606-VerifyPersonBiometrics\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is a Biometrics Verification Service that will implement a number of specific biometrics verification operations.\n\n"},{"filename":"PersonIdentity\/Services\/SV611-VerifyBiometricFacialImage\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to determine whether a facial image meets biometric quality.\n"},{"filename":"PersonIdentity\/Services\/SV612-IdentifyPersonBiometrics\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis services allows clients a service to facilitate the biometric matching of a probe image against the data held by DIBP. The initial release will provide facial data matching capability against the biometric data holdings.  Additional biographic information could be provided by the client to narrow search results against other, non-biometric data.\n## Service Behaviour\nThis service takes in a probe image and matches this probe image against the biometric data holdings of the Department. This will allow clients to undertake a complete gallery search of biometric data in conjunction with optional biographic data to assist with the specificity of the required results. ComparisonLevel acts as a filter and may have one of LOW, MEDIUM, and HIGH.  This allows clients to tune the acceptable risk profile of the search. Essentially this also means turning the intended FAR (False Acceptance Rate) and FRR (False Rejection Rate) per search.\n"},{"filename":"PersonIdentity\/Services\/SV613-UpdatePersonnelClearanceStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is provided bt SAP to update personnel record with security clearance and employer suitability clearance outcomes.\n## Service Behaviour\nThis is a synchronis service. Siebel sends data to SAP to store. SAP sends informaiton and warnings and success flag in response.\n"},{"filename":"PersonIdentity\/Services\/SV617-NotifyPersonIdentityAssessment\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by CSP via DataPower to sends the update to CDH. The service allows updates for Person Identity Assessment updates.\n"},{"filename":"PersonIdentity\/Services\/SV628-VerifyAustralianBirthCertificate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service verifies if the details of an Australian identity document match the records held by the issuing Australian Government authority.\n## Service Behaviour\nThe consumer sends a request with details of the Australian birth certificate to be verified. The request is routed through to the relevant issuing government authority via the Document Verification System (DVS), hosted by Oakton. The issuing authority will send a response status (yes\/no\/error) which confirms if the details provided match a document held in their records. For all outbound calls, the WSGW will generate the DVS mandated elements VerificationRequestNumber, VersionNumber, VerificationRequestDateTime and VerificationRequestorAgency during the transform into the DVS provider message.\n## Service Flow\n1. Consumer sends an enterprise SV628 request message to the ESB.\n2. ESB transforms the enterprise message into an internal DVS message.\n3. ESB sends the internal DVS message to the WSGW.\n4. WSGW transforms the internal DVS message into an external DVS message.\n5. WSGW sends the external DVS message to Oakton\/DVS.\n6. Oakton respond to the ESB via WSGW with a generic Verification Response message.\n7. The generic response message is transformed into a SV628 response.\n## Transformation\nTransformation exists on the ESB between enterprise and legacy internal DVS messages. The internal DVS messages are transformed into the external DVS messages on the WSGW.\n"},{"filename":"PersonIdentity\/Services\/SV628-VerifyAustralianCitizenshipCertificate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service verifies if the details of an Australian identity document match the records held by the issuing Australian Government authority.\n## Service Behaviour\nThe consumer sends a request with details of the Australian citizenship certificate to be verified. The provider will send a response status (yes\/no\/error) which confirms if the details provided match a document held in our records. This service can also accept inbound requests from external agencies. In the case of an external request from DVS, the VerificationRequestIdentifier, VerificationRequestDateTime, VerificationRequestorAgency and VerificationRequestDocumentType elements are mandatory. For all outbound calls, the WSGW will generate the DVS mandated elements VerificationRequestNumber, VersionNumber, VerificationRequestDateTime and VerificationRequestorAgency during the transform into the DVS provider message.\n\n## Service Flow\n1. Consumer sends an enterprise SV628 request message to the ESB.\n2. ESB transforms the enterprise message into an internal DVS message.\n3. ESB sends the internal DVS message to the WSGW.\n4. WSGW transforms the internal DVS message into an external DVS message.\n5. WSGW sends the external DVS message to Oakton\/DVS.\n6. Oakton respond to the ESB via WSGW with a generic Verification Response message.\n7. The generic response message is transformed into a SV628 response.\n## Transformation\nTransformation exists on the ESB between enterprise and legacy internal DVS messages. The internal DVS messages are transformed into the external DVS messages on the WSGW.\n"},{"filename":"PersonIdentity\/Services\/SV628-VerifyAustralianDriversLicence\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service verifies if the details of an Australian identity document match the records held by the issuing Australian Government authority.\n## Service Behaviour\nThe consumer sends a request with details of the Australian drivers licence to be verified. The request is routed through to the relevant issuing government authority via the Document Verification System (DVS), hosted by Oakton. The issuing authority will send a response status (yes\/no\/error) which confirms if the details provided match a document held in their records. For all outbound calls, the WSGW will generate the DVS mandated elements VerificationRequestNumber, VersionNumber, VerificationRequestDateTime and VerificationRequestorAgency during the transform into the DVS provider message.\n## Service Flow\n1. Consumer sends an enterprise SV628 request message to the ESB.\n2. ESB transforms the enterprise message into an internal DVS message.\n3. ESB sends the internal DVS message to the WSGW.\n4. WSGW transforms the internal DVS message into an external DVS message.\n5. WSGW sends the external DVS message to Oakton\/DVS.\n6. Oakton respond to the ESB via WSGW with a generic Verification Response message.\n7. The generic response message is transformed into a SV628 response.\n## Transformation\nTransformation exists on the ESB between enterprise and legacy internal DVS messages. The internal DVS messages are transformed into the external DVS messages on the WSGW.\n"},{"filename":"PersonIdentity\/Services\/SV628-VerifyAustralianMarriageCertificate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service verifies if the details of an Australian identity document match the records held by the issuing Australian Government authority.\n## Service Behaviour\nThe consumer sends a request with details of the Australian Marriage Certificate card to be verified. The request is routed through to the relevant issuing government authority via the Document Verification System (DVS), hosted by Oakton. The issuing authority will send a response status (yes\/no\/error) which confirms if the details provided match a document held in their records. For all outbound calls, the WSGW will generate the DVS mandated elements VerificationRequestNumber, VersionNumber, VerificationRequestDateTime and VerificationRequestorAgency during the transform into the DVS provider message.\n## Service Flow\n1. Consumer sends an enterprise SV628 request message to the ESB.\n2. ESB transforms the enterprise message into an internal DVS message.\n3. ESB sends the internal DVS message to the WSGW.\n4. WSGW transforms the internal DVS message into an external DVS message.\n5. WSGW sends the external DVS message to Oakton\/DVS.\n6. Oakton respond to the ESB via WSGW with a generic Verification Response message.\n7. The generic response message is transformed into a SV628 response.\n## Transformation\nTransformation exists on the ESB between enterprise and legacy internal DVS messages. The internal DVS messages are transformed into the external DVS messages on the WSGW.\n"},{"filename":"PersonIdentity\/Services\/SV628-VerifyAustralianMedicareCard\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service verifies if the details of an Australian identity document match the records held by the issuing Australian Government authority.\n## Service Behaviour\nThe consumer sends a request with details of the Australian medicare card to be verified. The request is routed through to the relevant issuing government authority via the Document Verification System (DVS), hosted by Oakton. The issuing authority will send a response status (yes\/no\/error) which confirms if the details provided match a document held in their records. For all outbound calls, the WSGW will generate the DVS mandated elements VerificationRequestNumber, VersionNumber, VerificationRequestDateTime and VerificationRequestorAgency during the transform into the DVS provider message.\n## Service Flow\n1. Consumer sends an enterprise SV628 request message to the ESB.\n2. ESB transforms the enterprise message into an internal DVS message.\n3. ESB sends the internal DVS message to the WSGW.\n4. WSGW transforms the internal DVS message into an external DVS message.\n5. WSGW sends the external DVS message to Oakton\/DVS.\n6. Oakton respond to the ESB via WSGW with a generic Verification Response message.\n7. The generic response message is transformed into a SV628 response.\n## Transformation\nTransformation exists on the ESB between enterprise and legacy internal DVS messages. The internal DVS messages are transformed into the external DVS messages on the WSGW.\n"},{"filename":"PersonIdentity\/Services\/SV628-VerifyAustralianNameChangeCertificate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service verifies if the details of an Australian identity document match the records held by the issuing Australian Government authority.\n## Service Behaviour\nThe consumer sends a request with details of the Australian Name Change Certificate card to be verified. The request is routed through to the relevant issuing government authority via the Document Verification System (DVS), hosted by Oakton. The issuing authority will send a response status (yes\/no\/error) which confirms if the details provided match a document held in their records. For all outbound calls, the WSGW will generate the DVS mandated elements VerificationRequestNumber, VersionNumber, VerificationRequestDateTime and VerificationRequestorAgency during the transform into the DVS provider message.\n## Service Flow\n1. Consumer sends an enterprise SV628 request message to the ESB.\n2. ESB transforms the enterprise message into an internal DVS message.\n3. ESB sends the internal DVS message to the WSGW.\n4. WSGW transforms the internal DVS message into an external DVS message.\n5. WSGW sends the external DVS message to Oakton\/DVS.\n6. Oakton respond to the ESB via WSGW with a generic Verification Response message.\n7. The generic response message is transformed into a SV628 response.\n## Transformation\nTransformation exists on the ESB between enterprise and legacy internal DVS messages. The internal DVS messages are transformed into the external DVS messages on the WSGW.\n"},{"filename":"PersonIdentity\/Services\/SV628-VerifyAustralianPassport\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service verifies if the details of an Australian identity document match the records held by the issuing Australian Government authority.\n## Service Behaviour\nThe consumer sends a request with details of the Australian passport to be verified. The request is routed through to the relevant issuing government authority via the Document Verification System (DVS), hosted by Oakton. The issuing authority will send a response status (yes\/no\/error) which confirms if the details provided match a document held in their records. For all outbound calls, the WSGW will generate the DVS mandated elements VerificationRequestNumber, VersionNumber, VerificationRequestDateTime and VerificationRequestorAgency during the transform into the DVS provider message.\n## Service Flow\n1. Consumer sends an enterprise SV628 request message to the ESB.\n2. ESB transforms the enterprise message into an internal DVS message.\n3. ESB sends the internal DVS message to the WSGW.\n4. WSGW transforms the internal DVS message into an external DVS message.\n5. WSGW sends the external DVS message to Oakton\/DVS.\n6. Oakton respond to the ESB via WSGW with a generic Verification Response message.\n7. The generic response message is transformed into a SV628 response.\n## Transformation\nTransformation exists on the ESB between enterprise and legacy internal DVS messages. The internal DVS messages are transformed into the external DVS messages on the WSGW.\n"},{"filename":"PersonIdentity\/Services\/SV640-CalculateBiometricMatchIndicator\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to initiate biometric matching for a given biometric enrolment within the provider system. The matching function checks for various biometric and biographic mismatches against the enrolment and party.\n## Service Behaviour\nDepending on the data that was registered during the biometric enrolment, the provider system may return none to many match results. A match result willl either be GREEN (No Match\/No Adverse Match), AMBER (Pending Match) or RED (Adverse Match). The consumer has the option to set the NotifyResultsFlag element which will invoke SV541-NotifyPersonBiometricsUpdate and notify subscribers with the latest match results.\n"},{"filename":"PersonIdentity\/Services\/SV641-InitiateBiometricReferrals\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to initiate biometric referrals to M5 partner countries. A biometric enrolment (enrolled through SV540-NotifyPersonBiometricAcquisition) must exist before referrals can be requested. Enrolments deemed ineligible for referral (eg. Australian citizens) are silently skipped and not referred to M5 partners.\n\n\n\n## Service Behaviour\nThe provider will initiate biometric referrals to M5 partners based on the BiometricReferralMode specified in the payload. \"MANUAL\" mode will send referrals to the M5 partners specified in the payload. \"AUTOMATIC\" mode will send referrals to M5 partners determined by risk rules applied to the enrolment. \"REVALIDATE\" mode will refer the enrolment to the M5 partners who previously received a referral for this enrolment.\n\n\nFor each referral, the provider will invoke a SV542-NotifyPersonBiometricMatchResults to notify subscribers that an M5 referral is pending. Upon receiving a response from the M5 partners, a subsequent SV542 notification is sent with the match result. Additional business dealing information returned from partners may also be notified in SV548-NotifyPersonForeignBusinessServicesSummary.\n\n\n"},{"filename":"PersonIdentity\/Services\/SV643-RegisterIdentity\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be the flagship service for all registrations of identity and replace match and search services for the organiation. This service will be used to standardise the \"Identity Upfront\" methodology required by the business in order to establish a persons identity before dealings with the department occurs.\n## Service Behaviour\nThis service will be orchestrated by the \"Identity Systems\" in enrolment of biometrics and registration of biographics inlcduing a possible result as an asyncronise service with pubsub notification of results or async call back pattern.\n"},{"filename":"PersonIdentity\/Services\/SV654-NotifyIdentityStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will notify any consumer of identity concerns from a variety of sources inlcuding Identity Registrations, potentially merges and splits as well as manual identity activities. The first usage will be by SITA after a register identity. The current scenario will only use the EBIS biometric component but future states will move to an orchestrated approach using IIB, IDH, EBIS and potentially other identity systems."},{"filename":"Referral\/Services\/SV339-RegisterApplicantSecurityReferral\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service provides a direct service call to Security Referral Service (SRS) to create an SRS request.\nThe creation of a security referral will occur during the visa application process within GVP.\n\n## Service Behaviour\nThis service provides a response to be returned to GVP. In the case that a referral creates a positive response, the response will also include the SRS referralID. Any errors that occur during the operation of this service will be communicated to GVP in a response message.\n\n## Service Variants\nThere are no variants for this service\n\n## Service Dependencies\nThere are no dependencies for this service\n\n## Service Composition\nThe primary provider is the SRS System. \n\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\n\n## Service Flow\n1. An event is generated by GVP using source system specific referral data.\n2. Sv339 Register Applicant Security Referral is invoked, assembling the group of messages into a single request in the GVP source system format.\n3. ESB invokes the primary provider SRS as follows:\na. ESB will transform RegisterApplicantSecurityReferralRequest.xml into PerfomSecurityReferralRequest.xml as per data mappings in the DIMA_DCD d15 Service Specification - SV339 - v01.0 RegisterApplicantSecurityReferral.xls micro design spreadsheet.\nb. SRS executes this service PerfomSecurityReferralRequest.xml and returns PerfomSecurityReferralResponse.xml to the ESB. \nc. ESB transforms PerfomSecurityReferralResponse.xml into RegisterApplicantSecurityReferralResponse.xml as per data mappings in the DIMA_DCD d15 Service Specification - SV339 - v01.0 RegisterApplicantSecurityReferral.xls micro design spreadsheet.\n4. ESB returns RegisterApplicantSecurityReferralResponse.xml to the consumer (GVP)\n1.1.1 Alternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\n***\n1.1.2 Alternate Flow 2 (AF2)\nIf the ESB raises an error before or while attempting to contact the primary provider, it will respond to the consumer with the relevant Enterprise Error payload. See section 4 of this document for a full listing of Return Codes and Messages.\n\n\n## Service State Management Decisions\nIf the provider system returns an error code at any stage of the service execution, the message flow will be stopped and the error returned to the consumer. This service will not return partial response messages.\n\n"},{"filename":"Referral\/Services\/SV339-RegisterSecurityReferral\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used by ELP to send security referral related information to the SRS Orchestrator when the account holder has completed and submitted an online eForm 80. The SRS Orchestrator will then send updates to ICSE (via SV295), ISR (via Web Services) and SRS (via SV339v4).\n"},{"filename":"Technical\/Services\/SV159-StoreBinaryDocument\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to sore document and additional details in Client Data Hub.\n"},{"filename":"Technical\/Services\/SV159-StoreBinaryImage\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to send images and additional details captured by SmartGate to HADOOP to be stored.\n## Service Behaviour\nSmartGates capture images, device details and image details and sends call to HADOOP. HADOOP stores images against the BiometricImageIdentifier that was provided by SmartGate. HADOOP sends acknowledgement in response. \nImageType and ImageUsageType have been made mandatory due to the filters in SV288 Retrieve Image Identifiers Request. ImageFormatType has been made mandatory due to the same madatory field in SV150 RetrievePersonImageResponse\n"},{"filename":"Technical\/Services\/SV642-NotifySMSDeliveryStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is designed to record the events of SMS deliveries from what is usually a 3rd party provider. This interface currently supports the AWS SNS specifications but is divorced from all extenral specifications.\n"},{"filename":"Technical\/Services\/SV653-NotifyLogPoint\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used to notify consumers of system log point information. In the context of the ESB as a publisher, it will notify of log points during a service flow (eg. successful PUT on queue or fault flow). This service implementation supports one or many log points."},{"filename":"Technical\/Services\/SV911-DetermineSystemHealth\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by various applications and monitoring tools to get a report on systems availability. This health check will include the ESB as the internal, the WSGW for external and other systems through the ESB and WSGW as they start to support the Health Checking abaility. The messages back can inlcude multiple descriptions of what was successfully checked or what failed.\n"},{"filename":"Visa\/Services\/SV010-RetrieveVisaApplication\/V4.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve details of a specific Note returned from the current data model in ICSE which indicates that notes are stored as events and as additional info items in ICSE. The notes subset to be retrieved have been agreed on by GSM and ICSE as appropriate for this service. This service may be consumed at any time. The only requirements are that the note id is passed to this service. The note Id is a compound key based upon the ICSE\/GSM concept that a unique note can be chosen by a combination ICSE Key fields which will be expressed as a single hyphen delimited string in the service and when exposed to GSM. However, when used to interface with ICSE services it will be expressed in its individual key components.\n## Service Behaviour\nThis service provides the following behaviour:\nA consumer of this service provides:\nNote Id\nA consumer of this service receives:\nNote Details which consist of\nNote Text\n\nThe following notes types are returned in this service.\nEvent Notes\nAssessment Notes\nPermission Request Additional Info Notes\nAny Audit information that is associated with the Activity and its associated activity notes.\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThis is not a composite service.\n## Service Flow\nA normal flow for this service is to have the SV199 Retrieve Note Details Request called by the portal. SV199- Retrieve Note Details then calls the ICSE corresponding Retrieve Note Service. ICSE will then execute the Retrieve Note Details request and return a response message back to SV 199. This in turn is returned to the consumer.\nSV199 has a Note Id key that is a compound key. \nThe key definition is located in the SV199 micro document.\nThe detail of this flow is as follows:\nService consumer invokes service SV199 on ESB using RetrieveNoteDetailsRequest.\nService SV199 then breaks up the noteId into the previously mentioned ICSE keys and creates an ICSE Request message.\nService SV199 invokes ICSE sending a request message.\nICSE receives the request and processes the Retrieve Note Details Request.\nICSE then sends a message back to service SV199.\nService SV199 sends a response message to the consumer.\nAlternate Flow 1\nThe following alternate service flow depicts the execution path that takes place when SV199 returns an error.\nService consumer invokes service SV199 on ESB using RetrieveNoteDetailsRequest.\nService SV199 then breaks up the noteId into the previously mentioned ICSE keys and creates an ICSE Request message.\nService SV199 invokes ICSE sending a request message.\nICSE receives the request and encounters an error.\nICSE then sends an error message back to service SV199.\nSV199 detects the error and transforms ICSE Error into Enterprise Error\nSV199 passes a response with this Enterprise Error to the consumer.\n## Service State Management Decisions\nNo state management required.\n"},{"filename":"Visa\/Services\/SV012-ModifyVisaApplication\/V4.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows the user to modify specific information on a visa application.\nThe execution of this service is a step that is likely to occur when a Visa Processing Officer (VPO) is required to update an application because a party has had a change of circumstances and this must be reflected in the Visa Application.\nThe service updates details for a specific Visa Application. The service will only deliver information which has actually changed to the backend systems, and not the entire data set.\n\n## Service Behaviour\nThe service updates details for a specific Visa Application. The service will only deliver information (including context) which has actually changed to the backend systems, and not the entire data set.\nThis service provides the following behaviour:\n Checks the user initiating this business function is authorised to modify the visa application\n Modifies Visa Application specific information\n Modifies Visa Applicant specific information\n Allows for the creation of notes specific to the Visa Application or Visa Applicant.\n Allows adding new Applicants to a Visa Application.\n Allows changing the association to the primary Visa Applicant and or role type\n Follows an all or nothing principal for updates. This means if any particular part of the update is unable to be performed, then nothing will be updated.\n\nThe following chapters describe in detail what data types the consumer can manipulate and how the service interface is structured.\nNote regarding concurrency: The current version of this service allows concurrent updates of the same data records in ICSE and thus it doesnt guarantee data consistency.\n1.1.1 Data Types which can be manipulated by this service\nSV012 allows manipulating the following CDM data types and operations:\n Updating, Inserting and Deleting of Single Attributes of Visa Application or Visa Applicant\n Updating, Inserting and Deleting of Child Objects of Visa Application or Visa Applicant\n Inserting of Notes (Notes Portal, Client Notes and Case Notes)\n Updating of Person Visa Application Role And Or Association\n Inserting\/deleting of Visa Applicants\n\nThe handling of the different data types is described in the following chapters.\n1.1.1.1 Child Objects of Visa Application and Visa Applicant\nIf the Consumer intends to update, insert or delete Child Objects (which are the CDM representation of ICSE events) it needs to provide the following data\n\n CDM Identifier for the Child Object (in case of UPDATE and DELETE)\n Operation (UPDATE, INSERT or DELETE)\n Fully populated Child with all related Attributes (in case of UPDATE and INSERT)\n\nRemark: SV012 allows updating, inserting and deleting of multiple Child Objects, Attributes and Notes at the same time in a single transaction.\n1.1.1.1 Single Attributes of Visa Application or Visa Applicant\nIf the Consumer intends to update, insert or delete an attribute (which is the CDM representation of an ICSE PermissionRequestInfo) of the Visa Application or Visa Applicant it needs to provide the following data:\n ICSE Sequence number if the attribute has an ICSE Multiplicity > 1 (in case of DELETE and UPDATE)\n CDM Attribute with its new value (in case of UPDATE and INSERT)\nSV012 applies the following logic to determine which operation (INSERT, UPDATE, DELETE) the consumer intends to have processed:\n\nSeq Number is present Value is present, i.e., node is not nil. Operation \nn\/a yes UPDATE or INSERT \nn\/a no DELETE \nTable 1: Determine the operation of Single Attributes with multiplicity = 1\n\n\nSeq Number is present Value is present, i.e., node is not nil. Operation \nno yes INSERT \nyes no DELETE \nyes yes UPDATE=DELETE +INSERT \nTable 2: Determine the operation of Single Attributes with multiplicity > 1\n\nIn the case of UPDATE for multiplicity > 1, first the DELETE operation has to be performed followed by INSERT.\n1.1.1.2 Inserting Notes\nIf the Consumer intends to insert a Note (Notes Portal, Client Notes or Case Notes) it needs to provide the following data:\nFor Notes Portal\n Application ID\n AssociationType (In ICSE terms this represents a Qualifier)\n Mandatory AssociationId (This is stored in ICSE as EventAdditionalInfo)\n Complete Notes Context \n\nFor Case Notes\n Application ID\n Complete Notes Context \n\nFor Client Notes\n Application ID \n Applicant ID\n Role\n Complete Notes Context \nSV012 allows only inserting notes. Deletes und Updates of Notes are not possible.\n\nRemark: SV012 allows inserting of notes and inserting, updating and deleting of child objects and attributes at the same time in one transaction.\n1.1.1.3 Updating Role and or association to primary applicant\nIf the Consumer intends to update the association to the primary applicant and or Role it needs to provide the following data:\n Application ID\n Applicant ID\n Current Role\n New Role (Required for update of role) \n Association details (Required for update of association)\nSV012 allows only updating the role and or association of a Visa Applicant. Inserts and deletes are not possible as it assumes update of role for applicants already present in the application. Even if only update of role is intended, association details are also mandatory to be sent. For only update of association to primary applicant, new role need not be sent. For update of both association and role, all the above mentioned fields are required to be sent. \nRestriction: If the consumer intends to change the Role of a Visa Applicant and to change the association, the service call does not allow changes to other data elements at the same time.\n1.1.1.4 Inserting\/deleting Visa Applicants\nIf the consumer intends to insert\/delete a client it needs to provide the following data:\n Application ID \n Applicant ID\n Role\nRestriction: If the consumer intends to insert\/delete clients, the service does not allow any other data manipulations at the same time.\n\n1.1.2 Choice Groups\nThe XSD of SV012 contains a choice group element in order to provide a structured interface to the consumer. The choice group element allows one of the following children\n ModifyVisaApplicationOrApplicantDetails\n ModifyApplicant \nThese children are of complex type and contain all variant specific Elements. \n1.1.2.1 ModifyVisaApplicationOrApplicantDetails\nThis choice group provides the ability to update, insert and delete one or many data items belonging to a Visa Application or Visa Applicant(s). Data consists of information from any of the following CDM Subject Areas:\n Visa Application\n Follow up Alerts\n Person Visa Applicant\n GSM Person Visa Application\n Person Visa Application Claim\n ASCO Code\n Party Relationship\n Regional Australian Address\n Person Factors (Employment, Language, Police Check, Country Stay, Qualification)\n Values Statement\n Notes (Portal Notes, Case Notes and Client notes)\n No Adverse Information\n1.1.2.2 ModifyApplicant\nThis choice group allows adding new Applicants to a Visa Application, modifying the association of a particular Applicant to the primary Applicant, and or change the role of the Visa Applicant.\n1.1.3 Response Message\nA consumer of this service receives either:\n An Enterprise Service Acknowledgement, or\n An Enterprise Error if the Visa Application cannot be modified for whatever reason.\n\n## Service Dependencies\nA Visa Application must be existent in the provider system.\n\n## Service Composition\nThere is no composition call.\n\n## Service Flow\nIn general this service processes incoming requests in 2 steps\n1. The service creates a message dependent on which element of the choice group is filled and what operation the consumer intends to process.\n2. Sending the request message to ICSE\nThe following chapters describe the behaviour of the service for each element of the choice group differently.\n1.1.1 ModifyVisaApplicationOrApplicantDetails\n1.1.1.1 Service Flow for ModifyApplicantOrApplicantDetails\nThe service receives the request message from the consumer. The Message can contain single Attributes (ICSE: Permission Request Infos), Child Objects of the Visa Application (ICSE: Events) and Notes (either Notes Portal or Case Notes).\n\nBased to some rules (see Chapter 1.2.1 Data Types which can be manipulated by this service) the Flow determines the operation (Delete, Update and Insert) for each element. Then the Flow sends an accordingly populated ApplicationMaintenanceRequest message to ICSE. ICSE will then execute this request and return an acknowledgement message back to service SV012 where a response message is returned to the consumer.\n\nThe detail of this flow is as follows:\n1. Service consumer invokes service SV012 on ESB using ModifyVisaApplicationRequest.\n2. SV012 creates an ICSE request message according to the rules described in chapter 2.1 (ICSE Service Provider). \na. For each single Attribute a PermissionRequestInfo-Element is created.\nb. For each Child Object at least one Event-Element is created.\nc. For each Note one Event-Element is created. \n3. Service SV012 invokes ICSE sending the request message.\n4. ICSE receives the request and tries to processes the updates for the specified visa application or the specified Visa Applicant(s).\n5. ICSE then sends an acknowledgement message back to service SV012.\n6. Service SV012 sends a successful response message to the consumer.\n1.1.1.2 Alternate Flow 2\nThe following alternate service flow depicts the execution path that takes place when ICSE returns an error.\n1. Service consumer invokes service SV012 on ESB using ModifyVisaApplicationRequest.\n2. SV012 creates an ICSE request message according to the rules described in chapter 2.1 (ICSE Service Provider). \na. For each single Attribute a PermissionRequestInfo-Element is created.\nb. For each Child Object at least one Event-Element is created.\nc. For each Note one Event-Element is created. \n3. Service SV012 invokes ICSE sending the request message.\n4. ICSE receives the request and encounters an error.\n5. SV012 detects the error and transforms ICSE Error into Enterprise Error\n6. SV012 passes a response with this Enterprise Error to the consumer.\n1.1.2 ModifyApplicant\n1.1.2.1 Service Flow for ModifyApplicant\nThe service receives the request message from the consumer. The Message contains the either a request to modify the association to the primary Visa Applicant or to modify the role of a Visa Applicant or to modify both the association to the primary Visa Applicant and the role of a Visa Applicant and\/or to add a new Applicant to a Visa Application.\n\nThen the Flow sends an accordingly populated ApplicationMaintenanceRequest message to ICSE. Dependent on which element of the choice group is passed by the consumer different elements of the ApplicationMaintenanceRequest are populated:\no In case of ModifyApplicantAssociationAndOrRoleType the UpdateClntRole Element with both children (old_clnt and updt_clnt) is populated. \no In case of AddNewApplicant the AddClntRole Element is populated.\n\nICSE will then execute this request and return an acknowledgement message back to service SV012 where a response message is returned to the consumer.\n\nThe detail of this flow is as follows:\n1. Service consumer invokes service SV012 on ESB using ModifyVisaApplicationRequest.\n2. SV012 creates a ICSE request message \n3. SV012 invokes ICSE sending the request message.\n4. ICSE receives the request and tries processes the updates for the specified visa application or the specified Visa Applicant(s).\n5. ICSE then sends an acknowledgement message back to service SV012.\n6. Service SV012 sends a successful response message to the consumer.\n1.1.2.2 Alternate Flow 1\nThe following alternate service flow depicts the execution path that takes place when CDH returns an error.\n1. Service consumer invokes service SV012 on ESB using ModifyVisaApplicationRequest.\n2. SV012 receives the Enterprise Error and passes a response with this Enterprise Error to the consumer\n1.1.2.3 Alternate Flow 2\nThe following alternate service flow depicts the execution path that takes place when ICSE returns an error.\n1. Service consumer invokes service SV012 on ESB using ModifyVisaApplicationRequest.\n2. SV012 creates a ICSE request message \n3. SV012 invokes ICSE sending the request message.\n4. ICSE receives the request and encounters an error.\n5. SV012 detects the error and transforms ICSE Error into Enterprise Error\n6. SV012 passes a response with this Enterprise Error to the consumer.\n\n## Transformation\nTo see the latest message mappings refer to the Micro Design document DIMA_DCD d15 Service Specification - SV012 - v03.0 Modify Visa Application.xls \nSpecific mappings required:\n1) Retrieving ICSE Reversal event type codes from ICSE event type codes. ESB code mapping table to be used for this.\n2) Retrieving ICSE Qualifier code from ICSE event type code and Portal reason type codes. ESB code mapping table to be used for this. \n3) Mapping required for transforming EmploymentVerificationStatus, EmploymentVerifiedFlag under Employment History, to one ICSE field which then gets stored. The combination of the two fields determines which value to be sent to ICSE.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV016-CreateVisaApplicationReferral\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used by the consumer to create a referral for a specific applicant in a visa application.\nA referral is a request from one DIAC work area to another to undertake some activity, for a specific purpose related to the processing of an application.\n\n## Service Behaviour\nThe consumer of this service will provide:\n Visa Application ID\n Party ID of the specific applicant for whom the referral is being created\n The type of referral\n The status of the referral\n The method of transfer\n The reason for the referral\n Reference ID of the supporting document \n Notes applicable for an officer processing the referral\n Reference ID of the scanned\/digitised documents \nThis service will record the referral details, generate its unique identifier (referral request ID) and link it to the given visa application ID.\nA consumer of this service receives either:\n Unique Identifier of the referral and its status\n\nOr\n An Enterprise Error detailing why create was unsuccessful.\n\n## Service Variants\nThis service has no service variants.\n\n## Service Dependencies\nThis service relies on the consumer already having a unique identifier of a Visa Application as a Visa Application Id.\n\n## Service Composition\nThere is no Composition call.\n\n## Service Flow\nThe following service flow describes a successful execution path.\n1. The Consumer invokes the service on ESB.\n2. Consumer provides ICSE ClientId to call ICSE otherwise Service throw Exception.\n3. ESB validate request data.\n4. ESB invokes service provider ICSE for Create Visa Application Referral.\n5. ICSE returns the Referral Request Id and sequence number of the newly created Visa Application referral to ESB. \n6. ESB transforms ICSE response into CreateVisaApplicationReferralResponse. \n7. ESB returns CreateVisaApplicationReferralResponse to Consumer.\n\n1.1.1 Alternate Flow 1\nThe following alternate service flow depicts the execution path that takes place when the primary provider (ICSE) raises an error.\n1. The Consumer invokes the service on ESB.\n2. ESB validate request data.\n3. Consumer provides ICSE ClientId to call ICSE otherwise Service throw Exception.\n4. ESB invokes service provider ICSE for Create Visa Application Referral.\n5. ICSE returns response to ESB. \n6. ESB detects that ICSE has returned an error.\n7. ESB transforms ICSE error into Enterprise Error Message.\n8. ESB returns response with Enterprise Error payload to Consumer.\n\n1.1.2 Alternate Flow 3\nThe following alternate service flow depicts the execution path that takes place when ESB data validation fails.\n1. The Consumer invokes the service on ESB.\n2. ESB validate request data.\n3. ESB found some data not as expected or not match.\n4. ESB transforms the validation error into Enterprise Error Message.\n5. ESB returns response with Enterprise Error payload to Consumer.\n\n\nThe following tables are to be used by ESB to validate the data of consumer request for: Referral Reason, Referral Types, and Referral Method of Transfer. \n\n\nReferral Reason Types \n Agent \n Allegation \n Approved a\/n not travelled \n Arrange travel \n Biometrics \n Bona Fides \n Business Background \n Business Sponsorship \n Character \n Counselling \n Dependents \n Education Level \n Employer \n Employment history \n English Proficiency \n Evidence visa \n Family Members \n Financial \n Health - permanent \n Health - temporary \n Health - Form Issue \n Health - Non-migrating Child \n Identity \n Interview \n Liaise medicals \n Military History \n Other \n Over 69 - Fit for Travel \n Pre-Assessment Referral \n Process in IRIS \n Processing Office Profile Match \n Proposer \n Qualification Pre-assessment \n Qualifications \n Refusal\/Cancellation \n Relationship \n Safeguards Match \n Sponsor \n Training Capacity \n Travel Document Check \n War Crimes\/Crimes Against Humanity Concerns \n War Crimes\/Crimes Against Humanity Profile Match \n\nReferral Types \n Approved a\/n not travelled \n Biometrics \n Camp Visit \n Case Transfer \n Character Check \n Counselling \n Health Check \n Identity Check \n Integrity Check \n Interview \n Proposer Check \n Resubmit \n Stream 1 - Visa Evidencing \n Stream 1(b) - Health Check A \n Stream 1(c) - Simple Check \n Stream 2 - Integrity Check \n Stream 2(a) - Initiate Character Check \n Stream 2(b) - Onshore site visit \n Stream 2(c) - Site Visit \n Stream 2(d) - Support for PBSPC \n Stream 2(e) - Health Check B \n Stream 3 - Full Transfer of Unfinalised Case \n Stream 4 - Quality Control Check \nReferral Method of Transfer \n Client To Provide \n Courier \n Diplomatic Bag \n E-mail \n Electronic Attachment \n Fax \n Identity Services \n Mail \n None \n Other \n Registered Mail \n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV041-RetrievePersonVisaHistory\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThe Retrieve Person Visa History service is to be used to retrieve specific information pertaining to a Person. GVP will be the initial consumer of this Service in a SfP11 timeframe, and is available for consumption by additional consumers within DIAC.\n\n## Service Behaviour\nThe Response Visa History details provided in this service include attributes within the business object:\n Visa\n Travel Document\n Associated Evidence\n Associated Name\n\nThe service uses TRIPS as the primary source of Visa Grants, however is supplemented by ICSE for the VisaConditionCodes in the event that TRIPS does not hold the complete set of VisaConditionCode information (applicable to those Visas created pre: SfP11)\n\nThis service is designed to be called for a Person where details regarding Visa History are required. The request filter enables the service to limit the Response based on Visas within a specific time period or the last in effect Visa for the Person. This service supplements the summary view provided in SV277 and SV278. In all cases, the maximum number of Visas returned will be 60. \n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThis service is a non composite service when a PID is provided within the Service Request.\nThis service is a composite service, i.e. composed of other services within the Service Portfolio, when an alternate Party Identifier is provided by the consumer. In this event, this service engages Sv288 Retrieve Consolidated Party Identifiers to retrieve the required PID for the request call to TRIPS.\n\n## Service Flow\n1. An event is generated by the Service Consumer which invokes the Retrieve Person Visa History service on the ESB;\na) If GVP provides the PID, the ESB will pass the PID direct to TRIPS \nb) If GVP provides the alternate Party Identifiers, e.g. CID , CDH_PARTY_ID, the ESB engages Sv288 Retrieve Consolidated Party Identifiers to retrieve the applicable PID.\n2. ESB transforms the eXML to Flat File taking only the following from the eXML payload:\n PartyIdentifier - If only this parameter is present all visas, up to a maximum of 60, will be returned in reverse chronological sequence. Visas with all statuses will be returned.\nIf applicable, the following RequestFilter will be invoked:\n Option 1: \nStartDate - If this parameter is present by the user, TRIPS will return all visas for the person with a granted date greater than or equal to 'Date from' in reverse chronological sequence up to a maximum of 60 visas. Visas with all statuses will be returned.\nEndDate - present date \n\n Option 2: LastInEffectVisaFlag - \n1. TRIPS Retrieve Visa API is invoked passing in the PartyIdentifier.\n2. TRIPS Retrieve Visa API replies with a Flat File.\n3. ESB transforms the Flat File to eXML and supplements the eXML with Descriptions from the TRIPS codes supplied. These will be both lookups and a hardcoded set of values.\n4. ESB Replies to the consumer with the eXML message RetrievePersonVisaHistoryResponse.xml. \n\n1.1.1 Alternate Flow 1 (AF1) \nAlternate Flow 1 (AF1): RetrieveVisaSystemOfRecordFlag false. \nWhere TRIPS is the system of record for the complete set of Visa Conditions, the Visa conditions will be retrieved from TRIPS. In the cases that TRIPS does not hold the complete set of Visa Conditions, ICSE will be invoked to retrieve mandatory condition codes.\nThe following alternate service flow depicts the execution path that takes place when the PartyIdentifier retrieves a Visa that is an ICSE supplemented Visa. \n1. An event is generated by the Service Consumer which invokes the Retrieve Person Visa History service on the ESB;\n2. ESB transforms the eXML to Flat File taking only the PersonalIdentifier from the eXML payload.\n3. TRIPS Retrieve Visa API is invoked passing in the PersonalIdentifier.\n4. TRIPS Retrieve Visa API replies with a Flat File.\n5. ESB transforms the Flat File to eXML and supplements the eXML with Descriptions from the TRIPS codes supplied. These will be both lookups and a hardcoded set of values.\n6. ESB inspects each Visa Grant Number from the TRIPS Response message\n If the RetrieveVisaSystemOfRecordFlag indicates false, AND if the VisaCriteriaSatisfiedCode is P or S, the system shall invoke ICSE as per item 7 & 8 below.\n7. ESB creates an ICSE request message RetrieveMandConditionsRequest.xml using multiple Visa Grant Number, VisaCriteriaSatisfiedCode, LodgementLocationType, VisaStatisticalCode, GrantDate, VisaClassCode, VisaSubClassCode, and User ID as inputs. \n8. In the event that there exists multiple Visas, the ESB will include the multiple visa details (Visa Grant Number, VisaCriteriaSatisfiedCode, LodgementLocationType, VisaStatisticalCode, GrantDate, VisaClassCode, VisaSubClassCode, and User ID), maximum of 60, within the one RetrieveMandConditionsRequest.xml. \n9. ICSE Response message RetrieveMandConditionsResponse.xml is passed back to the ESB. The Response message will include the VisaGrantNumber and MandatoryConditionCode per one Visa. \n(1) RetrieveMandConditionsResponse.xml will not include any VisaGrantNumber when a MandatoryConditionCode does not exist.\n(2) In the event that the data provided to ICSE within the RetrieveMandConditionsRequest.xml (Visa Grant Number, VisaCriteriaSatisfiedCode, LodgementLocationType, VisaStatisticalCode, GrantDate, VisaClassCode, VisaSubClassCode, and User ID) does not match the information stored in ICSE, ICSE will produce an error in the RetrieveMandConditionsResponse.xml advising the VisaGrantNumber and the applicable error. Note: This will result in a warning from ESB, however the service will not fail.\n\n10. In the event that multiple Visa details exist, ICSE will return the VisaGrantNumber and MandatoryConditionCode (or error message if applicable), per one Visa \n11. ESB matches the MandatoryConditionCode with the VisaGrantNumber and supplements the TRIPS response with these codes merging all data. \n12. ESB Replies to the consumer with the eXML message RetrievePersonVisaHistoryResponse.xml, to a maximum of 60, will be returned.\n\n1.1.2 Alternate Flow 3 (AF3) \n\nThe following alternate service flow depicts the execution path that takes place when the TRIPS request fails. \n1. An event is generated by the Service Consumer which invokes the Retrieve Person Visa History service on the ESB;\n2. ESB transforms the eXML to Flat File taking only the PersonalIdentifier from the eXML payload.\n3. TRIPS Retrieve Visa API is invoked passing in the PersonalIdentifier.\n4. TRIPS Retrieve Visa API replies with a Flat File as an error code.\n5. ESB inspects the error, maps if able and returns an ESB SOAP Fault to the consumer with the error code and description. \n1.1.3 Alternate Flow 4 (AF4) \nThe following alternate service flow depicts the execution path that takes place when the ICSE request fails. \n1. An event is generated by the Service Consumer which invokes the Retrieve Person Visa History service on the ESB;\n2. ESB transforms the eXML to Flat File taking only the PersonalIdentifier from the eXML payload.\n3. TRIPS Retrieve Visa API is invoked passing in the PersonalIdentifier.\n4. TRIPS Retrieve Visa API replies with a Flat File.\n5. ESB transforms the Flat File to eXML and supplements the eXML with Descriptions from the TRIPS codes supplied. These will be both lookups and a hardcoded set of values.\n6. ESB inspects the Visa Grant Number from the TRIPS Response message\na. If the RetrieveVisaSystemOfRecordFlag indicates false, AND if the VisaCriteriaSatisfiedCode is P or S, the system shall invoke ICSE as per item 7 & 8 below.\n7. In the event that there exists multiple Visas, the ESB will include the multiple visa details (Visa Grant Number, VisaCriteriaSatisfiedCode, LodgementLocationType, VisaStatisticalCode, GrantDate, VisaClassCode, VisaSubClassCode, and User ID), maximum of 60 , within the one RetrieveMandConditionsRequest.xml. \n8. ICSE Response message RetrieveMandConditionsResponse.xml is passed back to the ESB. The Response message will include the VisaGrantNumber and MandatoryConditionCode per one Visa. \n9. RetrieveMandConditionsResponse.xml will not include any VisaGrantNumber when a MandatoryConditionCode does not exist.\n10. In the event that the data provided to ICSE within the RetrieveMandConditionsRequest.xml (Visa Grant Number, VisaCriteriaSatisfiedCode, LodgementLocationType, VisaStatisticalCode, GrantDate, VisaClassCode, VisaSubClassCode, and User ID) does not match the information stored in ICSE, ICSE will produce an error in the RetrieveMandConditionsResponse.xml advising the VisaGrantNumber and the applicable error. \n11. In the event that there is a security error, the ICSE Response message RetrieveMandConditionsResponse.xml is passed back to the ESB displaying the appropriate code e.g. 10021, 10002, 10004\n12. In the event that the data provided to ICSE within the RetrieveMandConditionsRequest.xml (Visa Grant Number, VisaCriteriaSatisfiedCode, LodgementLocationType, VisaStatisticalCode, GrantDate, VisaClassCode, VisaSubClassCode, and User ID) does not match the information stored in ICSE, ICSE will produce an error in the RetrieveMandConditionsResponse.xml advising the VisaGrantNumber and the applicable error. Note: This will result in a warning from ESB, however the service will not fail.\n13. ESB inspects the error, maps if able and returns an ESB SOAP Fault to the consumer with the error code and description. \n\n## Service State Management Decisions\nRetrieveVisaSystemOfRecordFlag is true, indicates that TRIPS is the source of record for all Visa Conditions. \nRetrieveVisaSystemOfRecordFlag is false, indicates that TRIPS is not the source of record for all Visa Conditions, and therefore ICSE will be invoked to retrieve mandatory conditions applicable to that Visa.\n\n"},{"filename":"Visa\/Services\/SV052-RetrieveVisaApplicationReferral\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows a consumer to retrieve all visa application referrals details, as specified by the Visa Application ID, all the referrals included within it and notes history summaries.\nThis service also allows a consumer to retrieve a specific visa application referrals details, as specified by the Visa Application ID and Referral Id, and notes history details.\nThe execution of this service is a step that is likely to occur when a consumer wants to view the referrals information pertaining to a visa application.\n\n## Service Behaviour\nA consumer of this service provides:\n Unique identifier of the visa application and, optionally, a unique identifier of the referral\nA consumer of this service receives either:\n Data consisting of a subset of information from the following CDM Subject Areas:\no Party\no Referral\no Note\n\nOr\n An Enterprise Error detailing why the retrieve was unsuccessful.\n\n## Service Variants\nThis service has no service variants.\n\n## Service Dependencies\nThis service relies on the consumer already having a unique identifier of a Visa Application as a Visa Application Id. The service also relies on the consumer providing the unique identifier of the referral when required for retrieving notes history details\n## Service Composition\nThis service is a composite service. It is composed of service SV176 (Transform Identifier) within the Service Portfolio.\n\n## Service Flow\nThe following service flow describes a successful execution path.\nService Consumer invokes service on ESB.\nESB transforms RetrieveVisaApplicationReferralRequest into ICSE XML and sends it to ICSE.\nICSE executes CICS transaction and returns ICSE XML to ESB. \nESB transforms ICSE XML into RetrieveVisaApplicationReferralResponse. (Enterprise Acknowledgement)\nESB check RetrieveVisaApplicationReferralResponse for the returned clientId(s) -then call SV176 (Transform Identifier) to retrieve the partyId(s) for this given clientId(s) and use the partyId(s) in the response.\nESB returns RetrieveVisaApplicationReferralResponse to Consumer.\n\n1.1.1 Alternate Flow 1\nThe following alternate service flow depicts the execution path that takes place when the primary provider (ICSE) raises an error.\n1. Service Consumer invokes service on ESB.\n2. ESB transforms RetrieveVisaApplicationReferralRequest into ICSE XML and invokes service provider ICSE.\n3. ICSE executes CICS transaction and returns ICSE XML to ESB. \n4. ESB detects that ICSE has returned an error and constructs corresponding SOAP fault segment.\n5. ESB transforms ICSE Error into Enterprise Error Message.\n6. ESB returns response with Enterprise Error payload.\n\n1.1.2 Alternate Flow 2\nThe following alternate service flow depicts the execution path that takes place when the service SV176 raises an error.\n1. Service Consumer invokes service on ESB.\n2. ESB transforms RetrieveVisaApplicationReferralRequest into ICSE XML and sends it to ICSE.\n3. ICSE executes CICS transaction and returns ICSE XML to ESB. \n4. ESB transforms ICSE XML into RetrieveVisaApplicationReferralResponse. (Enterprise Acknowledgement)\n5. ESB check RetrieveVisaApplicationReferralResponse for the returned clientId -then call SV176 (Transform Identifier) to retrieve the partyId for this given clientId.\n6. ESB detects that SV176 has returned an error and constructs corresponding SOAP fault segment.\n7. ESB transforms SV176 Error into Enterprise Error Message.\n8. ESB returns response with Enterprise Error payload.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV113-NotifyBusinessTravelCardApplication\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to lodge an APEC BusinessTravel Card application, and also to update an applicants passport which is associated with the travel card.\n## Service Behaviour\nPriorityEconomyICAOCode is 1 to many, but only up to five economies can be selected.\n## Transformation\nThe ESB transforms the NotifyBusinessTravelCardApplicationRequest.xsd message differently, depending on the request payload.\n\nIf the request is for an application creation (NotifyABTCCreate element exists), the message is transformed into a CreateApplicationExtendedRequest.xsd ABTC provider message.\n\nIf the request is for a passport update (NotifyABTCUpdatePassport element exists), the message is transformed into a UpdatePassportRequest.xsd ABTC provider message.\n"},{"filename":"Visa\/Services\/SV120-RetrieveApplicantFormDetailsBusinessTravelCard\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve various details from the application form lodged to obtain an Australian Business Travel Card. Various information that can be returned includes License information (Firearms and\/or Drivers), Bio details and Address information.\n## Service Behaviour\nThis service will retrieve information from the form created in SV113. This service will interact with ABTC using the Transaction Reference Number supplied in SV113. This is a synchronis service.\n"},{"filename":"Visa\/Services\/SV142-RetrieveReceipt\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service would bring all the receipt and payment related details for a selected receipt. \nNote:\n This service doesnt search for any payment made for e-Visa related application.\n\n## Service Behaviour\nThe consumer of this service would provide receipt number which needs to be sent to provider system.\nIn a successful operation, the consumer will receive receipt details and payment details related to the receipt.\n\n## Service Variants\nNone\n## Service Dependencies\nICSE\n## Service Composition\nThis service is not a composite service.\n\n## Service Flow\n1. An event is generated by the Service Consumer which invokes the RetrieveReceipt service on the ESB.\n2. ESB sends RetrieveReceiptRequest to ICSE.\n3. ICSE returns RetrieveReceiptResponse to ESB.\n4. Use AF2 if ICSE request is timeout.\n5. ESB examines the Response Messages within RetrieveReceiptResponse to determine whether there is any error returned by ICSE, if so, use AF1.\n6. ESB returns list of payment receipts or error message to Service Consumer.\n\n1.1.1.1 Alternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider (ICSE) raises an error.\n1. ESB transforms ICSE Error into Enterprise Error Message.\n2. ESB returns response with Enterprise Error payload.\n\nPotential Response Message Labels\n SV142.MSG-E01 - User does not have permission to Retrieve Receipt Details\n1.1.1.2 Alternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV142.MSG-E02 to the consumer.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV145-CreateReceiptAssociation\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service would be used for linking of a payment with a visa application.\nThe officer links the ReceiptId with\/from a VisaApplicationId\nOn successful linking of payment, service would return a success message.\n\n## Service Behaviour\nThe consumer of this service would provide data which needs to be sent to provider system.\nIn a successful operation, the consumer will receive a success message.\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThis service is not a composite service.\n\n## Service Flow\n1. An event is generated by the Service Consumer which invokes the CreateReceiptAssociation service on the ESB.\n2. ESB sends LinkPaymentRequest to ICSE. The ESB would be sending the request to link the payment to ICSE. See SV145 Micro design for specifics.\n3. ICSE returns LinkPaymentResponse to ESB.\n4. Use AF2 if ICSE request is timeout.\n5. ESB examines the Response Messages from LinkPaymentResponse to determine whether there is any error returned by ICSE, if so, use AF1.\n6. ESB returns a Link ID to the Consumer.\n\n1.1.1.1 Alternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider (ICSE) raises an error.\n1. ESB transforms ICSE Error into Enterprise Error Message.\n2. ESB returns response with Enterprise Error payload.\n\n1.1.1.2 Alternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV145.MSG-E02 to the consumer.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV164-PoolVisaApplication\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is to set the status of the Visa Application to 'pooled'.\n\n"},{"filename":"Visa\/Services\/SV172-ModifyVisaApplicationReferral\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used by the consumer to modify an earlier created referral for a specific applicant in a visa application.\n\nModifications include:\n Adding Notes\n Changing the Status of a Referral\n Ceasing\/Completing Referrals\n Re-Requesting information or providing a further response to clarify\n\n## Service Behaviour\nThe consumer of this service will provide:\n Referral Request ID\n Sequence Number\nTo identify the referral to be modified and the changed referral data (the Delta). \nThis service will update the referral details.\nA consumer of this service receives either:\n Success Message\nOr\n An Enterprise Error detailing why modify was unsuccessful.\n\n## Service Variants\nThis service has no service variants.\n\n## Service Dependencies\nThis service relies on the consumer already having a unique identifier of a Visa Application as a Visa Application Id and a referral have been created.\n\n## Service Composition\n\n\n## Service Flow\nThe following service flow describes a successful execution path.\n1. The Consumer invokes the service on ESB.\n2. Consumer provides ICSE ClientId to call ICSE otherwise Service throw Exception.\n3. ESB invokes service provider ICSE for Modify Visa Application Referral.\n4. ICSE returns success message to ESB. \n5. ESB transforms ICSE response into ModifyVisaApplicationReferralResponse. \n6. ESB returns ModifyVisaApplicationReferralResponse to Consumer.\n\n1.1.1 Alternate Flow 1\nThe following alternate service flow depicts the execution path that takes place when the primary provider (ICSE) raises an error.\n1. The Consumer invokes the service on ESB.\n2. Consumer provides ICSE ClientId to call ICSE otherwise Service throw Exception.\n3. ESB invokes service provider ICSE for Modify Visa Application Referral.\n4. ICSE returns response to ESB. \n5. ESB detects that ICSE has returned an error or failure message.\n6. ESB transforms ICSE error into Enterprise Error Message.\n7. ESB returns response with Enterprise Error payload to Consumer.\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV199-RetrieveNoteDetails\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve details of a specific Note returned from the current data model in ICSE which indicates that notes are stored as events and as additional info items in ICSE. The notes subset to be retrieved have been agreed on by GSM and ICSE as appropriate for this service. This service may be consumed at any time. The only requirements are that the note id is passed to this service. The note Id is a compound key based upon the ICSE\/GSM concept that a unique note can be chosen by a combination ICSE Key fields which will be expressed as a single hyphen delimited string in the service and when exposed to GSM. However, when used to interface with ICSE services it will be expressed in its individual key components.\n\n\n\n\n\n\n\n## Service Behaviour\nThis service provides the following behaviour:\nA consumer of this service provides:\nNote Id\nA consumer of this service receives:\nNote Details which consist of\nNote Text\n\nThe following notes types are returned in this service.\nEvent Notes\nAssessment Notes\nPermission Request Additional Info Notes\nAny Audit information that is associated with the Activity and its associated activity notes. \n\n\n\n\n\n\n\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n\n## Service Composition\nThis is not a composite service.\n\n\n## Service Flow\nA normal flow for this service is to have the SV199 Retrieve Note Details Request called by the portal. SV199- Retrieve Note Details then calls the ICSE corresponding Retrieve Note Service. ICSE will then execute the Retrieve Note Details request and return a response message back to SV 199. This in turn is returned to the consumer.\nSV199 has a Note Id key that is a compound key. \nThe key definition is located in the SV199 micro document.\nThe detail of this flow is as follows:\nService consumer invokes service SV199 on ESB using RetrieveNoteDetailsRequest.\nService SV199 then breaks up the noteId into the previously mentioned ICSE keys and creates an ICSE Request message.\nService SV199 invokes ICSE sending a request message.\nICSE receives the request and processes the Retrieve Note Details Request.\nICSE then sends a message back to service SV199.\nService SV199 sends a response message to the consumer.\nAlternate Flow 1\nThe following alternate service flow depicts the execution path that takes place when SV199 returns an error.\nService consumer invokes service SV199 on ESB using RetrieveNoteDetailsRequest.\nService SV199 then breaks up the noteId into the previously mentioned ICSE keys and creates an ICSE Request message.\nService SV199 invokes ICSE sending a request message.\nICSE receives the request and encounters an error.\nICSE then sends an error message back to service SV199.\nSV199 detects the error and transforms ICSE Error into Enterprise Error\nSV199 passes a response with this Enterprise Error to the consumer.\n\n\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV231-SearchReceipt\/V1.0\/XSD\/README.md","contents":"## Service Usage\nImmigration officers perform searches for payment details or report on the number of payments processed for a particular visa application. This service would be called to search the receipts based on some input criteria.\nNote:\nThis service doesnt search for any payment made for e-Visa related application.\n\n\n\n\n\n\n## Service Behaviour\nThe consumer of this service would provide input criteria for receipt search which needs to be sent to provider system.\nIn a successful operation, the consumer will receive a list of receipts meeting the search criteria.\nIf the service is failed, the consumer will receive one of the error message \n\n\n\n\n\n\n\n\n## Service Variants\nNone\n## Service Dependencies\nICSE\n\n## Service Composition\nThis is not a composite service.\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the SearchReceipt service on the ESB.\nESB sends SearchReceiptsRequest(ICSE XSD) (search criteria) to ICSE.\nICSE returns SearchReceiptsResponse(ICSE XSD) to ESB.\nESB examines the Response Messages within SearchReceiptsResponse to determine whether there is any error returned by ICSE, if so, use AF1.\nESB returns list of payment receipts or error message to Service Consumer.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider (ICSE) raises an error.\nESB transforms ICSE Error into Enterprise Error Message.\nESB returns response with Soap fault.\nPotential Response Message Labels\nSV231.MSG-E01 User does not have permission to search receipts\n\n\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV269-DeleteReceiptAssociation\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service would be used for unlinking of a payment with a visa application.\nThe officer unlinks the ReceiptId with\/from a VisaApplicationId\nOn successful unlinking of payment, service would return a success message.\n\n\n\n\n\n## Service Behaviour\nThe consumer of this service would provide data which needs to be sent to provider system.\nIn a successful operation, the consumer will receive a success message.\nIf the service is failed, the consumer will receive one of the error message\n\n\n\n\n\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n\n\n## Service Composition\nThis is not a composite service.\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the DeleteReceiptAssociation service on the ESB.\nESB sends ApplicationMaintinenceRequest to ICSE. The ESB would be sending the request to link or unlink the payment to ICSE. See SV269 Micro design for specifics.\nICSE returns ApplicationMaintinenceResponse to ESB.\nUse AF2 if ICSE request is timeout.\nESB examines the Response Messages from ApplicationMaintenenceResponse to determine whether there is any error returned by ICSE, if so, use AF1.\nESB returns an enterprise acknowledgement message to Service Consumer.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider (ICSE) raises an error.\nESB transforms ICSE Error into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV269.MSG-E02 to the consumer.\n\n\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV280-RetrieveApplicationNotes\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve notes related to a visa application. This includes only, notes on events and assessments.\n\n\n\n\n## Service Behaviour\nThe service retrieves all events and assessment notes related to a visa application. A consumer of this service sends a request message which contains Visa Application Id, unique identifier of a visa application.\nIf the service fails and an error message will be returned detailing the reason(s) why the notes related to the visa application could not be retrieved. \nOn the other hand, if the service succeeds, it will retrieve all the event and assessment notes related to the application identified by the unique identifier, visa application id supplied.\n\n\n\n\n\n\n## Service Variants\nNone\n## Service Dependencies\nThis service relies on the consumer providing a unique identifier of a Visa Application.\n\n\n## Service Composition\nThis is not a composite service.\n\n\n## Service Flow\nA normal flow for this service is to have the SV280 Retrieve Application Notes request called by the portal. SV280 Retrieve Application Notes will then send the request to ICSE. ICSE will then execute the Retrieve Application Notes request and return a response message back to SV 280. This in turn is returned to the consumer.\nThe detail of this flow is as follows:\nService consumer invokes service SV280 on ESB using RetrieveApplicationNotesRequest.\nSV280 creates ICSE request message, RetrieveConsolidatedNotesRequest. \nService SV280 invokes ICSE sending the request message.\nICSE receives the request and processes the Retrieve Application Notes Request.\nICSE then sends message, RetrieveConsolidatedNotesResponse back to service SV280.\nService SV280 sends a response message to the consumer.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when ICSE returns an error.\nService consumer invokes service SV280 on ESB using RetrieveApplicationNotesRequest.\nSV280 creates ICSE request message, RetrieveConsolidatedNotesRequest. \nService SV280 invokes ICSE sending the request message.\nICSE receives the request and encounters an error.\nICSE then sends an error message back to service SV280.\nSV280 detects the error and transforms ICSE Error into Enterprise Error\nSV280 passes a response with this Enterprise Error to the consumer.\nAlternate Flow 2 (AF2)\nThe following alternate service flow depicts the execution path when service timeout takes place.\nRefer to document Service Timeouts.xls.\n\n\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV281-RetrieveConfirmationOfEnrolmentDetails\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve metadata about the confirmation of enrolment (COE) data associated with a Visa.\nThis service accepts a list of COE Ids (retrieved via SV278) and retrieves the associated Visa COE metadata from ICSE.\n\n\n\n## Service Behaviour\nA consumer invokes the service by providing COE Ids.\n\n\n\n\n\n## Service Variants\nNone\n## Service Dependencies\nThis service does not perform any enforcing actions like schema validation, but only passes the request message to ICSE.\n\n\n## Service Composition\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the RetrieveConfirmationOfEnrolmentDetails service on the ESB.\nESB transforms RetrieveConfirmationOfEnrolmentDetailsReqeust message to RetrieveCOEDetailsRequest message and sends to ICSE. \nUse AF1 if ICSE request is timeout.\nICSE returns RetrieveCOEDetailsResponse with COE details or Error message to ESB.\nESB examines the Response Messages within RetrieveCOEDetailsResponse to determine whether there is any error returned by ICSE, if so, use AF2.\nESB transforms RetrieveCOEDetailsResponse message to RetrieveConfirmationOfEnrolmentDetailsResponse message.\nFinally ESB returns RetrieveConfirmationOfEnrolmentDetailsResponse with COE details or error message to Service Consumer.\nAlternate Flow 1 (AF1)\nIf the service call was timeout, ESB should return SV281.MSG-E02 to the consumer.\nAlternate Flow 2 (AF2)\nThe following alternate service flow depicts the execution path that takes place when the primary provider (ICSE) raises an error.\nESB transforms ICSE Error into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\n\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV307-VerifyPersonVisaStatusSummary\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to verify that the person holds a Visa Grant of a certain class\/sub class or is currently considered to be an australian cisitzen.\n"},{"filename":"Visa\/Services\/SV329-ModifyVisaStatus\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis Service is invoked when VPO wants to perform below operations\nCancellation of visa \nUndo Cancellation\nRevoke Cancellation \nundo set-aside or revoke or Reinstatement of visa (Reactivate Visa)\nWithdraw\nUndo Withdraw\nRefuse Visa\nUndo Refuse Visa\nInvalid Visa\nUndo Invalid Visa\nIncorrect Grant of Visa\nAfter operation is performed in TRIPS, TRIPS will then recalculate the Person's Lawful status.\n\n\n## Service Behaviour\nThe consumer triggers this service with the decision type and the details that are required to call TRIPS. ESB performs transformation into TRIPS request which is a flat file and routes to TRIPS. Response from TRIPS which is a flat file is transformed into XML and returned to Consumer.\n\n\n\n\n## Service Variants\nNone\n## Service Dependencies\nThis service does not perform any enforcing actions like schema validation, but only passes the request message to ICSE.\n\n\n## Service Composition\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Modify Visa Status service on the ESB;\nESB Validate the request message sent by the consumer\nwhen Consumer request having clientId, call to SV288 is made to transform ClientId to PersonId\nESB transforms the consumer request into TRIPS request which is a flat file and sends to TRIPS\nTRIPS returns response to the ESB\nESB transforms the TRIPS response to Consumer response and returns to consumer.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms Provider Error returned by TRIPS into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV329.MSG- E07 to the consumer.\nAlternate Flow 3 (AF3)\nThe following alternate flow depicts the execution path that takes when call to SV288 fails.\nESB sends request to CDH thru SV288 to transform ClientId to PersonId.\nSV288 service returns an exception in soap-xml.\nESB returns this exception to Consumer.\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV330-MaintainPermissionRequest\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service is generic in nature and therefore support various different uses. \nGVP SfP10\nThe main purpose for GVP to use this service is to create a skeleton record of a Visa application in ICSE.\nThis service will expose the ICSE API directly in order to give GVP most flexibility.\n\n\n## Service Behaviour\nThe ESB exposes the genuine ICSE structure wrapped in a generic envelope. The ESB will use its framework for handling of the security tokens but it will not perform any data validation, data mapping or transformation of ICSE codes. \nThis service can be used to any kind of permission request.\nThe ESB will extract any error messages it receives from the provider (ICSE) and relay them using the normal exception handling procedure.\n\n\n\n## Service Variants\nNone\n## Service Dependencies\nThis service does not perform any enforcing actions like schema validation, but only passes the request message to ICSE.\n\n\n## Service Composition\nThis service is not a composite service i.e. it is not composed of other services within the Service Portfolio.\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Maintain Permission Request service on the ESB\nThe ESB receives the request message which contains as actual payload a request message in genuine ICSE data format. The ESB unwraps the request message (transformation from MaintainPermissionRequestRequest into BusinessTransactionRequest) and passes it through to ICSE. \nICSE receives the request message and performs the requested operations.\nESB receives a response\nUse AF1\/AF2, if invocation failed.\nESB wraps the response (transformation from BusinessTransactionResponse into MaintainPermissionRequestResponse) and sends it to the service consumer\nAlternate Flow 1 (AF1)\nESB transforms errors into enterprise error message and returns to the consumer. Please see the section Service Enterprise Return Code Message for more details.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV330.MSG-to the consumer.\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV331-RetrievePermissionRequest\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service is generic in nature and therefore support various different uses. \nGVP SfP10\nAs per Mini Macro SfP10 \/1\/ GVP will implement the functionality to cancel visas but will not support the associated review process. In case a review needs to be conducted the VPO still has to use ICSE. \nThis concept makes it necessary that GVP has the possibility to retrieve cancellation events from ICSE. This functionality will be implemented by this new transitional service. To give the consumer the most flexibility this service will expose the ICSE API directly.\nIn SfP10 this service will enable GVP to retrieve Cancellation Permission Requests including the following Cancellation Events:\nCancellation Commenced\nCancellation - Not Revoked\nCancellation - Revocation of Cancellation\nCancellation - Visa Not Cancelled\nCancelled\nThis functionality will be provided by ESB using a generic ICSE API.\n\n## Service Behaviour\nThe ESB exposes the genuine ICSE structure wrapped in a generic envelope. The ESB will use its framework for handling of the security tokens but it will not perform any data validation, data mapping or transformation of ICSE codes. \nhis service can be used to retrieve any kind of permission request.\nThe ESB will extract any error messages it receives from the provider (ICSE) and relay them using the normal exception handling procedure.\n\n\n## Service Variants\nNone\n## Service Dependencies\nThis service does not perform any enforcing actions like schema validation, but only passes the request message to ICSE and passes response messages from ICSE to the consumer.\n\n## Service Composition\nThis service is not a composite service, i.e. it is not composed of other services within the Service Portfolio.\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Retrieve Permission Request service on the ESB\nThe ESB receives the request message which contains as actual payload a request message in genuine ICSE data format. The ESB unwraps the request message (transformation from RetrievePermissionRequestRequest into RetrieveApplicationRequest) and passes it through to ICSE. \nICSE receives the request message and performs the requested operations.\nESB receives a response\nUse AF1\/AF2, if invocation failed.\nESB wraps the response (transformation from RetrieveApplicationResponse into RetrievePermissionRequestResponse) and sends it to the service consumer\nAlternate Flow 1 (AF1)\nESB transforms errors into enterprise error message and returns to the consumer. Please see the section Service Enterprise Return Code Message for more details.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV331.MSG-E0 to the consumer.\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV332-RetrieveVisa\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThe Retrieve Visa service is to be used to retrieve specific information pertaining to a Visa Grant Number. \n\n## Service Behaviour\nThe Retrieves Visa details provided in this service include attributes within the business object:\nVisa\nTravel Document\nAssociated Evidence\nAssociated Name\nThe service uses TRIPS as the primary source of Visa Grants but is supplemented by ICSE for the VisaConditionCodes. \nThis service is designed to be called for each Visa where details regarding that Visa are required. This is usually (but not limited to) the current Visas for a person.\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n## Service Composition\nThis service is not a composite service, i.e. it is not composed of other services within the Service Portfolio.\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Retrieve Visa service on the ESB;\nESB transforms the eXML to Flat File taking only the Visa Grant Number from the eXML payload.\nTRIPS Retrieve Visa API is invoked passing in the Visa Grant Number.\nTRIPS Retrieve Visa API replies with a Flat File.\nESB transforms the Flat File to eXML and supplements the eXML with Descriptions from the TRIPS codes supplied. These will be both lookups and a hardcoded set of values.\nESB Replies to the consumer with the eXML message RetrieveVisaResponse.xml. \nAlternate Flow 1 (AF1) RetrieveVisaSystemOfRecordFlag false. \nWhere TRIPS is the system of record for the complete set of Visa Conditions, the Visa conditions will be retrieved from TRIPS. In the cases that TRIPS does not hold the complete set of Visa Conditions, ICSE will be invoked to retrieve mandatory condition codes.\nThe following alternate service flow depicts the execution path that takes place when the Visa Grant Numkber retrieves a Visa that is an ICSE supplemented Visa. \nAn event is generated by the Service Consumer which invokes the Retrieve Visa service on the ESB;\nESB transforms the eXML to Flat File taking only the Visa Grant Number from the eXML payload.\nTRIPS Retrieve Visa API is invoked passing in the Visa Grant Number.\nTRIPS Retrieve Visa API replies with a Flat File.\nESB transforms the Flat File to eXML and supplements the eXML with Descriptions from the TRIPS codes supplied. These will be both lookups and a hardcoded set of values.\nESB inspects each Visa Grant Number from the TRIPS Response message\nIf the RetrieveVisaSystemOfRecordFlag indicates false, the system shall invoke ICSE as per item 7 & 8 below.\nESB creates an ICSE request message RetrieveMandConditionsRequest.xml using Visa Grant Number, VisaCriteriaSatisfiedCode, LodgementLocationType, VisaStatisticalCode, GrantDate, VisaClassCode, VisaSubClassCode, and User ID as inputs. \nICSE Response message RetrieveMandConditionsResponse.xml is passed back to the ESB. The Response message will include the VisaGrantNumber and MandatoryConditionCode.\nRetrieveMandConditionsResponse.xml will not include any VisaGrantNumber when a MandatoryConditionCode does not exist.\nIn the event that the data provided to ICSE within the RetrieveMandConditionsRequest.xml (Visa Grant Number, VisaCriteriaSatisfiedCode, LodgementLocationType, VisaStatisticalCode, GrantDate, VisaClassCode, VisaSubClassCode, and User ID) does not match the information stored in ICSE, ICSE will produce an error in the RetrieveMandConditionsResponse.xml advising the VisaGrantNumber and the applicable error. Note: This will result in a warning from ESB, however the service will not fail.\nESB matches the MandatoryConditionCode with the VisaGrantNumber and supplements the TRIPS response with these codes merging all data. \nESB Replies to the consumer with the eXML message RetrieveVisaResponse.xml.\nAlternate Flow 3 (AF3) \nThe following alternate service flow depicts the execution path that takes place when the TRIPS request fails. \nAn event is generated by the Service Consumer which invokes the Retrieve Visa service on the ESB;\nESB transforms the eXML to Flat File taking only the Visa Grant Number from the eXML payload.\nTRIPS Retrieve Visa API is invoked passing in the Visa Grant Number.\nTRIPS Retrieve Visa API replies with a Flat File as an error code.\nESB inspects the error, maps if able and returns an ESB SOAP Fault to the consumer with the error code and description. \nAlternate Flow 4 (AF4) \nThe following alternate service flow depicts the execution path that takes place when the ICSE request fails. \nAn event is generated by the Service Consumer which invokes the Retrieve Visa service on the ESB;\nESB transforms the eXML to Flat File taking only the Visa Grant Number from the eXML payload.\nTRIPS Retrieve Visa API is invoked passing in the Visa Grant Number.\nTRIPS Retrieve Visa API replies with a Flat File.\nESB transforms the Flat File to eXML and supplements the eXML with Descriptions from the TRIPS codes supplied. These will be both lookups and a hardcoded set of values.\nESB inspects the Visa Grant Number from the TRIPS Response message\nIf the RetrieveVisaSystemOfRecordFlag indicates false, the system shall invoke ICSE as per item 7 & 8 below.\nThe ESB will include the following visa details (Visa Grant Number, VisaCriteriaSatisfiedCode, LodgementLocationType, VisaStatisticalCode, GrantDate and User ID), within the one RetrieveMandConditionsRequest.xml. \nICSE Response message RetrieveMandConditionsResponse.xml is passed back to the ESB. The Response message will include the VisaGrantNumber and MandatoryConditionCode.\n9. RetrieveMandConditionsResponse.xml will not include any VisaGrantNumber when a MandatoryConditionCode does not exist.\n10. In the event that there is a security error, the ICSE Response message RetrieveMandConditionsResponse.xml is passed back to the ESB displaying the appropriate code e.g. 10021, 10002, 10004\n11. In the event that the data provided to ICSE within the RetrieveMandConditionsRequest.xml (Visa Grant Number, VisaCriteriaSatisfiedCode, LodgementLocationType, VisaStatisticalCode, GrantDate and User ID) does not match the information stored in ICSE, ICSE will produce an error in the RetrieveMandConditionsResponse.xml advising the VisaGrantNumber and the applicable error. Note: This will result in a warning from ESB, however the service will not fail.\n12. ESB inspects the error, maps if able and returns an ESB SOAP Fault to the consumer with the error code and description. \n\n"},{"filename":"Visa\/Services\/SV336-InitiateAPECVisaApplicationWithdrawal\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to withdraw non-finalised visa applications which have been pre-approved by a sponsoring APEC economy.\n## Transformation\nTransformation exists on the ESB between ICSE provider and enterprise xml messages.\n"},{"filename":"Visa\/Services\/SV337-InitiateApplicationVisasCancellation\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to initiate a cancellation request which has been submitted by a client with a valid visa. The cancellation request is in the context of a single visa application, and can be used to cancel one or more visas associated with it. When canceling the main visa applicant's visa, all dependents are also cancelled.\n## Service Behaviour\nThis is an asynchronous call back service. Any failures which have occured on the provider system while processing the cancellation request will result in a SOAP fault which is sent back to the consumer.\n"},{"filename":"Visa\/Services\/SV338-VerifyPersonLawfulness\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to calculate the lawfulness from a given date for a non-citizen to Australia.\n\n\n\n\n\n## Service Behaviour\nThe consumer of this service invokes this service with Person Id and date from which lawfulness of a person need to be calculated. The ESB service sends the request to TRIPS to calculate the lawfulness of this person and responds to the consumer with Lawful flag provide by the TRIPS as response. \nThe consumer must send the \"From Date\" for records which do not have movement records in TRIPS as it needs to invoke Visa Manager to retrieve further information. \n\n\n\n\n\n\n## Service Variants\nNone\n\n## Service Dependencies\nNone\n\n## Service Composition\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Verify Person Lawfulness service on the ESB;\nESB Validate the request message sent by the consumer\nwhen Consumer request having clientId, call to SV288 is made to transform ClientId to PersonId\nESB transforms the consumer request into TRIPS request which is a flat file and sends to TRIPS\nTRIPS returns response to the ESB\nESB transforms the TRIPS response to Consumer response and returns to consumer.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms Provider Error returned by TRIPS into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV338.MSG- E02 to the consumer.\nAlternate Flow 3 (AF3)\nThe following alternate flow depicts the execution path that takes when call to SV288 fails\nESB sends request to CDH thru SV288 to transform ClientId to PersonId.\nSV288 service returns an exception in soap-xml.\nESB returns this exception to Consumer\n\n\n\n\n\n\n\n## Transformation\nSee DIMA_DCD d15 Service Specification SV338 - v0.1 Verify Person Lawfulness (TRIPS).xls\n\n\n\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV351-StoreVisa\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis Service is used to load a visa into TRIPS. TRIPS processes the request to send back the applicant id (unique applicant identifier) together with success or failure message.\n\n\n\n\n## Service Behaviour\nThe consumer of this service provides the details that are required to call TRIPS. ESB performs transformation into TRIPS request which is a flat file and routes to TRIPS. Response from TRIPS which is a flat file is transformed into XML and returned to Consumer.\n\n\n\n\n\n## Service Variants\nNone\n\n## Service Dependencies\nNone\n\n## Service Composition\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Store Visa service on the ESB;\nESB Validate the request message sent by the consumer\nESB transforms the consumer request into TRIPS request which is a flat file and sends to TRIPS\nTRIPS returns response to the ESB\nESB transforms the TRIPS response to Consumer response and returns to consumer.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms Provider Error returned by TRIPS into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\n\n\n\n\n\n\n\n## Transformation\nSee SV351_v01.00_Micro.xls\n\n\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV355-CreateBorderSystemPersonIdentifier\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe Create Person Record service is used to Create a Person Record (PID) within TRIPS.\nTRIPS will NOT perform match using the given request data, A new record will be created and allocated a PID. \n\n\n## Service Behaviour\nThe consumer of this service invokes this service with persons bio details and travel document details to create a record in TRIPS. This service is used to force create a record of a person even if some of his details exists in TRIPS. For this service, TRIPS mandates the following:\nFamily Name\nBirth Year\nSex\nThis service returns newly created PID in TRIPS to Consumer. \n\n\n\n\n\n## Service Variants\nNone\n\n## Service Dependencies\nNone\n\n## Service Composition\nThis service is a composite service.\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Create Border System Person Identifier service on the ESB;\nESB Validate the request message sent by the consumer\nESB transforms the consumer request into TRIPS request which is a flat file and sends to TRIPS\nTRIPS returns response to the ESB\nESB transforms the TRIPS response to Consumer response and returns to consumer.\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms Provider Error returned by TRIPS into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nIf the service call was timeout, ESB should return SV355.MSG- E07 to the consumer.\n\n\n\n\n\n\n## Transformation\nSee DIMA_DCD d15 Service Specification SV355 - v0.1 Create Border System Person Identifier (TRIPS).xls\n\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV363-RetrieveVisaEntitlements\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retreieve Visa Entitlements and Conditions granted for an Applicant in relation to the GRANTED visa.\n\n"},{"filename":"Visa\/Services\/SV395-RetrieveICSEHealthIntegrityOfConcern\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve the health integrity concern details to the consumer. It includes all details including history. Only one single client is handled per service call.\nConsumer provides the Applicant Id (ICSE Client ID) in the request to retrieve health integrity concern details from the ICSE application.\n\n\n## Service Behaviour\nThe consumer of this service invokes this service with Applicant Id (ICSE Client ID). This service retrieves health integrity concern details from ICSE and returns to Consumer. Any exception raised will be returned to consumer as a soap-fault message. \n\n\n\n\n## Service Variants\nNone\n\n## Service Dependencies\nNone\n\n## Service Composition\nThis service is a composite service.\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Retrieve ICSE Health Integrity of Concern service on the ESB;\nESB transforms RetrieveICSEHealthIntegrityOfConcerntRequest to RetrieveHealthConcernRequest message and sends to ICSE.\nWhen RetrieveICSEHealthIntegrityOfConcernRequest message has ApplicantId as PARTY_ID, ESB call SV288 Retrieve Consolidated Party Identifiers Service to transform PartyId to ClientId. \nESB uses ClientId to call ICSE application.\nICSE returns RetrieveHealthConcernResponse to ESB.\nESB examines the RetrieveHealthConcernResponse Messages within to determine whether there is any error returned by ICSE, if so, use AF1.\nUse AF2 if SV288 returns error.\nESB transforms back from RetrieveHealthConcernResponse message to RetrieveICSEHealthIntegrityOfConcernResponse message.\nUse AF3 if ICSE request is timeout.\nESB returns health integrity concern details or error message(in case of exception raise) to Service Consumer\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms ICSE Error into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nThe following alternate service flow depicts the execution path that takes place when the service SV288 raises an error.\nESB detects that SV288 has returned an error \nESB transforms SV288 error into Enterprise Error Message. \nESB returns response with Enterprise Error to Consumer\nAlternate Flow 3 (AF3)\nIf the service call was timeout, ESB should return SV395.MSG-E00 to the consumer.\n\n\n\n## Transformation\nSee DIMA_DCD d15 Service Specification SV395- v0.1 Retrieve ICSE Health Integrity of Concern.xls\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV396-CloseICSEHealthIntegrityOfConcern\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to update the health integrity details of the consumer in ICSE application and returns an acknowledgment. \n\n\n## Service Behaviour\nThe consumer of this service invokes this service with the health integrity details along with the ApplicantId in the request to update the health Integrity details in ICSE. When successfully updated by ICSE an acknowledgment is return to consumer. Any exceptions raised were returned to the consumer as soap-fault with exception details.\n\n\n\n## Service Variants\nNone\n\n## Service Dependencies\nNone\n\n## Service Composition\nThis service is a composite service.\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the Close ICSE Health Integrity Of Concern service on the ESB;\nESB transforms CloseICSEHealthIntegrityOfConcernRequest to Request message and sends to ICSE.\nWhen CloseICSEHealthIntegrityOfConcernRequest message has ApplicationId as PARTY_ID, ESB call SV288 Modify Consolidated Party Identifiers Service to transform PartyId to ClientId. \nESB uses ClientId to call ICSE application.\nICSE returns Response to ESB.\nESB examines the Response Messages within to determine whether there is any error returned by ICSE, if so, use AF1.\nUse AF2 if SV288 returns error.\nESB transforms back from Response message to CloseICSEHealthIntegrityOfConcernResponse message.\nUse AF3 if ICSE request is timeout.\nESB returns health integrity concern details or error message(in case of exception raise) to Service Consumer\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\nESB transforms ICSE Error into Enterprise Error Message.\nESB returns response with Enterprise Error payload.\nAlternate Flow 2 (AF2)\nThe following alternate service flow depicts the execution path that takes place when the service SV288 raises an error.\nESB detects that SV288 has returned an error \nESB transforms SV288 error into Enterprise Error Message. \nESB returns response with Enterprise Error to Consumer\nAlternate Flow 3 (AF3)\nIf the service call was timeout, ESB should return SV396.MSG-E00 to the consumer.\n\n\n## Transformation\nTransformations\nDIMA_DCD d15 Service Specification - SV396 - v01.0 Close ICSE Health Integrity of Concern.xls\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV461-CacheProspectiveVisaApplicantDetails\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is consumed by skill select at the beginning of the eVisa lodgement process and provided by eLodgement. The external interface for this service is a WDSL named XS021 but is nothing additional other than the WSDL compliancy. For this documentation, SV461 service behaviour and XS021 behaviour can be considered one in the same. \n\n\n## Service Behaviour\nThis service provides eLodgement with the basics of the Visa Application and Applicant. The response from eLodgement provides for each Client the ApplicationClientId, Transaction ID List, Serial Number and the Role Code. \n\n\n## Service Variants\nXS021 is a direct derivative of this service.\n\n## Service Dependencies\n\n\n## Service Composition\nAn event is generated by the Service Consumer which invokes the CacheProspectiveVisaApplicantDetails service.\nSkill Select sends a compliant XS021 message to datapower. \nDatapower forwards this content as a compliant SV461 message where no transform is required on the content of the message. \n\n## Service Flow\nAlternate Flow 1 (AF1)\nThe following alternate service flow depicts the execution path that takes place when the primary provider raises an error.\neLodgement transforms ENTR0001 into Enterprise Error Message as unknown. No error messages have been provided as part of the requirements so all errors are returned as Unknown. \nDatapower returns response with Enterprise Error payload.\n\n## Transformation\nNo transformations exist for this service. \n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV467-RetrieveApplicantAuthorisedAgentAddress\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service allows the consumer to retrieve the address details of a specific Agent Address that is linked to a specific Visa Application Identifier\nThe execution of this service is a step that is likely to occur when a Client has authorised correspondence be sent by care of their authorised agent that is within their visa application.\n\n## Service Behaviour\nThe consumer of this service will provide the following identifier which can be used to uniquely identify a visa application:\nVisaApplicationId 1..1\nApplicantIdentifier 0..1\n\n## Service Variants\nNone\n## Service Dependencies\nIt is assumed that the service consumer has acquired a valid Visa Application Id, and optionally an Applicant Id from another source.\n"},{"filename":"Visa\/Services\/SV471-ValidateVisaApplication\/V2.0\/XSD\/README.md","contents":"## Service Usage\nOnline visa application applicant submits initial data including biographic details, entry document details and visa subclass specific details required to calculate eligibility. \n\nInitial data is submitted to the visa processing system which returns the following\n\n* Eligibility\n* Cost\n* Additional Data Capture Requirements\n"},{"filename":"Visa\/Services\/SV472-RegisterAPECVisaApplication\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to lodge APEC visa applications for non australian citizens who have been approved to apply from their home country.\n\n\n## Service Behaviour\nThe service follows the standard lodgement pattern which includes creating the application, matching or creating the client, registering identity documents and performing risk checks. In addition to this, the service also performs service code determination which is usually handled by a SV471 service call.\n## Transformation\nTransformation exists on the ESB between enterprise and ICSE eCommerce provider messages\n"},{"filename":"Visa\/Services\/SV472-RegisterVisaApplication\/V7.0\/XSD\/README.md","contents":"## Service Usage\nThe service is used to lodge visa application information captured through online channels into a visa processing system.\n## Transformation\nThe SV472 Request message is transformed into an ICSE eCommerce provider message.\nThe ICSE eCommerce provider message is transformed into a SV472 Response message\n"},{"filename":"Visa\/Services\/SV472-RegisterVisaApplicationExternal\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will be used by eLodgementPlus to lodge visa applications into ICSE that have been lodged by an external partner.\n## Transformation\nRequest Transformation:\n\nSV472 RegisterVisaApplicationExternalRequest > XSLT > ICSE eCommerce\n\nResponse Transformation:\n\nICSE eCommerce > XSLT > SV472 RegisterVisaApplicationExternalResponse\n"},{"filename":"Visa\/Services\/SV474-RetrieveVisaApplicationSummary\/V5.0\/XSD\/README.md","contents":"## Service Usage\nThis service retrieves application and applicant status, grant letter, required additional information, document checklist and referral status for online visa and citizenship applications.\n## Transformation\nTransformation exists on the ESB between enterprise and ICSE provider messages.\n"},{"filename":"Visa\/Services\/SV475-NotifyAttachedApplicantDocument\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used by eLodgement PLUS attachment function to notify the visa processing system of attachment events.\n\n"},{"filename":"Visa\/Services\/SV476-RetrieveVisaGrantNotificationLetter\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service retrieves Visa Grant Notification Letters from ICSE.\n"},{"filename":"Visa\/Services\/SV485-RetrieveVisaCancellationEvents\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service retrieves Visa Cancellation Events from ICSE\n"},{"filename":"Visa\/Services\/SV486-MaintainVisaCancellationEvents\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service provides an interface for maintaining Visa Cancellation Events. Consumers of this service will stop using SV330 Maintain Permission Request for maintaining Visa Cancellations.\nThis service interface will be used to create and maintain visa cancellation events in ICSE.\n\n\n\n\n\n\n\n## Service Behaviour\nThis service will create or modify an existing cancellation permission request in ICSE.\n\n\n\n\n\n\n\n\n\n## Service Variants\nNone\n## Service Dependencies\nNone\n\n## Service Composition\nThis is not a composite service.\n\n\n## Service Flow\nAn event is generated by the Service Consumer which invokes the MaintainVisaCancellationEvents service on the ESB by sending Maintain Visa Cancellation request message.\nESB validates and transforms Maintain Visa Cancellation request message into Business Transaction Request, and sends the message to ICSE.\nICSE validates and processes the request, and sends the Business Transaction Response message back to ESB.\nESB validates and transforms the Business Transaction Response message to Maintain Visa Cancellation Response, and sends the message back to the Service Consumer.\nException Flow 1\nIf any of the exception scenarios listed in Section 4 Return Codes and Messages an exception message is send back to the consumer.\n\n\n\n\n\n## Service State Management Decisions\nNo state management required.\n\n"},{"filename":"Visa\/Services\/SV499-NotifyAPECVisaApplicationFinalisation\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is invoked to notify the status of a recorded finalised event from an eLodged ABTC application. \n\n## Service Behaviour\nABTC Application IDentifier is a combination of Home Economy and Application Number.\n"},{"filename":"Visa\/Services\/SV569-UpdateApplicantPreferredTravelDocument\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service associates a Travel Document to an Appicant on a Visa Application as well as register the travel document in ISR.\n\n"},{"filename":"Visa\/Services\/SV629-VerifyVisaAssociatedImmiCard\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service verifies if the details of a immi card provided are associated with a valid visa that the department holds in it's records.\n## Service Behaviour\nThe consumer sends a request with details of the Australian Immi Card to be verified. The provider will send a response status (yes\/no\/error) which confirms if the details provided match a document held in our records. This service accepts inbound requests from external agencies (ie. it is the provider for the DVS service). In the case of an external request from DVS, the VerificationRequestIdentifier, VerificationRequestDateTime, VerificationRequestorAgency and VerificationRequestDocumentType elements are mandatory. For all outbound calls, the WSGW will generate the DVS mandated elements VerificationRequestNumber, VersionNumber, VerificationRequestDateTime and VerificationRequestorAgency during the transform into the DVS provider message.\n## Service Flow\n1. Consumer sends an enterprise SV629 request message to the ESB.\n2. ESB transforms the enterprise message into an internal DVS message.\n3. ESB sends the internal DVS message to the WSGW.\n4. WSGW transforms the internal DVS message into an external DVS message.\n5. WSGW sends the external DVS message to Oakton\/DVS.\n6. Oakton respond to the ESB via WSGW with a generic Verification Response message.\n7. The generic response message is transformed into a SV629 response.\n## Transformation\nTransformation exists on the ESB between enterprise and legacy internal DVS messages. The internal DVS messages are transformed into the external DVS messages on the WSGW.\n"},{"filename":"Visa\/Services\/SV629-VerifyVisaAssociatedTravelDocument\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThe service verifies if the details of a travel document provided are associated with a valid visa that the department holds in it's records.\n## Service Behaviour\nThe consumer sends a request with details of the Australian Visa to be verified. The provider will send a response status (yes\/no\/error) which confirms if the details provided match a document held in our records. This service accepts inbound requests from external agencies (ie. it is the provider for the DVS service). In the case of an external request from DVS, the VerificationRequestIdentifier, VerificationRequestDateTime, VerificationRequestorAgency and VerificationRequestDocumentType elements are mandatory. For all outbound calls, the WSGW will generate the DVS mandated elements VerificationRequestNumber, VersionNumber, VerificationRequestDateTime and VerificationRequestorAgency during the transform into the DVS provider message.\n## Service Flow\n1. Consumer sends an enterprise SV629 request message to the ESB.\n2. ESB transforms the enterprise message into an internal DVS message.\n3. ESB sends the internal DVS message to the WSGW.\n4. WSGW transforms the internal DVS message into an external DVS message.\n5. WSGW sends the external DVS message to Oakton\/DVS.\n6. Oakton respond to the ESB via WSGW with a generic Verification Response message.\n7. The generic response message is transformed into a SV629 response.\n## Transformation\nTransformation exists on the ESB between enterprise and legacy internal DVS messages. The internal DVS messages are transformed into the external DVS messages on the WSGW.\n"},{"filename":"Visa\/Services\/SV634-ValidateBusinessSponsorshipUpdate\/V2.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to validate information which is being submitted as part of a notification of sponsorship change.\n## Service Behaviour\nThe service will validate the following: 1. The business service identifier provided exists and is related to a sponsorship application. 2. If nomination information is provided - that the business service identifier provided exists, is related to a nomination application, and that nomination application is associated with the sponsorship provided. 3. The nominees date of birth provided matches that of the primary applicant record on the nomination.\n## Transformation\nTransformation exists on the ESB to transform enterprise messages into and from MaintainSponsorshipDetails provider messages for ICSE.\n"},{"filename":"Visa\/Services\/SV635-NotifyBusinessSponsorshipUpdate\/V2.0\/XSD\/README.md","contents":"## Service Usage\nAn approved Standard Business Sponsor (SBS) is required to meet certain sponsorship obligations. This service is used to notify subscribers of changes to their details in the context of a sponsorship application. Details which can be updated by the sponsor can include contact information, management roles, trading name, annual turnover figures, evidence checklists and the associated application contact.\n## Service Behaviour\nThis is an asynchronous service. The response payload will contain a success flag and the associated TRN\/PRN of the application which has been updated. If there are any errors returned from the subscriber, a SOAP fault will be returned to the publisher.\n## Transformation\nEnterprise messages routed to ICSE are transformed on the ESB into an ICSE provider BusinessTransactionRequest.xsd message\n"},{"filename":"Visa\/Services\/SV644-RetrieveTravelAuthorityApplication\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to retrieve details of an Electronic Travel Authority (ETA) application.\n## Transformation\nTransformation exists on the ESB between ICSE provider and enterprise messages.\n"},{"filename":"WorkManagement\/Services\/SV102-AllocateWorkItem\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is to assign the Task to a User and return the full details of the Task\n"},{"filename":"WorkManagement\/Services\/SV103-CompleteWorkItem\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is used to de-allocate the User from a Task.\n\n"},{"filename":"WorkManagement\/Services\/SV104-NotifyWorkItem\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service is designed to be used by any subscriber wishing to get notification of a Work Unit being created, deleted or updated. The first implementation suits the needs of the Visa Risk Porject integration with ICSE.\n"},{"filename":"WorkManagement\/Services\/SV478-NotifyRefreshWorkItemCache\/V1.0\/XSD\/README.md","contents":"## Service Usage\nRetrieve Group (i.e. folders and labels) and\/or Allocation Point data (including allocation history) about a Work Item.\n"},{"filename":"WorkManagement\/Services\/SV479-RetrieveWorkItemAllocationManagementDetails\/V1.0\/XSD\/README.md","contents":"## Service Usage\nRetrieve Group (i.e. folders and labels) and\/or Allocation Point data (including allocation history) about a Work Item.\n"},{"filename":"WorkManagement\/Services\/SV480-RetrieveWorkUnitDetails\/V1.0\/XSD\/README.md","contents":"## Service Usage\nRetrieve information about an allocation point.\n"},{"filename":"WorkManagement\/Services\/SV480-RetrieveWorkUnitList\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service will return a list of work units which are associated with another work unit, business service identifier or departmental officer - as specified by the consumer. \n\n## Service Behaviour\nThe consumer can provide a work unit identifier for which the provider would return a single match. If a business service identifier or departmental officer is provided, the provider may return zero or many work unit results. \n\n"},{"filename":"WorkManagement\/Services\/SV537-CreateWorkItemsBatch\/V1.0\/XSD\/README.md","contents":"## Service Usage\nWM will pass a list of Permission Request ids to ICSE to group (create a batch). ICSE will return to WM a batch ID. This is an existing functionality in ICSE. This is available via the ICSE UI. This service will expose the functionality to WM.\n"},{"filename":"WorkManagement\/Services\/SV538-NotifyBusinessServiceWorkAllocationUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nWM will notify updates to the Work Item i.e. Allocation point, associated labels\/folders.\n"},{"filename":"WorkManagement\/Services\/SV539-NotifyWorkItemDetailsUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nWhen Business data in ICSE changes, ICSE sends updates to the application cached in WM. (the application data would have been previously cached in WM via SV102). \n\nWM is responsible retrying the updates if there are any issues\n"},{"filename":"WorkManagement\/Services\/SV539-NotifyWorkItemUpdate\/V1.0\/XSD\/README.md","contents":"## Service Usage\nThis service notifies work management of Work items along with associations to other business dealings and roles. Within these associtaions two levels of filters can be applied that are used by WMAN and consumers to search and filter data as groups of work items. This allows flexability to create as many filters as business areas require but only used on the cotext of filters. The Work Item can be referenced by the Business Service ID or the Work Item Id for updates.\n"}]}}